{
  "resourceType": "Library",
  "id": "HIVScreening",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.10.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": false
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  } ],
  "url": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVScreening",
  "name": "HIVScreening",
  "title": "Library - HIV Screening",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "subjectCodeableConcept": {
    "coding": [ {
      "system": "http://hl7.org/fhir/ValueSet/subject-type",
      "version": "4.0.1",
      "code": "Patient",
      "display": "Patient"
    } ]
  },
  "date": "2021-05-12T00:00:00-07:00",
  "publisher": "National Association of Community Health Centers, Inc. (NACHC)",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "https://www.nachc.org/"
    } ]
  } ],
  "description": "Logic library for implementation of the CDC HIV Screening Recommendation.",
  "useContext": [ {
    "code": {
      "system": "http://hl7.org/fhir/usage-context-type",
      "version": "4.0.1",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://hl7.org/fhir/sid/icd-10-cm",
        "version": "2021",
        "code": "B20",
        "display": "Human immunodeficiency virus [HIV] disease"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://hl7.org/fhir/ValueSet/iso3166-1-3",
      "version": "4.0.1",
      "code": "USA",
      "display": "United States of America"
    } ]
  } ],
  "purpose": "The purpose of this is to implement a Clinical Decision Support Workflow via CDS-Hooks to establish the CDC's HIV Screening Recommendation.",
  "usage": "This is to be used in conjunction with a patient-facing FHIR application.",
  "copyright": "Â© Copyright National Association of Community Health Centers, Inc. (NACHC) 2021+.",
  "topic": [ {
    "coding": [ {
      "system": "http://hl7.org/fhir/ValueSet/definition-topic",
      "version": "4.0.1",
      "code": "assessment",
      "display": "Assessment"
    } ],
    "text": "HIV Management"
  } ],
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library HC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVCommon"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Library HDE",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVDataElements"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMED-CT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Code system Observation Interpretation",
    "resource": "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system Extended Codes CodeSystem",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionVerificationStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionClinicalStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-clinical"
  }, {
    "type": "depends-on",
    "display": "Code system NIDA",
    "resource": "https://cde.drugabuse.gov"
  }, {
    "type": "depends-on",
    "display": "Value set HIV-1 HIV 2 Ab Ag tests Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Observations Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de905"
  }, {
    "type": "depends-on",
    "display": "Value set Gay Or Bisexual",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/GayOrBisexual"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Type Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Encounters Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Third Trimester Encounters Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
  }, {
    "type": "depends-on",
    "display": "Value set HIV infection as a condition Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": "http://fhir.org/guides/cqf/common/ValueSet/active-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Prep Medication Prescriptions Codes Grouper",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/preexposure-prophylaxis-meds"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Diagnosis Codes Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis Diagnosis Codes Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1-codes-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Diagnosis Codes Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1-codes-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Diagnosis Codes Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Drug Rehabilitation Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use Diagnosis Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de16"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de201"
  }, {
    "type": "depends-on",
    "display": "Value set Transgender",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/Transgender"
  }, {
    "type": "depends-on",
    "display": "Value set Tuberculosis (Disorders) (ICD10CM)",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.451"
  } ],
  "parameter": [ {
    "name": "Reference Date",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "HIV Higher Prevalence States and Territories",
    "use": "in",
    "min": 0,
    "max": "*",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "There is an HIV test after the most recent positive pregnancy test",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Alive",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Gay or Bisexual",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Name",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient is between 13 and 64 years old",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Encounter",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Encounter"
  }, {
    "name": "Patient is Seeking Treatment for an STD",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Meets Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "HIV Screening Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient has had an HIV Test",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active diagnosis of HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Never Tested Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Never Tested Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Never Tested Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Never Tested Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "No HIV Test in the last year",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "No HIV Test in the last three months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Male",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has sex with men",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "On pre-exposure prophylaxis",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "MSM Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "MSM Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "MSM Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "MSM Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "There is a positive pregnancy test in the last 40 weeks",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant but no HIV test during pregnancy",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Estimated Date of Delivery",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "First Eay of Third Trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "State of Residence Present in Patient Record",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Lives In State with Higher HIV Prevalence",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "There is an HIV test during the third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Resides a high prevalence state and has not had an HIV test in the third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Sex partner has HIV or uses intravenous drugs and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Intravenous drug user and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient who exchanges sex for money or drugs and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Multiple Sex Partners",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient with multiple partners and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient with a new sex partner during pregnancy and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "No state of residence on record and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Pregnant Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Pregnant Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Seeking STD Treatment Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Previous HIV Screening Test",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Over 3 Months has Passed Since Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Seeking STD Treatment Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Seeking STD Treatment Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Seeking STD Treatment Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Active Diagnosis of HCV During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active Diagnosis of Syphilis During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active Diagnosis of Gonorrhea During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active Diagnosis of Chlamydia During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to a STD",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Injection Drug Use",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "DAST 10 Result Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "DAST 10 High Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "All DAST 10 Questions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Questions Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Patient Has High Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Sexual Partner having HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to exchanging sex for money or drugs",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Multiple Sex Partners since last screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Transgender",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Transgender Patient Sexually Active With Men",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Documented Sexually Inactive",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Male and (Gay or Bisexual) Patient Not Documented Sexually Inactive",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at Moderate Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Over a Year has Passed Since Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Risk Level Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Risk Level Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Risk Level Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HivTestOnOrBeforeTbDiagnosis",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active diagnosis of Tuberculosis?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Tuberculosis Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Tuberculosis Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Tuberculosis Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Tuberculosis Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HIV Test Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "HIV Test Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HIV Test Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HIV Test Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Age",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Days Since Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Patient is Female",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at No Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at Low Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "PatientEncounterPeriodStart",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "PatientEncounterPeriodEnd",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "SeekingTreatmentDate",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "dateTime"
  }, {
    "name": "Patient is at First Prenatal Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a sexually active MSM without HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a sexually active MSM with Multiple Sex Partners",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a sexually active MSM who should be Screened Every 3 Months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Latest DAST 10 Questions Date",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "Latest DAST 10 Screening Date",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "DAST 10 Moderate Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Patient Has Moderate Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "DAST 10 Low Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Patient Has Low Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Has Low To Moderate Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "DAST 10 No Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Patient Has No Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Not Screened For Drug Abuse Or Screening Expired",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de905"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value", "interpretation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de905"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "76690-7",
        "display": "Sexual orientation"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "76690-7",
        "display": "Sexual orientation"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "value" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE1",
        "display": "Previous HIV Screening"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/preexposure-prophylaxis-meds"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication.reference" ]
  }, {
    "type": "Medication",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Medication" ],
    "mustSupport": [ "id" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value", "interpretation", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de905"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "161714006",
        "display": "Estimated date of delivery (observable entity)"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "state" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "266974005",
        "display": "Human immunodeficiency virus risk lifestyle (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "228388006",
        "display": "Intravenous drug user (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "159798008",
        "display": "Exchanges sex for money or drugs (occupation)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "225516002",
        "display": "Multiple Sexual Contact (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "771458000",
        "display": "New sexual contact (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE1",
        "display": "Previous HIV Screening"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE4",
        "display": "Patient Diagnosed with HCV"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE4",
        "display": "Patient Diagnosed with HCV"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE5",
        "display": "Patient Diagnosed with Syphilis"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1-codes-grouper"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE5",
        "display": "Patient Diagnosed with Syphilis"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE6",
        "display": "Patient Diagnosed with Gonorrhea"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1-codes-grouper"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE6",
        "display": "Patient Diagnosed with Gonorrhea"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE7",
        "display": "Patient Diagnosed with Chlamydia"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE7",
        "display": "Patient Diagnosed with Chlamydia"
      } ]
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.F1.DE12",
        "display": "Injection Findings"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de16"
    } ]
  }, {
    "type": "MedicationStatement",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationStatement" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de201"
    } ]
  }, {
    "type": "MedicationStatement",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationStatement" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de201"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE8",
        "display": "Patient has used Injection Drugs"
      } ]
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.F1.DE12",
        "display": "Injection Findings"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de16"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE8",
        "display": "Patient has used Injection Drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "82667-7",
        "display": "Total Score [DAST-10]"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254039",
        "display": "Have you used drugs other than those required for medical reasons"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254057",
        "display": "Do you use more than one drug at a time"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254058",
        "display": "Are you always able to stop using drugs when you want to"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254061",
        "display": "Have you had blackouts or flashbacks as a result of drug use"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254063",
        "display": "Do you ever feel bad or guilty about your drug use"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254065",
        "display": "Does your spouse (or parents) ever complain about your involvement with drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254066",
        "display": "Have you neglected your family because of your use of drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254067",
        "display": "Have you engaged in illegal activities in order to obtain drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254070",
        "display": "Have you ever experienced withdrawal symptoms (felt sick) when you stopped taking drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254072",
        "display": "Have you had medical problems as a result of your drug use (e.g., memory loss, hepatitis, convulsions, bleeding, etc.)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE19",
        "display": "Sexual Activity - Partners HIV History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE19",
        "display": "Sexual Activity - Partners HIV History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE21",
        "display": "Sexual Activity - Exchanged for Sex"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE21",
        "display": "Sexual Activity - Exchanged for Sex"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE15",
        "display": "Sexual Activity - Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE18",
        "display": "Sexual Activity - Partners Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE1",
        "display": "Previous HIV Screening"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE15",
        "display": "Sexual Activity - Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE18",
        "display": "Sexual Activity - Partners Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "76691-5",
        "display": "Gender identity"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE11",
        "display": "Sexual Activity - Past Year"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE12",
        "display": "Sexual Activity - History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "472986005",
        "display": "Sexually active with men (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE14",
        "display": "Sexual Activity - Women"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE11",
        "display": "Sexual Activity - Past Year"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE12",
        "display": "Sexual Activity - History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "472986005",
        "display": "Sexually active with men (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE14",
        "display": "Sexual Activity - Women"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.451"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective", "value" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status", "id" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "161714006",
        "display": "Estimated date of delivery (observable entity)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "225516002",
        "display": "Multiple Sexual Contact (finding)"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.451"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBISVZTY3JlZW5pbmcKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJDb21tb24gY2FsbGVkIEZDCmluY2x1ZGUgTkFDSENDb21tb24gY2FsbGVkIE5DCmluY2x1ZGUgSElWQ29tbW9uIGNhbGxlZCBIQwppbmNsdWRlIEhJVkNvbmNlcHRzIGNhbGxlZCBDeAppbmNsdWRlIEhJVkRhdGFFbGVtZW50cyBjYWxsZWQgSERFCgpwYXJhbWV0ZXIgIlJlZmVyZW5jZSBEYXRlIiBEYXRlVGltZSAgLy8gY2FuIHVzZSB2YWx1ZXMgc3VjaCBhcyBOb3coKSBvciBhIGRhdGUgbGlrZSBAMjAyNC0wMS0wMVQwMDowMDowMC0xMDowMAogIC8vIGRlZmF1bHQgQDIwMjQtMDEtMDFUMDA6MDA6MDAtMTA6MDAgLy8gZm9yIHRlc3Rpbmcgd2l0aGluIEV4ZWN1dGVDUUwKICBkZWZhdWx0IE5vdygpIAoKCi8vIHBhcmFtZXRlciAiVHJ1ZSIgZGVmYXVsdCB0cnVlCi8vIHBhcmFtZXRlciAiUm91dGluZSIgZGVmYXVsdCAncm91dGluZScKCi8vIHBhcmFtZXRlciAiQXNhcCIgZGVmYXVsdCAnYXNhcCcKLy8gcGFyYW1ldGVyICJVcmdlbnQiIGRlZmF1bHQgJ3VyZ2VudCcKLy8gcGFyYW1ldGVyICJTdGF0IiBkZWZhdWx0ICdzdGF0JwovLyBwYXJhbWV0ZXIgIkVycm9ycyIgZGVmYXVsdCBudWxsCnBhcmFtZXRlciAiSElWIEhpZ2hlciBQcmV2YWxlbmNlIFN0YXRlcyBhbmQgVGVycml0b3JpZXMiIGRlZmF1bHQgeyAnVkknLCAnTVMnLCAnTlYnLCAnVFgnLCAnRkwnLCAnTEEnLCAnR0EnLCAnREMnIH0KCi8vIHBhcmFtZXRlciAiUm91dGluZSIgZGVmYXVsdCAncm91dGluZScKLy8gcGFyYW1ldGVyICJOZXZlciB0ZXN0ZWQiIGRlZmF1bHQgZmFsc2UKLy8gcGFyYW1ldGVyICJQcmVnbmFudCIgZGVmYXVsdCBmYWxzZQovLyBwYXJhbWV0ZXIgIkhhcyBTVEQiIGRlZmF1bHQgZmFsc2UKLy8gcGFyYW1ldGVyICJNU00iIGRlZmF1bHQgZmFsc2UKLy8gcGFyYW1ldGVyICJBdCByaXNrIiBkZWZhdWx0IGZhbHNlCgpjb250ZXh0IFBhdGllbnQKCi8vIERIIC0gYW4gb3JnYW5pemluZyBwcmluY2lwbGUgLS0gd2hpY2ggc2VlbXMgdG8gbm90IGJlIHVzZWZ1bGUgOygpCi8vIGRlZmluZSAiQ29uZGl0aW9uIE9yZ2FuaXplciI6Ci8vICAgaWYgIk5ldmVyIFRlc3RlZCBDb25kaXRpb24iIHRoZW4gJ05ldmVyIHRlc3RlZCcKLy8gICBlbHNlIGlmICJQcmVnbmFudCBDb25kaXRpb24iIHRoZW4gJ1ByZWduYW50JwovLyAgIGVsc2UgaWYgIlNlZWtpbmcgU1REIFRyZWF0bWVudCBDb25kaXRpb24iIHRoZW4gJ0hhcyBTVEQnCi8vICAgZWxzZSBpZiAiTVNNIENvbmRpdGlvbiIgdGhlbiAnTVNNJwovLyAgIGVsc2UgaWYgIlJpc2sgTGV2ZWwgQ29uZGl0aW9uIiB0aGVuICdBdCByaXNrJwovLyAgIGVsc2UgJ0hJViBzY3JlZW5pbmcgdGVzdCBub3QgbmVlZGVkLicKCmRlZmluZSAiVGhlcmUgaXMgYW4gSElWIHRlc3QgYWZ0ZXIgdGhlIG1vc3QgcmVjZW50IHBvc2l0aXZlIHByZWduYW5jeSB0ZXN0IjoKICBleGlzdHMgKCBIREUuIkhJViBUZXN0cyIgKQogICAgYW5kIExhc3QoSERFLiJISVYgVGVzdHMiKS5lZmZlY3RpdmUgPiBMYXN0KEhERS4iUG9zaXRpdmUgUHJlZ25hbmN5IE9ic2VydmF0aW9ucyIpLmVmZmVjdGl2ZQoKLy8gZGVmaW5lICJUaGVyZSBpcyBhbiBISVYgdGVzdCBwZXJmb3JtZWQgYWZ0ZXIgdGhlIGRpYWdub3NpcyBvZiB0dWJlcmN1bG9zaXMiOgovLyAgIGV4aXN0cyhIREUuIkhJViBUZXN0cyIpIGFuZAovLyAgIExhc3QoSERFLiJISVYgVGVzdHMiKS5lZmZlY3RpdmUgPiBGaXJzdChIREUuIlR1YmVyY3Vsb3NpcyBkaWFnbm9zaXMiKS5vbnNldCAvLyBFdmVuIGlmIHRoZXJlIGlzIG9ubHkgb25lICJUdWJlcmN1bG9zaXMgZGlhZ25vc2lzIiB5b3Ugc3RpbGwgbmVlZCBhIEZpcnN0IG9yIExhc3QgYmVmb3JlIGl0CgpkZWZpbmUgIkFsaXZlIjoKICBjYXNlIAogICAgLy8gd2hlbiBQYXRpZW50LmRlY2Vhc2VkID0gdHJ1ZSB0aGVuIGZhbHNlIC8vcmVkdW5kYW50CiAgICAKICAgIHdoZW4gUGF0aWVudC5kZWNlYXNlZCA9IGZhbHNlIHRoZW4gdHJ1ZQogICAgLy8gd2hlbiAiTnVsbCBQYXRpZW50LmRlY2Vhc2VkIGFzc3VtZWQgdG8gbWVhbiBhbGl2ZSIgPSB0cnVlIGFuZCBQYXRpZW50LmRlY2Vhc2VkIGlzIG51bGwgdGhlbiB0cnVlIC8vIGRlZmF1bHQgaXMgZmFsc2UuIFlvdSdyZSBkZWFkIHVubGVzcyB5b3UncmUgZXhwcmVzc2x5IG5vdC4gCiAgCiAgICBlbHNlIGZhbHNlIGVuZAoKZGVmaW5lIEFjdGl2ZToKICBpZiBQYXRpZW50LmFjdGl2ZSA9IHRydWUgdGhlbiB0cnVlIAogICAgZWxzZSBmYWxzZQoKLy8gLy9mb3IgdHJvdWJsZXNob29naW5nCi8vIGRlZmluZSAiSERFREFTVDEwU2NvcmUiOgovLyAgIEhERS4iREFTVCAxMCBTY29yZSIKCi8vIGRlZmluZSAiSERFU2V4dWFsIE9yaWVudGF0aW9uIGNvZGUiOgovLyAgIEhERS4iU2V4dWFsIE9yaWVudGF0aW9uIi5jb2RpbmcuY29kZS52YWx1ZQoKLy8gZGVmaW5lICJIREVTZXh1YWwgT3JpZW50YXRpb24gY29kZSBzaW5nbGUiOgovLyAgIHNpbmdsZXRvbiBmcm9tIChIREUuIlNleHVhbCBPcmllbnRhdGlvbiIuY29kaW5nLmNvZGUudmFsdWUpCgovLyBkZWZpbmUgIkhERVNleHVhbCBPcmllbnRhdGlvbiBzeXN0ZW0iOgovLyAgIEhERS4iU2V4dWFsIE9yaWVudGF0aW9uIi5jb2Rpbmcuc3lzdGVtLnZhbHVlCgovLyBkZWZpbmUgIkN4R2F5IE9yIEJpc2V4dWFsIjoKLy8gICBDeC4iR2F5IE9yIEJpc2V4dWFsIgoKLy8gZGVmaW5lICJQYXRpZW50IGlzIEdheSBvciBCaXNleHVhbCI6CiAgLy8gc2luZ2xldG9uIGZyb20gKEhERS4iU2V4dWFsIE9yaWVudGF0aW9uIi5jb2RpbmcpIGluIEN4LiJHYXkgT3IgQmlzZXh1YWwiCgpkZWZpbmUgIlBhdGllbnQgaXMgR2F5IG9yIEJpc2V4dWFsIjoKICBleGlzdHMgKCBIREUuIlNleHVhbCBPcmllbnRhdGlvbiIuY29kaW5nICkgTwogICAgd2hlcmUgKCBPIGluIEN4LiJHYXkgT3IgQmlzZXh1YWwiICkKCi8vIGRlZmluZSAiSW5mbyI6Ci8vICAgJ2luZm8nCgovLyBkZWZpbmUgIldhcm5pbmciOgovLyAgICd3YXJuaW5nJwoKLy8gZGVmaW5lICJDcml0aWNhbCI6Ci8vICAgJ2NyaXRpY2FsJwoKLy8gZGVmaW5lICJUcnVlIjoKLy8gICB0cnVlCgovLyBkZWZpbmUgIlJvdXRpbmUiOgovLyAgICdyb3V0aW5lJwoKLy8gZGVmaW5lICJBc2FwIjoKLy8gICAnYXNhcCcKCi8vIGRlZmluZSAiVXJnZW50IjoKLy8gICAndXJnZW50JwoKLy8gZGVmaW5lICJTdGF0IjoKLy8gICAnc3RhdCcKCi8vIGRlZmluZSAiRXJyb3JzIjoKLy8gICBudWxsCgovLyBkZWZpbmUgIlBhdGllbnROYW1lR2l2ZW4iOgovLyBQYXRpZW50Lm5hbWUuZ2l2ZW4KCi8vIGRlZmluZSAiUGF0aWVudE5hbWVGYW1pbHkiOgovLyBQYXRpZW50Lm5hbWUuZmFtaWx5CgovLyBkZWZpbmUgIlBhdGllbnQgTmFtZSI6Ci8vICAgRmlyc3QoUGF0aWVudC5uYW1lLmdpdmVuLnZhbHVlKQovLyAgICArICcgJyArCi8vICAgRmlyc3QoUGF0aWVudC5uYW1lLmZhbWlseS52YWx1ZSkKCmRlZmluZSAiUGF0aWVudCBOYW1lIjoKICBGaXJzdChGaXJzdChQYXRpZW50Lm5hbWUpLmdpdmVuLnZhbHVlKSArICcgJyArIEZpcnN0KFBhdGllbnQubmFtZSkuZmFtaWx5LnZhbHVlCgovLyBkZWZpbmUgIlBhdGllbnQgTmFtZSBJcyBTdHJpbmciOgovLyAgICJQYXRpZW50IE5hbWUiIGlzIFN0cmluZwoKLyogUmVjb21tZW5kYXRpb24gQ3JpdGVyaWEgLSBISVYgU2NyZWVuaW5nICAqLwoKZGVmaW5lICJNZWV0cyBJbmNsdXNpb24gQ3JpdGVyaWEiOgogICJQYXRpZW50IGlzIGJldHdlZW4gMTMgYW5kIDY0IHllYXJzIG9sZCIKICAgIG9yICJQYXRpZW50IGlzIFNlZWtpbmcgVHJlYXRtZW50IGZvciBhbiBTVEQiCgovLyBkZWZpbmUgIk1lZXRzIEV4Y2x1c2lvbiBDcml0ZXJpYSI6Ci8vICAgIkFjdGl2ZSBkaWFnbm9zaXMgb2YgSElWIgoKLy8gZGVmaW5lICJJbiBQb3B1bGF0aW9uIjoKLy8gICAiTWVldHMgSW5jbHVzaW9uIENyaXRlcmlhIgovLyAgICAgYW5kIG5vdCAiQWN0aXZlIGRpYWdub3NpcyBvZiBISVYiCgovKiBPUFRJT05TOgoKICAgIDEuIFJlY29tbWVuZCBTY3JlZW5pbmcgMyBtb250aHMgKEhpZ2ggUmlzayAtIENEQyBSaXNrIEZhY3RvcnMpCiAgICAyLiBSZWNvbW1lbmQgU2NyZWVuaW5nIEFubnVhbGx5IChNb2RlcmF0ZSBSaXNrIC0gU09HSSBSaXNrIEZhY3RvcnMpCiAgICAzLiBObyBSZWNvbW1lbmRhdGlvbiBTY3JlZW5pbmcgKE5vIFJpc2spIC8gTG93IFJpc2sKICAgIDQuIFJlY29tbWVuZCBTY3JlZW5pbmcgQ3VzdG9tIFBlcmlvZHMgKDMgbW9udGhzIGJhc2VkIG9uIHNwZWNpZmljIHJpc2sgZmFjdG9yIC0tIHNleHVhbGx5IGFjdGl2ZSBNU00gdy8gcHJlcCwgZXRjKQogICAgICAvLyBNU00gLyBQcmVnbmFuY3kgLyBDREMgUmVjb21tZW5kYXRpb24KCiAgLy8gLSBIaWdoIFJpc2sKICAgIC8vIENEQyBSSVNLIEZBQ1RPUlMKICAgIC8vIERydWcgQWJ1c2UgKERBU1QtMTApCgogIC8vIC0gTWVkaXVtIFJpc2sKICAgIC8vIFNPR0kgRUxFTUVOVFMKCiAgLy8gLSBObyBSaXNrCiAgICAvLyBEb2N1bWVudGVkIG5vdCBTZXh1YWxseSBBY3RpdmUgKFJpc2sgRmFjdG9ycyBRdWVzdGlvbm5haXJlIERFIDEzIC8gMTQpCgogIC8vIC0gTG93IFJpc2sKICAgIC8vIERFRkFVTFQKCiAgLy8gVEVTVCBPUkRFUjoKICAgIE5lZWRzIEFjdGl2aXR5RGVmaW5pdGlvbiBpbiB0aGUgUGxhbkRlZmluaXRpb24uCiAgICBOZWVkIHRvIGJlIGFibGUgdG8gc3BlY2lmeSB3aGF0IHRoZXkgYXJlIG9yZGVyaW5nIGluIHRoZSBjb25maWd1cmF0aW9uLgogICAgU2VydmljZVJlcXVlc3QgdXNpbmcgRGF0YSBFbGVtZW50IE9yZGVyZWQgQ29kZXMKCgogIC8vIFRPRE86CiAgU25vb3plIE9wdGlvbnMgLyBPdmVycmlkZToKICAgIEFjY2VwdCAtIFBsYWNlIG9yZGVyCiAgICBEb2N1bWVudCBUZXN0IC0gQUNUSU9OOiBRdWVzdGlvbm5haXJlIHRvIHN1cHBvcnQgZG9jdW1lbnRpbmcgdGVzdAogICAgU25vb3plIC0gMSBtb250aAogICAgU25vb3plIC0gMTIgbW9udGhzCiAgICBQYXRpZW50IERlY2xpbmVkIC0gQUNUSU9OOiBEb2N1bWVudCBwYXRpZW50IHByZWZlcmVuY2UKCiovCgovKgoKT1JERVI6CiAgMS4gTmV2ZXIgVEVTVEVECiAgMi4gQ0RDIEVkZ2UgQ2FzZXMgKE1TTSAmIFByZWduYW5jeSkKICAzLlJpc2sgU2NvcmluZwogICAgYS4gSGlnaCBSaXNrCiAgICBiLiBNb2RlcmF0ZSBSaXNrCiAgICBjLiBMb3cgUmlzayAvIE5vIFJpc2sKCiovCgovLyBORVZFUiBURVNURUQKCgoKCmRlZmluZSAiTmV2ZXIgVGVzdGVkIENvbmRpdGlvbiI6CiAgaWYgKCAKICAgICAgIlBhdGllbnQgaXMgYmV0d2VlbiAxMyBhbmQgNjQgeWVhcnMgb2xkIgogICAgICBhbmQgbm90ICJQYXRpZW50IGhhcyBoYWQgYW4gSElWIFRlc3QiCiAgICAgIGFuZCBub3QgIkFjdGl2ZSBkaWFnbm9zaXMgb2YgSElWIgogICAgICkgCiAgdGhlbiB0cnVlIAogIGVsc2UgZmFsc2UKCmRlZmluZSAiTmV2ZXIgVGVzdGVkIFJlY29tbWVuZGF0aW9uIjogLy8gaS5lLiByZWNvbW1lbmRlZCBiZWNhdXNlLi4uCiAgaWYgIk5ldmVyIFRlc3RlZCBDb25kaXRpb24iIHRoZW4gCiAgJ1xyXG4gLSBUaGlzIHBhdGllbnQgaGFzIG5ldmVyIGJlZW4gdGVzdGVkIGZvciBISVYuJyAKICAgIGVsc2UgJycKCmRlZmluZSAiTmV2ZXIgVGVzdGVkIFJhdGlvbmFsZSI6CiAgaWYgIk5ldmVyIFRlc3RlZCBDb25kaXRpb24iIHRoZW4gCiAgICAvLyAnXHJcbiAtIENEQyByZWNvbW1lbmRzIHRoYXQgZGlhZ25vc3RpYyBISVYgdGVzdGluZyBhbmQgb3B0LW91dCBISVYgc2NyZWVuaW5nIGJlIGEgcGFydCBvZiByb3V0aW5lIGNsaW5pY2FsIGNhcmUgaW4gYWxsIGhlYWx0aC1jYXJlIHNldHRpbmdzIHdoaWxlIGFsc28gcHJlc2VydmluZyB0aGUgcGF0aWVudHMgb3B0aW9uIHRvIGRlY2xpbmUgSElWIHRlc3RpbmcgYW5kIGVuc3VyaW5nIGEgcHJvdmlkZXItcGF0aWVudCByZWxhdGlvbnNoaXAgY29uZHVjaXZlIHRvIG9wdGltYWwgY2xpbmljYWwgYW5kIHByZXZlbnRpdmUgY2FyZS4nCiAgJ1xyXG4gLSBBbGwgcGF0aWVudHMgYWdlIDEzIHRvIDY0IHllYXJzIChpbmNsdXNpdmUpIHNob3VsZCBiZSB0ZXN0ZWQgZm9yIEhJViBhdCBsZWFzdCBvbmNlLicgCiAgICBlbHNlICcnCgpkZWZpbmUgIk5ldmVyIFRlc3RlZCBJbmRpY2F0b3IiOgogIGlmICJOZXZlciBUZXN0ZWQgQ29uZGl0aW9uIiB0aGVuICdyb3V0aW5lJyAKICAgIGVsc2UgJycKCi8qIENEQyBFREdFIENBU0VTICovCi8vIE1TTQoKZGVmaW5lICJObyBISVYgVGVzdCBpbiB0aGUgbGFzdCB5ZWFyIjoKICBleGlzdHMgKCBIREUuIkhJViBUZXN0cyIgKQogIGFuZCBkYXRlIGZyb20gTGFzdChIREUuIkhJViBUZXN0cyIpLmVmZmVjdGl2ZSBvbiBvciBiZWZvcmUgKCJSZWZlcmVuY2UgRGF0ZSIgLSAxIHllYXIpCgpkZWZpbmUgIk5vIEhJViBUZXN0IGluIHRoZSBsYXN0IHRocmVlIG1vbnRocyI6CiAgZXhpc3RzICggSERFLiJISVYgVGVzdHMiICkKICBhbmQgZGF0ZSBmcm9tIExhc3QoSERFLiJISVYgVGVzdHMiKS5lZmZlY3RpdmUgb24gb3IgYmVmb3JlICgiUmVmZXJlbmNlIERhdGUiIC0gMyBtb250aHMpCgpkZWZpbmUgIk1TTSBDb25kaXRpb24iOgogIGlmICgKICAgICAgbm90ICJBY3RpdmUgZGlhZ25vc2lzIG9mIEhJViIKICAgICAgYW5kICJQYXRpZW50IGlzIE1hbGUiIGFuZCAiSGFzIHNleCB3aXRoIG1lbiIKICAgICAgYW5kICgKICAgICAgICAgICAiTm8gSElWIFRlc3QgaW4gdGhlIGxhc3QgeWVhciIKICAgICAgICAgICBvciAiT24gcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIiBhbmQgIk5vIEhJViBUZXN0IGluIHRoZSBsYXN0IHRocmVlIG1vbnRocyIKICAgICAgICAgICkKICAgICApCiAgIHRoZW4gdHJ1ZSAKICAgZWxzZSBmYWxzZQoKZGVmaW5lICJNU00gUmVjb21tZW5kYXRpb24iOgogIGlmICJNU00gQ29uZGl0aW9uIiBhbmQgIk5vIEhJViBUZXN0IGluIHRoZSBsYXN0IHllYXIiCiAgICB0aGVuICdcclxuIC0gVGhpcyBtYW4gaGFzIHNleCBtZW4gYW5kIGhhcyBub3QgaGFkIGFuIEhJViB0ZXN0IGZvciBvbmUgeWVhci4nCiAgZWxzZSBpZiAiTVNNIENvbmRpdGlvbiIgYW5kICJPbiBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMiIGFuZCAiTm8gSElWIFRlc3QgaW4gdGhlIGxhc3QgdGhyZWUgbW9udGhzIgogICAgdGhlbiAnXHJcbiAtIFRoaXMgbWFuIGhhcyBzZXggbWVuIGFuZCBpcyBvbiBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMsIGFuZCBoYXMgbm90IGhhZCBhbiBISVYgdGhyZWUgZm9yIHRocmVlIG1vbnRocy4nCiAgZWxzZSAnJwoKZGVmaW5lICJNU00gUmF0aW9uYWxlIjoKICBpZiAiTVNNIENvbmRpdGlvbiIgYW5kICJObyBISVYgVGVzdCBpbiB0aGUgbGFzdCB5ZWFyIgogICAgdGhlbiAnXHJcbiAtIE1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4gc2hvdWxkIGJlIHRlc3RlZCBmb3IgSElWIGF0IGxlYXN0IGFubnVhbGx5LicgCiAgZWxzZSBpZiAiTVNNIENvbmRpdGlvbiIgYW5kICJPbiBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMiIGFuZCAiTm8gSElWIFRlc3QgaW4gdGhlIGxhc3QgdGhyZWUgbW9udGhzIgogICAgdGhlbiAnXHJcbiAtIEFsbCBtZW4gd2hvIGhhdmUgc2V4IHdpdGggbWVuIGFuZCBhcmUgb24gcHJlLWV4cG9zdXJlIHByb3BoeWxheGlzIHNob3VsZCBiZSB0ZXN0ZWQgZm9yIEhJViBldmVyeSB0aHJlZSBtb250aHMuJwogIGVsc2UgJycKCmRlZmluZSAiTVNNIEluZGljYXRvciI6CiAgaWYgIk1TTSBDb25kaXRpb24iIHRoZW4gJ3JvdXRpbmUnIAogICAgZWxzZSAnJwoKCi8vIFBSRUdOQU5DWQovLyBESCAtIG9wZW4gdGhlIGNvbGxlY3Rpb24gd2lkZSB0byBmb3VyIGNhdGVnb3JpZXMgYXMgZGVmaW5lZCBieSB0aGUgaGVhbHRoIGNlbnRlcnMKLy8gREggLSBmaWx0ZXIgb3V0IGFueXRoaW5nIG9sZGVyIHRoYW4gOSBtb250aHMKCi8vIGZvciB0ZXN0aW5nCi8vIGRlZmluZSBwcmVnbmFuY3lPYnNlcnZhdGlvbnM6Ci8vICAgSERFLiJQcmVnbmFuY3kgT2JzZXJ2YXRpb25zIgovLyBkZWZpbmUgbmluZU1vbnRoc0FnbzoKLy8gICAiUmVmZXJlbmNlIERhdGUiIC0gOSBtb250aHMKLy8gZW5kIG9mIGZvciB0ZXN0aW5nCgovLyBkZWZpbmUgIkVzdGltYXRlZCBEYXRlIG9mIERlbGl2ZXJ5IjoKLy8gICAvLyBSZXBsYWNlIHRoaXMgd2l0aCB0aGUgYWN0dWFsIGxvZ2ljIHRvIGRldGVybWluZSB0aGUgRURECi8vICAgRGF0ZVRpbWUoMjAyNSwgMywgOCkKCmRlZmluZSAiVGhlcmUgaXMgYSBwb3NpdGl2ZSBwcmVnbmFuY3kgdGVzdCBpbiB0aGUgbGFzdCA0MCB3ZWVrcyI6CiAgZXhpc3RzICggSERFLiJQb3NpdGl2ZSBQcmVnbmFuY3kgT2JzZXJ2YXRpb25zIiBQUE8KICAgICAgd2hlcmUgUFBPLmVmZmVjdGl2ZSBhZnRlciAoICJSZWZlcmVuY2UgRGF0ZSIgLSA0MCB3ZWVrcyApCiAgKQoKZGVmaW5lICJQcmVnbmFudCBidXQgbm8gSElWIHRlc3QgZHVyaW5nIHByZWduYW5jeSI6CiAgIlRoZXJlIGlzIGEgcG9zaXRpdmUgcHJlZ25hbmN5IHRlc3QgaW4gdGhlIGxhc3QgNDAgd2Vla3MiCiAgICBhbmQgbm90ICJUaGVyZSBpcyBhbiBISVYgdGVzdCBhZnRlciB0aGUgbW9zdCByZWNlbnQgcG9zaXRpdmUgcHJlZ25hbmN5IHRlc3QiCgpkZWZpbmUgIkVzdGltYXRlZCBEYXRlIG9mIERlbGl2ZXJ5IjoKICBkYXRlIGZyb20gTGFzdChIREUuIkVzdGltYXRlZCBEYXRlIG9mIERlbGl2ZXJ5IikudmFsdWUKCmRlZmluZSAiRmlyc3QgRWF5IG9mIFRoaXJkIFRyaW1lc3RlciI6CiAgIkVzdGltYXRlZCBEYXRlIG9mIERlbGl2ZXJ5IiAtIDEzIHdlZWtzCgovLyBkZWZpbmUgSXNIaWdoZXJSaXNrU3RhdGU6Ci8vICAgJ0hJJyBpbiAiSElWIEhpZ2hlciBQcmV2YWxlbmNlIFN0YXRlcyBhbmQgVGVycml0b3JpZXMiCgpkZWZpbmUgIlN0YXRlIG9mIFJlc2lkZW5jZSBQcmVzZW50IGluIFBhdGllbnQgUmVjb3JkIjoKICBDb3VudChQYXRpZW50LmFkZHJlc3Muc3RhdGUpID4gMAoKLy8gdHJvdWJsZXNob290aW5nCi8vIGRlZmluZSBUaGVyZUxhc3RIREVISVZUZXN0c2VmZmVjdGl2ZToKLy8gICBkYXRlIGZyb20gTGFzdChIREUuIkhJViBUZXN0cyIpLmVmZmVjdGl2ZS52YWx1ZQovLyBkZWZpbmUgVGhlcmVMYXN0SERFRXN0aW1hdGVkRGF0ZW9mRGVsaXZlcnk6Ci8vICAgZGF0ZSBmcm9tIExhc3QoSERFLiJFc3RpbWF0ZWQgRGF0ZSBvZiBEZWxpdmVyeSIpLnZhbHVlLnZhbHVlCgpkZWZpbmUgIkxpdmVzIEluIFN0YXRlIHdpdGggSGlnaGVyIEhJViBQcmV2YWxlbmNlIjoKICBpZiAiU3RhdGUgb2YgUmVzaWRlbmNlIFByZXNlbnQgaW4gUGF0aWVudCBSZWNvcmQiCiAgICBhbmQgRmlyc3QoUGF0aWVudC5hZGRyZXNzLnN0YXRlLnZhbHVlKSBpbiAiSElWIEhpZ2hlciBQcmV2YWxlbmNlIFN0YXRlcyBhbmQgVGVycml0b3JpZXMiIHRoZW4gdHJ1ZSAKICAgIGVsc2UgZmFsc2UKCmRlZmluZSAiVGhlcmUgaXMgYW4gSElWIHRlc3QgZHVyaW5nIHRoZSB0aGlyZCB0cmltZXN0ZXIiOgogIGV4aXN0cyAoIEhERS4iRXN0aW1hdGVkIERhdGUgb2YgRGVsaXZlcnkiICkKICAgIGFuZCBleGlzdHMgKCBIREUuIkhJViBUZXN0cyIgKQogICAgYW5kIGRhdGUgZnJvbSBMYXN0KEhERS4iSElWIFRlc3RzIikuZWZmZWN0aXZlIG9uIG9yIGFmdGVyIGRhdGUgZnJvbSBMYXN0KEhERS4iRXN0aW1hdGVkIERhdGUgb2YgRGVsaXZlcnkiKS52YWx1ZQoKZGVmaW5lICJSZXNpZGVzIGEgaGlnaCBwcmV2YWxlbmNlIHN0YXRlIGFuZCBoYXMgbm90IGhhZCBhbiBISVYgdGVzdCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyIjoKICAiTGl2ZXMgSW4gU3RhdGUgd2l0aCBIaWdoZXIgSElWIFByZXZhbGVuY2UiCiAgICBhbmQgbm90ICJUaGVyZSBpcyBhbiBISVYgdGVzdCBkdXJpbmcgdGhlIHRoaXJkIHRyaW1lc3RlciIKCi8vIGRlZmluZSAiSElWIFJpc2t5IExpZmVzdHlsZSI6Ci8vICAgSERFLiJISVYgUmlza3kgTGlmZXN0eWxlIgoKZGVmaW5lICJTZXggcGFydG5lciBoYXMgSElWIG9yIHVzZXMgaW50cmF2ZW5vdXMgZHJ1Z3MgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIjoKICBleGlzdHMgSERFLiJISVYgUmlza3kgTGlmZXN0eWxlIgogICAgYW5kIG5vdCAiVGhlcmUgaXMgYW4gSElWIHRlc3QgZHVyaW5nIHRoZSB0aGlyZCB0cmltZXN0ZXIiCgovLyBkZWZpbmUgIkludHJhdmVub3VzIERydWcgVXNlciI6Ci8vICAgIEhERS4iSW50cmF2ZW5vdXMgRHJ1ZyBVc2VyIgoKZGVmaW5lICJJbnRyYXZlbm91cyBkcnVnIHVzZXIgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIjoKICBleGlzdHMgSERFLiJJbnRyYXZlbm91cyBEcnVnIFVzZXIiCiAgICBhbmQgbm90ICJUaGVyZSBpcyBhbiBISVYgdGVzdCBkdXJpbmcgdGhlIHRoaXJkIHRyaW1lc3RlciIKCmRlZmluZSAiUGF0aWVudCB3aG8gZXhjaGFuZ2VzIHNleCBmb3IgbW9uZXkgb3IgZHJ1Z3MgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIjoKICBleGlzdHMgSERFLiJFeGNoYW5nZXMgU2V4IGZvciBEcnVncyBvciBNb25leSIKICAgIGFuZCBub3QgIlRoZXJlIGlzIGFuIEhJViB0ZXN0IGR1cmluZyB0aGUgdGhpcmQgdHJpbWVzdGVyIgoKZGVmaW5lICJNdWx0aXBsZSBTZXggUGFydG5lcnMiOgogIEhERS4iTXVsdGlwbGUgU2V4IFBhcnRuZXJzIgoKZGVmaW5lICJQYXRpZW50IHdpdGggbXVsdGlwbGUgcGFydG5lcnMgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIjoKICBleGlzdHMgSERFLiJNdWx0aXBsZSBTZXggUGFydG5lcnMiCiAgICBhbmQgbm90ICJUaGVyZSBpcyBhbiBISVYgdGVzdCBkdXJpbmcgdGhlIHRoaXJkIHRyaW1lc3RlciIKCmRlZmluZSAiUGF0aWVudCB3aXRoIGEgbmV3IHNleCBwYXJ0bmVyIGR1cmluZyBwcmVnbmFuY3kgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIjoKICBleGlzdHMgSERFLiJOZXcgU2V4IFBhcnRuZXIiCiAgICBhbmQgbm90ICJUaGVyZSBpcyBhbiBISVYgdGVzdCBkdXJpbmcgdGhlIHRoaXJkIHRyaW1lc3RlciIKCmRlZmluZSAiTm8gc3RhdGUgb2YgcmVzaWRlbmNlIG9uIHJlY29yZCBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiOgogIG5vdCAiU3RhdGUgb2YgUmVzaWRlbmNlIFByZXNlbnQgaW4gUGF0aWVudCBSZWNvcmQiCiAgICBhbmQgbm90ICJUaGVyZSBpcyBhbiBISVYgdGVzdCBkdXJpbmcgdGhlIHRoaXJkIHRyaW1lc3RlciIKCmRlZmluZSAiUHJlZ25hbnQgQ29uZGl0aW9uIjoKICBpZiAoIG5vdCAiQWN0aXZlIGRpYWdub3NpcyBvZiBISVYiCiAgICAgIGFuZCAoICJQcmVnbmFudCBidXQgbm8gSElWIHRlc3QgZHVyaW5nIHByZWduYW5jeSIKICAgICAgICAgIG9yICJSZXNpZGVzIGEgaGlnaCBwcmV2YWxlbmNlIHN0YXRlIGFuZCBoYXMgbm90IGhhZCBhbiBISVYgdGVzdCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyIgogICAgICAgICAgb3IgIk5vIHN0YXRlIG9mIHJlc2lkZW5jZSBvbiByZWNvcmQgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIgogICAgICAgICAgb3IgIkludHJhdmVub3VzIGRydWcgdXNlciBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiCiAgICAgICAgICBvciAiUGF0aWVudCB3aG8gZXhjaGFuZ2VzIHNleCBmb3IgbW9uZXkgb3IgZHJ1Z3MgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIgogICAgICAgICAgb3IgIlBhdGllbnQgd2l0aCBtdWx0aXBsZSBwYXJ0bmVycyBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiCiAgICAgICAgICBvciAiU2V4IHBhcnRuZXIgaGFzIEhJViBvciB1c2VzIGludHJhdmVub3VzIGRydWdzIGFuZCBubyBISVYgdGVzdCBkb25lIGluIHRoaXJkIHRyaW1lc3RlciIKICAgICAgICAgIG9yICJQYXRpZW50IHdpdGggYSBuZXcgc2V4IHBhcnRuZXIgZHVyaW5nIHByZWduYW5jeSBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiCiAgICAgICkKICApIHRoZW4gdHJ1ZSAKICAgIGVsc2UgZmFsc2UKCmRlZmluZSAiUHJlZ25hbnQgUmVjb21tZW5kYXRpb24iOgogIGlmICJQcmVnbmFudCBDb25kaXRpb24iCiAgICBhbmQgIlByZWduYW50IGJ1dCBubyBISVYgdGVzdCBkdXJpbmcgcHJlZ25hbmN5IiB0aGVuICdcclxuIC0gVGhpcyBwYXRpZW50IGhhcyBub3QgYmVlbiB0ZXN0ZWQgZm9yIEhJViBkdXJpbmcgcHJlZ25hbmN5LicgCiAgICBlbHNlIGlmICJQcmVnbmFudCBDb25kaXRpb24iCiAgICBhbmQgIlJlc2lkZXMgYSBoaWdoIHByZXZhbGVuY2Ugc3RhdGUgYW5kIGhhcyBub3QgaGFkIGFuIEhJViB0ZXN0IGluIHRoZSB0aGlyZCB0cmltZXN0ZXIiIHRoZW4gJ1xyXG4gLSBUaGlzIHBhdGllbnQgcmVzaWRlcyBpbiBhIGhpZ2ggcHJldmFsZW5jZSBzdGF0ZSBhbmQgaGFzIG5vdCBiZWVuIHRlc3RlZCBmb3IgSElWIGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiTm8gc3RhdGUgb2YgcmVzaWRlbmNlIG9uIHJlY29yZCBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiIHRoZW4gJ1xyXG4gLSBUaGUgc3RhdGUgb2YgcmVzaWRlbmNlIG9mIHRoaXMgcGF0aWVudCBpcyB1bmtub3duIGFuZCBzaGUgaGFzIG5vdCBiZWVuIHRlc3RlZCBmb3IgSElWIGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiSW50cmF2ZW5vdXMgZHJ1ZyB1c2VyIGFuZCBubyBISVYgdGVzdCBkb25lIGluIHRoaXJkIHRyaW1lc3RlciIgdGhlbiAnXHJcbiAtIFRoaXMgcGF0aWVudCB1c2VzIGludHJhdmVub3VzIGRydWdzIGFuZCBoYXMgbm90IGJlZW4gdGVzdGVkIGZvciBISVYgaW4gdGhlIHRoaXJkIHRyaW1lc3Rlci4nIAogICAgZWxzZSBpZiAiUHJlZ25hbnQgQ29uZGl0aW9uIgogICAgYW5kICJQYXRpZW50IHdobyBleGNoYW5nZXMgc2V4IGZvciBtb25leSBvciBkcnVncyBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiIHRoZW4gJ1xyXG4gLSBUaGlzIHBhdGllbnQgZXhjaGFuZ2VzIHNleCBmb3IgbW9uZXkgb3IgZHJ1Z3MgYW5kIGhhcyBub3QgYmVlbiB0ZXN0ZWQgZm9yIEhJViBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyLicgCiAgICBlbHNlIGlmICJQcmVnbmFudCBDb25kaXRpb24iCiAgICBhbmQgIlBhdGllbnQgd2l0aCBtdWx0aXBsZSBwYXJ0bmVycyBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiIHRoZW4gJ1xyXG4gLSBUaGlzIHBhdGllbnQgaGFzIG11bHRpcGxlIHBhcnRuZXJzIGFuZCBoYXMgbm90IGJlZW4gdGVzdGVkIGZvciBISVYgaW4gdGhlIHRoaXJkIHRyaW1lc3Rlci4nIAogICAgZWxzZSBpZiAiUHJlZ25hbnQgQ29uZGl0aW9uIgogICAgYW5kICJTZXggcGFydG5lciBoYXMgSElWIG9yIHVzZXMgaW50cmF2ZW5vdXMgZHJ1Z3MgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIiB0aGVuICdcclxuIC0gVGhpcyBwYXRpZW50XCdzIHNleCBwYXJ0bmVyIGhhcyBISVYgb3IgdXNlcyBpbnRyYXZlbm91cyBkcnVncyBhbmQgc2hlIGhhcyBub3QgYmVlbiB0ZXN0ZWQgZm9yIEhJViBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyLicgCiAgICBlbHNlIGlmICJQcmVnbmFudCBDb25kaXRpb24iCiAgICBhbmQgIlBhdGllbnQgd2l0aCBhIG5ldyBzZXggcGFydG5lciBkdXJpbmcgcHJlZ25hbmN5IGFuZCBubyBISVYgdGVzdCBkb25lIGluIHRoaXJkIHRyaW1lc3RlciIgdGhlbiAnXHJcbiAtIFRoaXMgcGF0aWVudCBoYXMgYSBuZXcgc2V4IHBhcnRuZXIgc2luY2UgYmVjb21pbmcgcHJlZ25hbnQgYW5kIG5vdCBiZWVuIHRlc3RlZCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyLicgCiAgICBlbHNlICcnCgpkZWZpbmUgIlByZWduYW50IFJhdGlvbmFsZSI6CiAgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCBub3QgKCAiVGhlcmUgaXMgYW4gSElWIHRlc3QgYWZ0ZXIgdGhlIG1vc3QgcmVjZW50IHBvc2l0aXZlIHByZWduYW5jeSB0ZXN0IiApIHRoZW4gJ1xyXG4gLSBBbGwgcHJlZ25hbnQgd29tZW4gc2hvdWxkIHVuZGVyZ28gSElWIHRlc3RpbmcgYXMgcGFydCBvZiByb3V0aW5lIHByZW5hdGFsIGNhcmUuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiUmVzaWRlcyBhIGhpZ2ggcHJldmFsZW5jZSBzdGF0ZSBhbmQgaGFzIG5vdCBoYWQgYW4gSElWIHRlc3QgaW4gdGhlIHRoaXJkIHRyaW1lc3RlciIgdGhlbiAnXHJcbiAtIEFsbCBwcmVnbmFudCB3b21lbiB3aG8gcmVzaWRlIGluIGEgaGlnaCBwcmV2YWxlbmNlIHN0YXRlIHNob3VsZCBoYXZlIGEgcmVwZWF0IEhJViB0ZXN0IGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiTm8gc3RhdGUgb2YgcmVzaWRlbmNlIG9uIHJlY29yZCBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiIHRoZW4gJ1xyXG4gLSBBbGwgcHJlZ25hbnQgd29tZW4gd2hvIHJlc2lkZSBpbiBhIGhpZ2ggcHJldmFsZW5jZSBzdGF0ZSBzaG91bGQgaGF2ZSBhIHJlcGVhdCBISVYgdGVzdCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyLiBJZiBubyBzdGF0ZSBvZiByZXNpZGVuY2UgaXMgcmVjb3JkZWQsIGEgaGlnaCBwcmV2YWxlbmNlIHN0YXRlIGlzIGFzc3VtZWQuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiSW50cmF2ZW5vdXMgZHJ1ZyB1c2VyIGFuZCBubyBISVYgdGVzdCBkb25lIGluIHRoaXJkIHRyaW1lc3RlciIgdGhlbiAnXHJcbiAtIEFsbCBwcmVnbmFudCB3b21lbiB3aG8gdXNlIGludHJhdmVub3VzIGRydWdzIHNob3VsZCBoYXZlIGEgcmVwZWF0IEhJViB0ZXN0IGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiUGF0aWVudCB3aG8gZXhjaGFuZ2VzIHNleCBmb3IgbW9uZXkgb3IgZHJ1Z3MgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIiB0aGVuICdcclxuIC0gQWxsIHByZWduYW50IHdvbWVuIHdobyBleGNoYW5nZSBzZXggZm9yIG1vbmV5IG9yIGRydWdzIHNob3VsZCBoYXZlIGEgcmVwZWF0IEhJViB0ZXN0IGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiUGF0aWVudCB3aXRoIG11bHRpcGxlIHBhcnRuZXJzIGFuZCBubyBISVYgdGVzdCBkb25lIGluIHRoaXJkIHRyaW1lc3RlciIgdGhlbiAnXHJcbiAtIEFsbCBwcmVnbmFudCB3b21lbiB3aG8gaGF2ZSBtdWx0aXBsZSBwYXJ0bmVycyBzaG91bGQgaGF2ZSBhIHJlcGVhdCBISVYgdGVzdCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyLicgCiAgICBlbHNlIGlmICJQcmVnbmFudCBDb25kaXRpb24iCiAgICBhbmQgIlNleCBwYXJ0bmVyIGhhcyBISVYgb3IgdXNlcyBpbnRyYXZlbm91cyBkcnVncyBhbmQgbm8gSElWIHRlc3QgZG9uZSBpbiB0aGlyZCB0cmltZXN0ZXIiIHRoZW4gJ1xyXG4gLSBBbGwgcHJlZ25hbnQgd29tZW4gd2hvc2Ugc2V4IHBhcnRuZXIgaGFzIEhJViBvciB1c2VzIGludHJhdmVub3VzIGRydWdzIHNob3VsZCBoYXZlIGEgcmVwZWF0IEhJViB0ZXN0IGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgaWYgIlByZWduYW50IENvbmRpdGlvbiIKICAgIGFuZCAiUGF0aWVudCB3aXRoIGEgbmV3IHNleCBwYXJ0bmVyIGR1cmluZyBwcmVnbmFuY3kgYW5kIG5vIEhJViB0ZXN0IGRvbmUgaW4gdGhpcmQgdHJpbWVzdGVyIiB0aGVuICdcclxuIC0gQWxsIHByZWduYW50IHdvbWVuIHdobyBoYXZlIGEgbmV3IHNleCBwYXJ0bmVyIHdoaWxlIHByZWduYW50IHNob3VsZCBoYXZlIGEgcmVwZWF0IEhJViB0ZXN0IGluIHRoZSB0aGlyZCB0cmltZXN0ZXIuJyAKICAgIGVsc2UgJycKCmRlZmluZSAiUHJlZ25hbnQgSW5kaWNhdG9yIjoKICBpZiAiUHJlZ25hbnQgQ29uZGl0aW9uIiB0aGVuICdyb3V0aW5lJyAKICAgIGVsc2UgJycKCi8vIFNFRUtJTkcgVFJFQVRNRU5UCgoKZGVmaW5lICJTZWVraW5nIFNURCBUcmVhdG1lbnQgQ29uZGl0aW9uIjoKICBpZiAoIG5vdCAiQWN0aXZlIGRpYWdub3NpcyBvZiBISVYiCiAgICAgIGFuZCAiUGF0aWVudCBpcyBTZWVraW5nIFRyZWF0bWVudCBmb3IgYW4gU1REIgogICkgdGhlbiB0cnVlIAogICAgZWxzZSBmYWxzZQoKZGVmaW5lICJTZWVraW5nIFNURCBUcmVhdG1lbnQgUmVjb21tZW5kYXRpb24iOgogIGlmICJTZWVraW5nIFNURCBUcmVhdG1lbnQgQ29uZGl0aW9uIiB0aGVuICggaWYgIk92ZXIgMyBNb250aHMgaGFzIFBhc3NlZCBTaW5jZSBQcmV2aW91cyBISVYgU2NyZWVuaW5nIiB0aGVuICdcclxuIC0gUGF0aWVudCBpcyBzZWVraW5nIHRyZWF0bWVudCBmb3IgYW4gU1REIGFuZCBtb3JlIHRoYW4gdGhyZWUgbW9udGhzIGhhdmUgcGFzc2VkLicgCiAgICAgIGVsc2UgJycKICApCiAgLy8gZWxzZSAnSElWIFNjcmVlbmluZyBOb3QgUmVjb21tZW5kZWQgYXQgdGhpcyB0aW1lLiBJdCBoYXMgYmVlbiAnICsgVG9TdHJpbmcoIkRheXMgU2luY2UgUHJldmlvdXMgSElWIFNjcmVlbmluZyIpICsgJyBkYXlzIHNpbmNlIGxhc3QgSElWIFNjcmVlbmluZy4nCiAgCiAgICBlbHNlICcnCgpkZWZpbmUgIlNlZWtpbmcgU1REIFRyZWF0bWVudCBSYXRpb25hbGUiOgogIGlmICJTZWVraW5nIFNURCBUcmVhdG1lbnQgQ29uZGl0aW9uIiB0aGVuICdcclxuIC0gQWxsIHBhdGllbnRzIHNlZWtpbmcgdHJlYXRtZW50IGZvciBTVERzIC0gaW5jbHVkaW5nIGFsbCBwYXRpZW50cyBhdHRlbmRpbmcgYW4gU1REIGNsaW5pYyAtLSBzaG91bGQgYmUgdGVzdGVkIGZvciBISVYgYXQgZWFjaCB2aXNpdCBmb3IgYSBuZXcgY29tcGxhaW50LicgCiAgICBlbHNlICcnCgpkZWZpbmUgIlNlZWtpbmcgU1REIFRyZWF0bWVudCBJbmRpY2F0b3IiOgogIGlmICJTZWVraW5nIFNURCBUcmVhdG1lbnQgQ29uZGl0aW9uIiB0aGVuICdyb3V0aW4nIAogICAgZWxzZSAnJwoKCi8qIFJJU0sgTGV2ZWwgQWN0aW9ucyAqLyAvLyBESCB0ZW1wb3JhcmlseSB0YWtlIHRoaXMgb3V0CgoKCmRlZmluZSAiUmlzayBMZXZlbCBDb25kaXRpb24iOiAvLyB0cnVlIGlmIHRoZSBvdGhlciBmb3VyIENvbmRpdGlvbnMgYXJlIGZhbHNlCiAgCiAgaWYgKCBub3QgIkFjdGl2ZSBkaWFnbm9zaXMgb2YgSElWIgogIC8vIGFuZCAoCiAgLy8gICAiTmV2ZXIgVGVzdGVkIENvbmRpdGlvbiIgaXMgZmFsc2UKICAvLyAgIGFuZCAiTVNNIENvbmRpdGlvbiIgaXMgZmFsc2UKICAvLyAgIGFuZCAiUHJlZ25hbnQgQ29uZGl0aW9uIiBpcyBmYWxzZQogIC8vICAgYW5kICJTZWVraW5nIFNURCBUcmVhdG1lbnQgQ29uZGl0aW9uIiBpcyBmYWxzZQogIC8vICAgYW5kICJUdWJlcmN1bG9zaXMgQ29uZGl0aW9uIiBpcyBmYWxzZQogIC8vICAgLy8gbm93IHRoZSBhY3R1YWwgcmlzayBsZXZlbCBjb25kaXRpb25zCiAgICAgIGFuZCAoICggIlBhdGllbnQgaXMgYXQgSGlnaCBSaXNrIGZvciBISVYiCiAgICAgICAgICAgIGFuZCAiT3ZlciAzIE1vbnRocyBoYXMgUGFzc2VkIFNpbmNlIFByZXZpb3VzIEhJViBTY3JlZW5pbmciCiAgICAgICAgKQogICAgICAgICAgb3IgKCAiUGF0aWVudCBpcyBhdCBNb2RlcmF0ZSBSaXNrIGZvciBISVYiCiAgICAgICAgICAgICAgYW5kICJPdmVyIGEgWWVhciBoYXMgUGFzc2VkIFNpbmNlIFByZXZpb3VzIEhJViBTY3JlZW5pbmciCiAgICAgICAgICApCiAgICAgICkKICApIHRoZW4gdHJ1ZSAKICAgIGVsc2UgZmFsc2UKCmRlZmluZSAiUmlzayBMZXZlbCBSZWNvbW1lbmRhdGlvbiI6CiAgaWYgIlBhdGllbnQgaXMgYXQgSGlnaCBSaXNrIGZvciBISVYiCiAgICBhbmQgIk92ZXIgMyBNb250aHMgaGFzIFBhc3NlZCBTaW5jZSBQcmV2aW91cyBISVYgU2NyZWVuaW5nIiB0aGVuICdISVYgU2NyZWVuaW5nIFJlY29tbWVuZGVkIGR1ZSB0byBwYXRpZW50IGJlaW5nIGF0IEhpZ2ggUmlzayBmb3IgSElWIGFuZCBvdmVyIHRocmVlIG1vbnRocyBoYXZlIHBhc3NlZCBzaW5jZSBwcmV2aW91cyBzY3JlZW5pbmcuJyAKICAgIGVsc2UgaWYgIlBhdGllbnQgaXMgYXQgTW9kZXJhdGUgUmlzayBmb3IgSElWIgogICAgYW5kICJPdmVyIGEgWWVhciBoYXMgUGFzc2VkIFNpbmNlIFByZXZpb3VzIEhJViBTY3JlZW5pbmciIHRoZW4gJ0hJViBTY3JlZW5pbmcgUmVjb21tZW5kZWQgZHVlIHRvIHBhdGllbnQgYmVpbmcgYXQgTW9kZXJhdGUgUmlzayBmb3IgSElWIGFuZCBvdmVyIGEgWWVhciBoYXMgcGFzc2VkIHNpbmNlIHByZXZpb3VzIHNjcmVlbmluZy4nCiAgLy8gZWxzZSBpZiAiUGF0aWVudCBpcyBhdCBObyBSaXNrIGZvciBISVYiIHRoZW4gJ0hJViBTY3JlZW5pbmcgTm90IFJlY29tbWVuZGVkIGR1ZSB0byBwYXRpZW50IGJlaW5nIGF0IE5vIFJpc2sgZm9yIEhJVi4nCiAgLy8gZWxzZSBpZiAiUGF0aWVudCBpcyBhdCBMb3cgUmlzayBmb3IgSElWIiB0aGVuICdISVYgU2NyZWVuaW5nIE5vdCBSZWNvbW1lbmRlZCBkdWUgdG8gcGF0aWVudCBiZWluZyBhdCBMb3cgUmlzayBmb3IgSElWLicKICAvLyBlbHNlICdISVYgU2NyZWVuaW5nIE5vdCBSZWNvbW1lbmRlZCBhdCB0aGlzIHRpbWUuIEl0IGhhcyBiZWVuICcgKyBUb1N0cmluZygiRGF5cyBTaW5jZSBQcmV2aW91cyBISVYgU2NyZWVuaW5nIikgKyAnIGRheXMgc2luY2UgbGFzdCBISVYgU2NyZWVuaW5nLicKICAKICAKICAKICAgIGVsc2UgJycKCi8qIFJpc2sgTGV2ZWwgUmF0aW9uYWwgYmFzZWQgb24gUmVjb21tZW5kYXRpb24gT3B0aW9uIChSZWZlcmVuY2VzIHRvIENEQyBSZWNvbW1lbmRhdGlvbnMpICovCgoKZGVmaW5lICJSaXNrIExldmVsIFJhdGlvbmFsZSI6CiAgaWYgIlBhdGllbnQgaXMgYXQgSGlnaCBSaXNrIGZvciBISVYiIHRoZW4gJ0hlYWx0aC1jYXJlIHByb3ZpZGVycyBzaG91bGQgc3Vic2VxdWVudGx5IHRlc3QgYWxsIHBlcnNvbnMgbGlrZWx5IHRvIGJlIGF0IGhpZ2ggcmlzayBmb3IgSElWIGF0IGxlYXN0IGV2ZXJ5IDMgbW9udGhzLiBQZXJzb25zIGxpa2VseSB0byBiZSBhdCBoaWdoIHJpc2sgaW5jbHVkZSBwZXJzb25zIHdpdGggcHJvYmxlbXMgcmVsYXRlZCB0byBkcnVnIGFidXNlLCBpbmplY3Rpb24tZHJ1ZyB1c2VycyBhbmQgdGhlaXIgc2V4IHBhcnRuZXJzLCBwZXJzb25zIHdobyBleGNoYW5nZSBzZXggZm9yIG1vbmV5IG9yIGRydWdzLCBzZXggcGFydG5lcnMgb2YgSElWLWluZmVjdGVkIHBlcnNvbnMsIGFuZCBNU00gb3IgaGV0ZXJvc2V4dWFsIHBlcnNvbnMgd2hvIHRoZW1zZWx2ZXMgb3Igd2hvc2Ugc2V4IHBhcnRuZXJzIGhhdmUgaGFkIG1vcmUgdGhhbiBvbmUgc2V4IHBhcnRuZXIgc2luY2UgdGhlaXIgbW9zdCByZWNlbnQgSElWIHRlc3QuJyAKICAgIGVsc2UgaWYgIlBhdGllbnQgaXMgYXQgTW9kZXJhdGUgUmlzayBmb3IgSElWIiB0aGVuICdIZWFsdGgtY2FyZSBwcm92aWRlcnMgc2hvdWxkIHN1YnNlcXVlbnRseSB0ZXN0IGFsbCBwZXJzb25zIGxpa2VseSB0byBiZSBhdCBtb2RlcmF0ZSByaXNrIGZvciBISVYgYXQgbGVhc3QgYW5udWFsbHkuIFBlcnNvbnMgbGlrZWx5IHRvIGJlIGF0IG1vZGVyYXRlIHJpc2sgaW5jbHVkZSBNU00sIFRyYW5zZ2VuZGVyIFBlcnNvbnMsIGFuZCBHYXkgb3IgQmlzZXh1YWwgTWVuIHdobyBhcmUgc2V4dWFsbHkgYWN0aXZlIGFuZCBoYXZlIHNleCB3aXRoIG90aGVyIG1lbi4nCiAgLy8gZWxzZSBpZiAiUGF0aWVudCBpcyBhdCBObyBSaXNrIGZvciBISVYiIHRoZW4gJ1RoZSBUYXNrIEZvcmNlIG1hZGUgbm8gcmVjb21tZW5kYXRpb24gZm9yIG9yIGFnYWluc3Qgcm91dGluZWx5IHNjcmVlbmluZyBhc3ltcHRvbWF0aWMgYWR1bHRzIGFuZCBhZG9sZXNjZW50cyB3aXRoIG5vIGlkZW50aWZpYWJsZSByaXNrIGZhY3RvcnMgZm9yIEhJVi4gVGhlIFRhc2sgRm9yY2UgY29uY2x1ZGVkIHRoYXQgc3VjaCBzY3JlZW5pbmcgd291bGQgZGV0ZWN0IGFkZGl0aW9uYWwgcGF0aWVudHMgd2l0aCBISVYsIGJ1dCB0aGUgb3ZlcmFsbCBudW1iZXIgd291bGQgYmUgbGltaXRlZCwgYW5kIHRoZSBwb3RlbnRpYWwgYmVuZWZpdHMgZGlkIG5vdCBjbGVhcmx5IG91dHdlaWdoIHRoZSBidXJkZW4gb24gcHJpbWFyeSBjYXJlIHByYWN0aWNlcyBvciB0aGUgcG90ZW50aWFsIGhhcm1zIG9mIGEgZ2VuZXJhbCBISVYgc2NyZWVuaW5nIHByb2dyYW0uJwogIC8vIGVsc2UgJ1xyXG4gLSBJbiBsb3cgcHJldmFsZW5jZSBzZXR0aW5ncywgaW4gd2hpY2ggdGhlIG1ham9yaXR5IG9mIGNsaWVudHMgYXJlIGF0IG1pbmltYWwgcmlzaywgdGFyZ2V0ZWQgSElWIHRlc3Rpbmcgb24gdGhlIGJhc2lzIG9mIHJpc2sgc2NyZWVuaW5nIHdhcyBjb25zaWRlcmVkIG1vcmUgZmVhc2libGUgZm9yIGlkZW50aWZ5aW5nIGxpbWl0ZWQgbnVtYmVycyBvZiBISVYtaW5mZWN0ZWQgcGVyc29ucy4gVGhlIFRhc2sgRm9yY2UgY29uY2x1ZGVkIHRoYXQgc3VjaCBzY3JlZW5pbmcgd291bGQgZGV0ZWN0IGFkZGl0aW9uYWwgcGF0aWVudHMgd2l0aCBISVYsIGJ1dCB0aGUgb3ZlcmFsbCBudW1iZXIgd291bGQgYmUgbGltaXRlZCwgYW5kIHRoZSBwb3RlbnRpYWwgYmVuZWZpdHMgZGlkIG5vdCBjbGVhcmx5IG91dHdlaWdoIHRoZSBidXJkZW4gb24gcHJpbWFyeSBjYXJlIHByYWN0aWNlcyBvciB0aGUgcG90ZW50aWFsIGhhcm1zIG9mIGEgZ2VuZXJhbCBISVYgc2NyZWVuaW5nIHByb2dyYW0uJwogIAogIAogICAgZWxzZSAnJwoKLy8gZGVmaW5lICJSaXNrIExldmVsIEluZGljYXRvciBTdGF0dXMiOgovLyAgIGlmICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBmb3IgSElWIiB0aGVuICJTdGF0IgovLyAgIGVsc2UgaWYgIlBhdGllbnQgaXMgYXQgTW9kZXJhdGUgUmlzayBmb3IgSElWIiB0aGVuICJBc2FwIgovLyAgIGVsc2UgaWYgIlBhdGllbnQgaXMgYXQgTm8gUmlzayBmb3IgSElWIiB0aGVuICJSb3V0aW5lIgovLyAgIGVsc2UgIlJvdXRpbmUiCgovL3Ryb3VibGVzaG9vdGluZwovLyBkZWZpbmUgbGFzdEhkZUhpdlRlc3RzRWZmZWN0aXZlOgovLyAgIExhc3QoSERFLiJISVYgVGVzdHMiKS5lZmZlY3RpdmUudmFsdWUKLy8gZGVmaW5lIGxhc3RIZGVUdWJlcmN1bG9zaXNEaWFnbm9zaXNPbnNldDoKLy8gICBMYXN0KEhERS4iVHViZXJjdWxvc2lzIGRpYWdub3NpcyIpLm9uc2V0LnZhbHVlCi8vIHRyb3VibGVzaG9vdGluZwoKZGVmaW5lIEhpdlRlc3RPbk9yQmVmb3JlVGJEaWFnbm9zaXM6CiAgTGFzdChIREUuIkhJViBUZXN0cyIpLmVmZmVjdGl2ZSBvbiBvciBiZWZvcmUgTGFzdChIREUuIlR1YmVyY3Vsb3NpcyBkaWFnbm9zaXMiKS5vbnNldAoKZGVmaW5lICJUdWJlcmN1bG9zaXMgQ29uZGl0aW9uIjoKICBpZiAoIG5vdCAiQWN0aXZlIGRpYWdub3NpcyBvZiBISVYiCiAgICAgIGFuZCAiQWN0aXZlIGRpYWdub3NpcyBvZiBUdWJlcmN1bG9zaXM/IgogICAgICBhbmQgKCBub3QgZXhpc3RzIEhERS4iSElWIFRlc3RzIgogICAgICAgICAgb3IgKCBleGlzdHMgSERFLiJISVYgVGVzdHMiCiAgICAgICAgICAgICAgYW5kIExhc3QoSERFLiJISVYgVGVzdHMiKS5lZmZlY3RpdmUgb24gb3IgYmVmb3JlIExhc3QoSERFLiJUdWJlcmN1bG9zaXMgZGlhZ25vc2lzIikub25zZXQKICAgICAgICAgICkKICAgICAgKQogICkgdGhlbiB0cnVlIAogICAgZWxzZSBmYWxzZQoKZGVmaW5lICJUdWJlcmN1bG9zaXMgUmVjb21tZW5kYXRpb24iOgogIGlmICJUdWJlcmN1bG9zaXMgQ29uZGl0aW9uIiB0aGVuICdcclxuIC0gVGhpcyBwYXRpZW50IGhhcyBub3QgYmVlbiB0ZXN0ZWQgZm9yIEhJViBzaW5jZSB0aGV5IHdlcmUgZGlhZ25vc2VkIHdpdGggdHViZXJjdWxvc2lzLicgCiAgICBlbHNlICcnCiAgLy8gVG9TdHJpbmcoZXhpc3RzKEhERS4iVHViZXJjdWxvc2lzIGRpYWdub3NpcyIpKSAvLyBUaGlzIGxpbmUgd2FzIHRvIGV4cHJlc3NseSBwYXNzIGEgY3FsLWV4cHJlc3Npb24gdG8gYSBDYXJkUGxhbgoKCmRlZmluZSAiVHViZXJjdWxvc2lzIFJhdGlvbmFsZSI6CiAgaWYgIlR1YmVyY3Vsb3NpcyBDb25kaXRpb24iIHRoZW4gJ1xyXG4gLSBBbGwgcGF0aWVudHMgd2hvIGFyZSBhYm91dCB0byBzdGFydCB0dWJlcmN1bG9zaXMgdHJlYXRtZW50IHNob3VsZCBmaXJzdCBoYXZlIGFuIEhJViBUZXN0LicgCiAgICBlbHNlICcnCgpkZWZpbmUgIlR1YmVyY3Vsb3NpcyBJbmRpY2F0b3IiOgogIGlmICJUdWJlcmN1bG9zaXMgQ29uZGl0aW9uIiB0aGVuICdyb3V0aW5lJyAKICAgIGVsc2UgJycKCmRlZmluZSAiSElWIFRlc3QgQ29uZGl0aW9uIjoKICBpZiAoICJOZXZlciBUZXN0ZWQgQ29uZGl0aW9uIgogICAgICBvciAiTVNNIENvbmRpdGlvbiIKICAgICAgb3IgIlByZWduYW50IENvbmRpdGlvbiIKICAgICAgb3IgIlNlZWtpbmcgU1REIFRyZWF0bWVudCBDb25kaXRpb24iCiAgICAgIG9yICJSaXNrIExldmVsIENvbmRpdGlvbiIKICAgICAgb3IgIC8vIHNvbWV0aW1lcyBldmFsdWF0ZXMgdG8gbnVsbAogICAgICAiVHViZXJjdWxvc2lzIENvbmRpdGlvbiIKICApIHRoZW4gdHJ1ZSAKICAgIGVsc2UgZmFsc2UKCmRlZmluZSAiSElWIFRlc3QgUmVjb21tZW5kYXRpb24iOiAvLyAnUmVjb21tZW5kIEhJViBUZXN0JwogIAogICJOZXZlciBUZXN0ZWQgUmVjb21tZW5kYXRpb24iICsgIk1TTSBSZWNvbW1lbmRhdGlvbiIgKyAiUHJlZ25hbnQgUmVjb21tZW5kYXRpb24iICsgIlNlZWtpbmcgU1REIFRyZWF0bWVudCBSZWNvbW1lbmRhdGlvbiIgKwogIC8vICdcclxuLSAnICsgIlJpc2sgTGV2ZWwgUmF0aW9uYWxlIiBvciAgLy8gc29tZXRpbWVzIGV2YWx1YXRlcyB0byBudWxsCiAgIlR1YmVyY3Vsb3NpcyBSZWNvbW1lbmRhdGlvbiIKCmRlZmluZSAiSElWIFRlc3QgUmF0aW9uYWxlIjoKICAiTmV2ZXIgVGVzdGVkIFJhdGlvbmFsZSIgKyAiTVNNIFJhdGlvbmFsZSIgKyAiUHJlZ25hbnQgUmF0aW9uYWxlIiArICJTZWVraW5nIFNURCBUcmVhdG1lbnQgUmF0aW9uYWxlIiArCiAgLy8gJ1xyXG4tICcgKyAiUmlzayBMZXZlbCBSYXRpb25hbGUiIG9yICAvLyBzb21ldGltZXMgZXZhbHVhdGVzIHRvIG51bGwKICAiVHViZXJjdWxvc2lzIFJhdGlvbmFsZSIKCmRlZmluZSAiSElWIFRlc3QgSW5kaWNhdG9yIjoKICBpZiAiSElWIFRlc3QgQ29uZGl0aW9uIiB0aGVuICdyb3V0aW5lJyAKICAgIGVsc2UgJycKCi8vIGRlZmluZSAiRXhjbHVzaW9uIFJlYXNvbiI6Ci8vICAgaWYgIkFjdGl2ZSBkaWFnbm9zaXMgb2YgSElWIiB0aGVuICggJ1BhdGllbnQgd2FzIGV4Y2x1ZGVkIGZyb20gSElWIFNjcmVlbmluZyAnICsgKCBpZiBub3QgIlBhdGllbnQgaXMgYmV0d2VlbiAxMyBhbmQgNjQgeWVhcnMgb2xkIiB0aGVuICdkdWUgdG8gbm90IGJlaW5nIGJldHdlZW4gdGhlIGFnZXMgb2YgMTMgYW5kIDY0LicgCi8vICAgICAgICAgZWxzZSBpZiAiQWN0aXZlIGRpYWdub3NpcyBvZiBISVYiIHRoZW4gJ2R1ZSB0byB0aGUgcGF0aWVudCBhbHJlYWR5IGhhdmluZyBiZWVuIGRpYWdub3NlZCB3aXRoIEhJVi4nIAovLyAgICAgICAgIGVsc2UgJycKLy8gICAgICkKLy8gICApIAovLyAgICAgZWxzZSAnJwoKLyogSElWIFNjcmVlbmluZyBXb3JrZmxvdyAqLwovLyBQYXRpZW50IFZpc2l0IE9jY3VycmVkCgpkZWZpbmUgIlBhdGllbnQgRW5jb3VudGVyIjoKICBMYXN0KChIQy5RdWFsaWZpZWRFbmNvdW50ZXJzKEhERS4iRW5jb3VudGVyIFR5cGUiCiAgICAgIHVuaW9uIEhERS4iUHJlZ25hbmN5IEVuY291bnRlcnMiCiAgICAgIHVuaW9uIEhERS4iVGhpcmQgVHJpbWVzdGVyIEVuY291bnRlcnMiKSkgUGF0aWVudEVuY291bnRlcgogICAgICBzb3J0IGJ5IAogICAgICBlbmQgb2YgcGVyaW9kCiAgKQoKLyogYmVmb3JlICAuCi8qIERldGVybWluZSBQYXRpZW50IENoYXJhY3RlcmlzdGljcyBhbmQgVGVzdGluZyBDcml0ZXJpYSAqLwovLyBkZWZpbmUgIlBhdGllbnQgaXMgYmV0d2VlbiAxMyBhbmQgNjQgeWVhcnMgb2xkIjoKLy8gICBBZ2VJblllYXJzQXQoZW5kIG9mICJQYXRpZW50IEVuY291bnRlciIucGVyaW9kKSA+PSAxMwovLyAgIGFuZCBBZ2VJblllYXJzQXQoZW5kIG9mICJQYXRpZW50IEVuY291bnRlciIucGVyaW9kKSA8PSA2NAoKZGVmaW5lICJBZ2UiOgogIEFnZUluWWVhcnNBdCgiUmVmZXJlbmNlIERhdGUiKQoKLyogYWZ0ZXIKLyogRGV0ZXJtaW5lIFBhdGllbnQgQ2hhcmFjdGVyaXN0aWNzIGFuZCBUZXN0aW5nIENyaXRlcmlhICovCgoKZGVmaW5lICJQYXRpZW50IGlzIGJldHdlZW4gMTMgYW5kIDY0IHllYXJzIG9sZCI6CiAgQWdlSW5ZZWFyc0F0KCJSZWZlcmVuY2UgRGF0ZSIpID49IDEzCiAgICBhbmQgQWdlSW5ZZWFyc0F0KCJSZWZlcmVuY2UgRGF0ZSIpIDw9IDY0CgovLyBkZWZpbmUgIkFjdGl2ZSBEaWFnbm9zaXMgb2YgSElWIER1cmluZyBQYXRpZW50IFZpc2l0IjoKLy8gICAoIExhc3QoKEhDLlF1YWxpZmllZENvbmRpdGlvbnMoSERFLiJISVYgRGlhZ25vc2lzIikpIEhJVkRpYWdub3NpcwovLyAgICAgICBzb3J0IGJ5IAovLyAgICAgICBlbmQgb2YgRkMuVG9JbnRlcnZhbChhYmF0ZW1lbnQpCi8vICAgKSApIEhJVkRpYWdub3NpcwovLyAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKLy8gICAgICAgc3VjaCB0aGF0IEZDLlRvUHJldmFsZW5jZUludGVydmFsICggSElWRGlhZ25vc2lzICkgb3ZlcmxhcHMgUGF0aWVudEVuY291bnRlci5wZXJpb2QKCmRlZmluZSAiSElWIFNjcmVlbmluZyBUZXN0IjogLy8gREg6IGFzIG9mIGxhc3QgZW5jb3VudGVyCiAgLy8gKAogIAogIAogIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyAoIEhERS4iSElWIFRlc3RzIiApCiAgICB1bmlvbiBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlByZXZpb3VzIEhJViBTY3JlZW5pbmciICkgLy8gSG93IGRvZXMgdGhpcyBmaXQgaW4gdGhlIGxvZ2ljPyBXaGVyZSBpcyBpdHMgYHN0YXR1c2AgYXR0cmlidXRlPwogIC8vICkgSElWU2NyZWVuaW5nCiAgLy8gICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogIC8vICAgICBzdWNoIHRoYXQgRkMuVG9JbnRlcnZhbChISVZTY3JlZW5pbmcuZWZmZWN0aXZlKSBiZWZvcmUgUGF0aWVudEVuY291bnRlci5wZXJpb2QKCgoKCgpkZWZpbmUgIlBhdGllbnQgaGFzIGhhZCBhbiBISVYgVGVzdCI6IC8vREg6IGFzIG9mIGxhc3QgZW5jb3VudGVyCiAgCiAgZXhpc3RzICggIkhJViBTY3JlZW5pbmcgVGVzdCIgKQoKZGVmaW5lICJQcmV2aW91cyBISVYgU2NyZWVuaW5nIFRlc3QiOiAvLyBESDogb3JpZ2luYWxseSBtZWFuaW5nIGBwcmV2aW91cyB0byBtb3N0IHJlY2VudCBlbmNvdXRlcmAuIE5vdzsgYHByZXZpb3VzIHRvIFJlZmVyZW5jZSBEYXRlCiAgLy8gZnJvbQogIAogIAogICggTGFzdCgiSElWIFNjcmVlbmluZyBUZXN0IiBISVZUZXN0CiAgICAgIHNvcnQgYnkgZWZmZWN0aXZlCiAgKSApIE1vc3RSZWNlbnRISVZUZXN0CiAgLy8gIlBhdGllbnQgRW5jb3VudGVyIiBQYXRpZW50RW5jb3VudGVyCiAgLy8gICB3aGVyZSBGQy5Ub0ludGVydmFsKE1vc3RSZWNlbnRISVZUZXN0LmVmZmVjdGl2ZSkgYmVmb3JlIFBhdGllbnRFbmNvdW50ZXIucGVyaW9kCgoKCmRlZmluZSAiRGF5cyBTaW5jZSBQcmV2aW91cyBISVYgU2NyZWVuaW5nIjoKICAiUHJldmlvdXMgSElWIFNjcmVlbmluZyBUZXN0IiBISVZUZXN0CiAgICAvLyByZXR1cm4gZHVyYXRpb24gaW4gZGF5cyBiZXR3ZWVuIGVuZCBvZiBGQy5Ub0ludGVydmFsKEhJVlRlc3QuTW9zdFJlY2VudEhJVlRlc3QuZWZmZWN0aXZlKSBhbmQgZW5kIG9mIEhJVlRlc3QuUGF0aWVudEVuY291bnRlci5wZXJpb2QKICAgIAogICAgcmV0dXJuIGR1cmF0aW9uIGluIGRheXMgYmV0d2VlbiBISVZUZXN0LmVmZmVjdGl2ZSBhbmQgIlJlZmVyZW5jZSBEYXRlIgoKZGVmaW5lICJPdmVyIGEgWWVhciBoYXMgUGFzc2VkIFNpbmNlIFByZXZpb3VzIEhJViBTY3JlZW5pbmciOgogICJQcmV2aW91cyBISVYgU2NyZWVuaW5nIFRlc3QiIEhJVlRlc3QKICAgIC8vIHJldHVybiAoZHVyYXRpb24gaW4geWVhcnMgYmV0d2VlbiBlbmQgb2YgRkMuVG9JbnRlcnZhbChISVZUZXN0Lk1vc3RSZWNlbnRISVZUZXN0LmVmZmVjdGl2ZSkgYW5kIGVuZCBvZiBISVZUZXN0LlBhdGllbnRFbmNvdW50ZXIucGVyaW9kKSA+PSAxCiAgICAvLyBESDogZG9uJ3QgbmVlZCBubyBzdGlua2luZyBlbmNvdW50ZXJzLgogICAgCiAgICAKICAgIHJldHVybiAoIGR1cmF0aW9uIGluIHllYXJzIGJldHdlZW4gSElWVGVzdC5lZmZlY3RpdmUgYW5kICJSZWZlcmVuY2UgRGF0ZSIgPj0gMSApCgpkZWZpbmUgIk92ZXIgMyBNb250aHMgaGFzIFBhc3NlZCBTaW5jZSBQcmV2aW91cyBISVYgU2NyZWVuaW5nIjoKICAiUHJldmlvdXMgSElWIFNjcmVlbmluZyBUZXN0IiBISVZUZXN0CiAgICAvLyByZXR1cm4gKGR1cmF0aW9uIGluIG1vbnRocyBiZXR3ZWVuIGVuZCBvZiBGQy5Ub0ludGVydmFsKEhJVlRlc3QuTW9zdFJlY2VudEhJVlRlc3QuZWZmZWN0aXZlKSBhbmQgZW5kIG9mIEhJVlRlc3QuUGF0aWVudEVuY291bnRlci5wZXJpb2QpID49IDMKICAgIAogICAgcmV0dXJuICggZHVyYXRpb24gaW4gbW9udGhzIGJldHdlZW4gSElWVGVzdC5lZmZlY3RpdmUgYW5kICJSZWZlcmVuY2UgRGF0ZSIgPj0gMyApCgpkZWZpbmUgIk9uIHByZS1leHBvc3VyZSBwcm9waHlsYXhpcyI6CiAgZXhpc3RzIEhERS4iUHJlcCBNZWRpY2F0aW9uIFByZXNjcmlwdGlvbnMiCiAgICAvLyB1bmlvbiBIQy5RdWFsaWZpZWRNZWRpY2F0aW9uRGlzcGVuc2VzICggSERFLiJQcmVwIERpc3BlbnNlZCBNZWRpY2F0aW9ucyIgKQogICAgLy8gdW5pb24gSEMuUXVhbGlmaWVkT2JzZXJ2YXRpb25zICggSERFLiJQcmV2aW91cyBleHBlcmllbmNlIHdpdGggUFJFUCIgKSApIFByRVAKCi8qIERldGVybWluZSBQYXRpZW50J3MgQ2F0ZWdvcnkgKGdlbmRlciwgcHJlZ25hbmN5LCBNU00sIHNleHVhbCBhY3Rpdml0eSwgZXRjKSAqLwoKZGVmaW5lICJQYXRpZW50IGlzIE1hbGUiOgogIGlmIFBhdGllbnQuZ2VuZGVyID0gJ21hbGUnIHRoZW4gdHJ1ZSAKICBlbHNlIGZhbHNlCgpkZWZpbmUgIlBhdGllbnQgaXMgRmVtYWxlIjoKICBpZiBQYXRpZW50LmdlbmRlciA9ICdmZW1hbGUnIHRoZW4gdHJ1ZSAKICAgIGVsc2UgZmFsc2UKCmRlZmluZSAiUGF0aWVudCBpcyBUcmFuc2dlbmRlciI6CiAgSERFLiJHZW5kZXIgSWRlbnRpdHkiIGluIEN4LiJUcmFuc2dlbmRlciIKCmRlZmluZSAiQWN0aXZlIGRpYWdub3NpcyBvZiBUdWJlcmN1bG9zaXM/IjoKICBleGlzdHMgSERFLiJUdWJlcmN1bG9zaXMgZGlhZ25vc2lzIgovLyAgIGV4aXN0cyBbQ29uZGl0aW9uXSBjIHdoZXJlIGMgaW4gQ3guIlRCIgoKZGVmaW5lICJBY3RpdmUgZGlhZ25vc2lzIG9mIEhJViI6CiAgZXhpc3RzIEhERS4iSElWIERpYWdub3NpcyIKCi8vICAgZXhpc3RzIFtDb25kaXRpb25dIGMgd2hlcmUgYyBpbiBDeC4iVEIiCgovLyBkZWZpbmUgImFueUNvbmRpdGlvblZhbHVlIjoKLy8gICBbQ29uZGl0aW9uXSBDIHJldHVybiBDLmNvZGUuY29kaW5nLmNvZGUudmFsdWUKCi8vIGRlZmluZSAiUGF0aWVudCBpcyBHYXkgb3IgQmlzZXh1YWwiOgovLyAgICAgICBIREUuIlNleHVhbCBPcmllbnRhdGlvbiIuY29kaW5nLmNvZGUgaW4gQ3guIkdheSBPciBCaXNleHVhbCIKCi8vIERIOiBUaGlzIG9uZSBpcyBuZXZlciB1c2VkCi8vIGRlZmluZSAiUGF0aWVudCBpcyBQcmVnbmFudCI6Ci8vICAgZXhpc3RzKAovLyAgICAgKEhDLlF1YWxpZmllZENvbmRpdGlvbnMoSERFLiJQcmVnbmFuY3kgQ29uZGl0aW9ucyIpKSBQcmVnbmFuY3kKLy8gICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKLy8gICAgICAgICBzdWNoIHRoYXQgRkMuVG9QcmV2YWxlbmNlSW50ZXJ2YWwoUHJlZ25hbmN5KSBvdmVybGFwcyBQYXRpZW50RW5jb3VudGVyLnBlcmlvZAovLyAgICkKCi8qIERldGVybWluZSBQYXRpZW50J3MgUmlzayBMZXZlbCAoSGlnaCBSaXNrLCBNb2RlcmF0ZSBSaXNrLCBObyBSaXNrLCBMb3cgUmlzaykgKi8KLy8gUHJlZG9taW5hbnRseSBiYXNlZCBvZmYgZWxlbWVudHMgYnVpbHQgZnJvbSB0aGUgcmlzay1mYWN0b3JzIHF1ZXN0aW9ubmFpcmUKLy8gUklTS1M6IFNUSXMsIEluamVjdGlvbiBEcnVnIFVzZSwgU2V4IHBhcnRuZXIgaGFzIEhJViwgU2V4IEV4Y2hhbmdlZCBmb3IgRHJ1Z3MvTW9uZXksIE1vcmUgdGhhbiAxIFBhcnRuZXIgc2luY2UgcHJldmlvdXMgc2NyZWVuaW5nIChmb3IgdGhlbXNlbHZlcyBvciB0aGVpciBwYXJ0bmVycyksIERydWcgYWJ1c2UKCi8qIDEuIFJlY29tbWVuZCBTY3JlZW5pbmcgMyBtb250aHMgKEhpZ2ggUmlzayAtIENEQyBSaXNrIEZhY3RvcnMpCiAgICAyLiBSZWNvbW1lbmQgU2NyZWVuaW5nIEFubnVhbGx5IChNb2RlcmF0ZSBSaXNrIC0gU09HSSBSaXNrIEZhY3RvcnMpCiAgICAzLiBObyBSZWNvbW1lbmRhdGlvbiBTY3JlZW5pbmcgKE5vIFJpc2spIC8gTG93IFJpc2sKICAgIDQuIFJlY29tbWVuZCBTY3JlZW5pbmcgQ3VzdG9tIFBlcmlvZHMgKDMgbW9udGhzIGJhc2VkIG9uIHNwZWNpZmljIHJpc2sgZmFjdG9yIC0tIHNleHVhbGx5IGFjdGl2ZSBNU00gdy8gcHJlcCwgZXRjKQogICAgICAvLyBNU00gLyBQcmVnbmFuY3kgLyBDREMgUmVjb21tZW5kYXRpb24KKi8KCi8qIEhJR0ggUklTSyAqLwovLyBIaWdoIFJpc2sgLS0gT3RoZXIgU1RJcwoKZGVmaW5lICJBY3RpdmUgRGlhZ25vc2lzIG9mIEhDViBEdXJpbmcgUGF0aWVudCBWaXNpdCI6CiAgKCAoIExhc3QoKEhDLlF1YWxpZmllZENvbmRpdGlvbnMoSERFLiJIZXBhdGl0aXMgQyBEaWFnbm9zaXMiKSkgSENWRGlhZ25vc2lzCiAgICAgICAgc29ydCBieSAKICAgICAgICBlbmQgb2YgRkMuVG9JbnRlcnZhbChhYmF0ZW1lbnQpCiAgICApICkgSENWRGlhZ25vc2lzCiAgICAgIHdpdGggIlBhdGllbnQgRW5jb3VudGVyIiBQYXRpZW50RW5jb3VudGVyCiAgICAgICAgc3VjaCB0aGF0IEZDLlRvUHJldmFsZW5jZUludGVydmFsICggSENWRGlhZ25vc2lzICkgb3ZlcmxhcHMgUGF0aWVudEVuY291bnRlci5wZXJpb2QKICApIGlzIG5vdCBudWxsCiAgICBvciBleGlzdHMgKCAoIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyAoIEhERS4iUGF0aWVudCBEaWFnbm9zZWQgd2l0aCBIQ1YiICkgKSBIQ1ZPYnNlcnZlZAogICAgICAgIHdpdGggIlBhdGllbnQgRW5jb3VudGVyIiBQYXRpZW50RW5jb3VudGVyCiAgICAgICAgICBzdWNoIHRoYXQgRkMuVG9JbnRlcnZhbCAoIEhDVk9ic2VydmVkLmVmZmVjdGl2ZSApIG92ZXJsYXBzIFBhdGllbnRFbmNvdW50ZXIucGVyaW9kCiAgICApCgpkZWZpbmUgIkFjdGl2ZSBEaWFnbm9zaXMgb2YgU3lwaGlsaXMgRHVyaW5nIFBhdGllbnQgVmlzaXQiOgogICggKCBMYXN0KChIQy5RdWFsaWZpZWRDb25kaXRpb25zKEhERS4iU3lwaGlsaXMgRGlhZ25vc2lzIikpIFN5cGhpbGlzRGlhZ25vc2lzCiAgICAgICAgc29ydCBieSAKICAgICAgICBlbmQgb2YgRkMuVG9JbnRlcnZhbChhYmF0ZW1lbnQpCiAgICApICkgU3lwaGlsaXNEaWFnbm9zaXMKICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKICAgICAgICBzdWNoIHRoYXQgRkMuVG9QcmV2YWxlbmNlSW50ZXJ2YWwgKCBTeXBoaWxpc0RpYWdub3NpcyApIG92ZXJsYXBzIFBhdGllbnRFbmNvdW50ZXIucGVyaW9kCiAgKSBpcyBub3QgbnVsbAogICAgb3IgZXhpc3RzICggKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlBhdGllbnQgRGlhZ25vc2VkIHdpdGggU3lwaGlsaXMiICkgKSBTeXBoaWxpc09ic2VydmVkCiAgICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKICAgICAgICAgIHN1Y2ggdGhhdCBGQy5Ub0ludGVydmFsICggU3lwaGlsaXNPYnNlcnZlZC5lZmZlY3RpdmUgKSBvdmVybGFwcyBQYXRpZW50RW5jb3VudGVyLnBlcmlvZAogICAgKQoKZGVmaW5lICJBY3RpdmUgRGlhZ25vc2lzIG9mIEdvbm9ycmhlYSBEdXJpbmcgUGF0aWVudCBWaXNpdCI6CiAgKCAoIExhc3QoKEhDLlF1YWxpZmllZENvbmRpdGlvbnMoSERFLiJHb25vcnJoZWEgRGlhZ25vc2lzIikpIEdvbm9ycmhlYURpYWdub3NpcwogICAgICAgIHNvcnQgYnkgCiAgICAgICAgZW5kIG9mIEZDLlRvSW50ZXJ2YWwoYWJhdGVtZW50KQogICAgKSApIEdvbm9ycmhlYURpYWdub3NpcwogICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogICAgICAgIHN1Y2ggdGhhdCBGQy5Ub1ByZXZhbGVuY2VJbnRlcnZhbCAoIEdvbm9ycmhlYURpYWdub3NpcyApIG92ZXJsYXBzIFBhdGllbnRFbmNvdW50ZXIucGVyaW9kCiAgKSBpcyBub3QgbnVsbAogICAgb3IgZXhpc3RzICggKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlBhdGllbnQgRGlhZ25vc2VkIHdpdGggR29ub3JyaGVhIiApICkgR29ub3JyaGVhT2JzZXJ2ZWQKICAgICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogICAgICAgICAgc3VjaCB0aGF0IEZDLlRvSW50ZXJ2YWwgKCBHb25vcnJoZWFPYnNlcnZlZC5lZmZlY3RpdmUgKSBvdmVybGFwcyBQYXRpZW50RW5jb3VudGVyLnBlcmlvZAogICAgKQoKZGVmaW5lICJBY3RpdmUgRGlhZ25vc2lzIG9mIENobGFteWRpYSBEdXJpbmcgUGF0aWVudCBWaXNpdCI6CiAgKCAoIExhc3QoKEhDLlF1YWxpZmllZENvbmRpdGlvbnMoSERFLiJDaGxhbXlkaWEgRGlhZ25vc2lzIikpIENobGFteWRpYURpYWdub3NpcwogICAgICAgIHNvcnQgYnkgCiAgICAgICAgZW5kIG9mIEZDLlRvSW50ZXJ2YWwoYWJhdGVtZW50KQogICAgKSApIENobGFteWRpYURpYWdub3NpcwogICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogICAgICAgIHN1Y2ggdGhhdCBGQy5Ub1ByZXZhbGVuY2VJbnRlcnZhbCAoIENobGFteWRpYURpYWdub3NpcyApIG92ZXJsYXBzIFBhdGllbnRFbmNvdW50ZXIucGVyaW9kCiAgKSBpcyBub3QgbnVsbAogICAgb3IgZXhpc3RzICggKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlBhdGllbnQgRGlhZ25vc2VkIHdpdGggQ2hsYW15ZGlhIiApICkgQ2hsYW15ZGlhT2JzZXJ2ZWQKICAgICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogICAgICAgICAgc3VjaCB0aGF0IEZDLlRvSW50ZXJ2YWwgKCBDaGxhbXlkaWFPYnNlcnZlZC5lZmZlY3RpdmUgKSBvdmVybGFwcyBQYXRpZW50RW5jb3VudGVyLnBlcmlvZAogICAgKQoKZGVmaW5lICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gYSBTVEQiOgogICJBY3RpdmUgRGlhZ25vc2lzIG9mIEhDViBEdXJpbmcgUGF0aWVudCBWaXNpdCIKICAgIG9yICJBY3RpdmUgRGlhZ25vc2lzIG9mIFN5cGhpbGlzIER1cmluZyBQYXRpZW50IFZpc2l0IgogICAgb3IgIkFjdGl2ZSBEaWFnbm9zaXMgb2YgR29ub3JyaGVhIER1cmluZyBQYXRpZW50IFZpc2l0IgogICAgb3IgIkFjdGl2ZSBEaWFnbm9zaXMgb2YgQ2hsYW15ZGlhIER1cmluZyBQYXRpZW50IFZpc2l0IgoKLy8gSGlnaCBSaXNrIC0tIEluamVjdGlvbiBEcnVnIFVzZQovLyBOT1RFOiBXaGF0IGlzIGNvbnNpZGVyZWQgYW4gQWN0aXZlIFRpbWUgUGVyaW9kIGZvciBJbmplY3Rpb24gRHJ1ZyBVc2U/CgoKCmRlZmluZSAiUGF0aWVudCBpcyBhdCBIaWdoIFJpc2sgRHVlIHRvIEluamVjdGlvbiBEcnVnIFVzZSI6CiAgKCAoIExhc3QoKEhDLlF1YWxpZmllZFByb2NlZHVyZXMoSERFLiJEcnVnIFJlaGFiaWxpdGF0aW9uIikKICAgICAgICB1bmlvbiBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMoSERFLiJJbmplY3Rpb24gRmluZGluZ3MiKQogICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZENvbmRpdGlvbnMoSERFLiJJbmplY3Rpb24gRHJ1ZyBVc2UgRGlhZ25vc2lzIikKICAgICAgICB1bmlvbiBIQy5RdWFsaWZpZWRNZWRpY2F0aW9uU3RhdGVtZW50cyhIREUuIkluamVjdGlvbiBEcnVnIFVzZSIpCiAgICAgICAgdW5pb24gSEMuUXVhbGlmaWVkT2JzZXJ2YXRpb25zKEhERS4iUGF0aWVudCBoYXMgdXNlZCBJbmplY3Rpb24gRHJ1Z3MiKSkgSW5qZWN0aW9uRHJ1Z1VzZQogICAgICAgIHJldHVybiBUdXBsZSB7CiAgICAgICAgICByZXNvdXJjZTogSW5qZWN0aW9uRHJ1Z1VzZSwKICAgICAgICAgIElEVVRpbWluZzogQ29hbGVzY2UoCiAgICAgICAgICAgIGVuZCBvZiBGQy5Ub0ludGVydmFsKEluamVjdGlvbkRydWdVc2UucGVyZm9ybWVkKSwgCiAgICAgICAgICAgIGVuZCBvZiBGQy5Ub0ludGVydmFsKEluamVjdGlvbkRydWdVc2UuZWZmZWN0aXZlKSwgCiAgICAgICAgICAgIGVuZCBvZiBGQy5Ub1ByZXZhbGVuY2VJbnRlcnZhbChJbmplY3Rpb25EcnVnVXNlKQogICAgICAgICAgKQogICAgICAgIH0KICAgICAgICBzb3J0IGJ5IElEVVRpbWluZwogICAgKS5yZXNvdXJjZSApIEluamVjdGlvbkRydWdVc2UKICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKICAgICAgICBzdWNoIHRoYXQgQ29hbGVzY2UoRkMuVG9JbnRlcnZhbChJbmplY3Rpb25EcnVnVXNlLnBlcmZvcm1lZCksIEZDLlRvSW50ZXJ2YWwoSW5qZWN0aW9uRHJ1Z1VzZS5lZmZlY3RpdmUpLCBGQy5Ub1ByZXZhbGVuY2VJbnRlcnZhbChJbmplY3Rpb25EcnVnVXNlKSkgb3ZlcmxhcHMgUGF0aWVudEVuY291bnRlci5wZXJpb2QKICApIGlzIG5vdCBudWxsCgovL0hpZ2ggUmlzayAtLSBEcnVnIEFidXNlCgoKZGVmaW5lICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gRHJ1ZyBBYnVzZSI6CiAgIlBhdGllbnQgSGFzIEhpZ2ggRGVncmVlIE9mIFByb2JsZW1zIFJlbGF0ZWQgVG8gRHJ1ZyBBYnVzZSIKCi8vIEhpZ2ggUmlzayAtLSBQYXJ0bmVyIHdpdGggSElWCgoKZGVmaW5lICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gU2V4dWFsIFBhcnRuZXIgaGF2aW5nIEhJViI6CiAgZXhpc3RzICggKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlNleHVhbCBBY3Rpdml0eSAtIFBhcnRuZXJzIEhJViBIaXN0b3J5IiApICkgSElWUGFydG5lckhpc3RvcnkKICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKICAgICAgICBzdWNoIHRoYXQgRkMuVG9JbnRlcnZhbCAoIEhJVlBhcnRuZXJIaXN0b3J5LmVmZmVjdGl2ZSApIG92ZXJsYXBzIFBhdGllbnRFbmNvdW50ZXIucGVyaW9kCiAgKQoKLy8gSGlnaCBSaXNrIC0tIFNleCBFeGNoYW5nZWQgZm9yIERydWdzL01vbmV5CgoKZGVmaW5lICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gZXhjaGFuZ2luZyBzZXggZm9yIG1vbmV5IG9yIGRydWdzIjoKICBleGlzdHMgKCAoIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyAoIEhERS4iU2V4dWFsIEFjdGl2aXR5IC0gRXhjaGFuZ2VkIGZvciBTZXgiICkgKSBTZXhFeGNoYW5nZWQKICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKICAgICAgICBzdWNoIHRoYXQgRkMuVG9JbnRlcnZhbCAoIFNleEV4Y2hhbmdlZC5lZmZlY3RpdmUgKSBvdmVybGFwcyBQYXRpZW50RW5jb3VudGVyLnBlcmlvZAogICkKCi8vIERIOiBGb3IgdGVzdGluZwovLyBkZWZpbmUgSElWU2NyZWVuaW5nSW50ZXJ2YWw6Ci8vICAgRkMuVG9JbnRlcnZhbCgoKExhc3QoCi8vICAgICAgICAgKAovLyAgICAgICAgICAgSEMuUXVhbGlmaWVkT2JzZXJ2YXRpb25zKEhERS4iSElWIFRlc3RzIikgLy9RdWFsaWZpZWRPYnNlcnZhdGlvbnM6IHN0YXR1cyA9ICdwcmVsaW1pbmFyeScgJ2ZpbmFsJyAnYW1lbmRlZCcgb3IgJ2NvcnJlY3RlZCcKLy8gICAgICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyhIREUuIlByZXZpb3VzIEhJViBTY3JlZW5pbmciKSAvLyBIb3cgZG9lcyB0aGlzIGZpdCBpbiB0aGUgbG9naWM/IFdoZXJlIGlzIGl0cyBgc3RhdHVzYCBhdHRyaWJ1dGU/Ci8vICAgICAgICAgKSBISVZTY3JlZW5pbmcKLy8gICAgICAgICBzb3J0IGJ5IGVuZCBvZiBGQy5Ub0ludGVydmFsKGVmZmVjdGl2ZSkgLy9ESDogVGhlIHJlc3VsdCBvZiB3aWxsIGJlIGEgJ3VuaXQgaW50ZXJ2YWwnLiBIb3cgaXMgdGhhdCBkaWZmZW5lbnQgdGhhbiBqdXN0Ci8vICAgICApKSBISVZTY3JlZW5pbmcpLmVmZmVjdGl2ZSkKCi8vIERIOiBmb3IgdGVzdGluZwovLyBkZWZpbmUgTnVtYmVyT2ZQYXJ0bmVyc0ludGVydmFsOgovLyAgICgKLy8gICAgICAgICBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMoSERFLiJTZXh1YWwgQWN0aXZpdHkgLSBOdW1iZXIgb2YgUGFydG5lcnMiKSAvLyBESDogTnVtYmVyIG9mIFBhcnRuZXJzIHNlZW1zIHRvIGVxdWF0ZSB0byBNdWx0aXBsZSBQYXJ0bmVycwovLyAgICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyhIREUuIlNleHVhbCBBY3Rpdml0eSAtIFBhcnRuZXJzIE51bWJlciBvZiBQYXJ0bmVycyIpCi8vICAgICAgICkgTnVtYmVyT2ZQYXJ0bmVycwoKLy8gSGlnaCBSaXNrIC0tIE11bHRpcGxlIFNleCBQYXJ0bmVycyBzaW5jZSBwcmV2aW91cyBISVYgU2NyZWVuaW5nIGZvciBQYXRpZW50IG9yIHRoZWlyIHBhcnRuZXIKLy8gREg6IG5vdGUgdGhhdCByZWxpZXMgb24gdGltZXN0YW1wcyBvZiBISVYgVGVzdCBvYnNlcnZhdGlvbiBhbmQgTXVsdGlwbGUgUGFydG5lcnMgb2JzZXJ2YXRpb24uIEZvciBleGFtcGxlIGlmCi8vIHlvdXIgdGVzdCBjYXNlIGhhcyBhIG5lZ2F0aXZlIEhJViB0ZXN0IGFuZCB0aGVuIGEgZnJlc2ggb2JzZXJ2YXRpb24gb2YgTXVsdGlwbGUgUGFydG5lcnMsIHRoZW4gdGhleSBhcmUKLy8gb25jZSBhZ2FpbiBtYXJrZWQgaGlnaCByaXNrLgovLyBZb3UgbWlnaHQgdGhpbmsgZm9yIHByYWN0aWNhbCBwdXBvc2VzIG9uY2UgYSBwZXJzb24gaGFzIG11bHRpcGxlIHBhcnRuZXJzIHRoYXQgdGhhdCBkZXNpZ25hdGlvbiBtaWdodCBub3QKLy8gYmUgY2hhbmdlZCBpLmUuIHRoZSBwYXRpZW50IG1pZ2h0IGJlIGNvbnNpZGVyZWQgZm9yZXZlciBoaWdoIHJpc2suCi8vIERIOiB0aGVyZSdzIHNvbWUgcmVkdW5kYW55IGhlcmUuIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyBsaW1pdHMgc3RhdHVzID0gJ3ByZWxpbWluYXJ5JyAnZmluYWwnICdhbWVuZGVkJyBvciAnY29ycmVjdGVkJwovLyBidXQgaW4gIlNleHVhbCBBY3Rpdml0eSAtIE51bWJlciBvZiBQYXJ0bmVycyIgaXQgaXMgYWxyZWFkeSBsaW1pdGVkIHRvICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgICAgICAKCmRlZmluZSAiUGF0aWVudCBpcyBhdCBIaWdoIFJpc2sgRHVlIHRvIE11bHRpcGxlIFNleCBQYXJ0bmVycyBzaW5jZSBsYXN0IHNjcmVlbmluZyI6CiAgKCAoIExhc3QoKEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyhIREUuIkhJViBUZXN0cyIpIC8vUXVhbGlmaWVkT2JzZXJ2YXRpb25zOiBzdGF0dXMgPSAncHJlbGltaW5hcnknICdmaW5hbCcgJ2FtZW5kZWQnIG9yICdjb3JyZWN0ZWQnCiAgICAgICAgCiAgICAgICAgdW5pb24gSEMuUXVhbGlmaWVkT2JzZXJ2YXRpb25zKEhERS4iUHJldmlvdXMgSElWIFNjcmVlbmluZyIpIC8vIEhvdyBkb2VzIHRoaXMgZml0IGluIHRoZSBsb2dpYz8gV2hlcmUgaXMgaXRzIGBzdGF0dXNgIGF0dHJpYnV0ZT8KICAgICAgKSBISVZTY3JlZW5pbmcKICAgICAgICBzb3J0IGJ5IAogICAgICAgIGVuZCBvZiBGQy5Ub0ludGVydmFsKGVmZmVjdGl2ZSkgLy9ESDogVGhlIHJlc3VsdCBvZiB3aWxsIGJlIGEgJ3VuaXQgaW50ZXJ2YWwnLiBIb3cgaXMgdGhhdCBkaWZmZW5lbnQgdGhhbiBqdXN0IAogICAgCiAgICApICkgSElWU2NyZWVuaW5nCiAgICAgIHdpdGggKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlNleHVhbCBBY3Rpdml0eSAtIE51bWJlciBvZiBQYXJ0bmVycyIgKSAvLyBESDogTnVtYmVyIG9mIFBhcnRuZXJzIHNlZW1zIHRvIGVxdWF0ZSB0byBNdWx0aXBsZSBQYXJ0bmVycwogICAgICAgIAogICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyAoIEhERS4iU2V4dWFsIEFjdGl2aXR5IC0gUGFydG5lcnMgTnVtYmVyIG9mIFBhcnRuZXJzIiApICkgTnVtYmVyT2ZQYXJ0bmVycwogICAgICAgIHN1Y2ggdGhhdCBGQy5Ub0ludGVydmFsICggSElWU2NyZWVuaW5nLmVmZmVjdGl2ZSApIGJlZm9yZSBGQy5Ub0ludGVydmFsICggTnVtYmVyT2ZQYXJ0bmVycy5lZmZlY3RpdmUgKQogICkgaXMgbm90IG51bGwKCmRlZmluZSAiUGF0aWVudCBpcyBhdCBIaWdoIFJpc2sgZm9yIEhJViI6CiAgIlBhdGllbnQgaXMgYXQgSGlnaCBSaXNrIER1ZSB0byBhIFNURCIKICAgIG9yICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gSW5qZWN0aW9uIERydWcgVXNlIgogICAgb3IgIlBhdGllbnQgaXMgYXQgSGlnaCBSaXNrIER1ZSB0byBEcnVnIEFidXNlIiAgLy9zY29yZSBvZiA2IHRocm91Z2ggMTAgb24gREFTVAogICAgCiAgICBvciAiUGF0aWVudCBpcyBhdCBIaWdoIFJpc2sgRHVlIHRvIFNleHVhbCBQYXJ0bmVyIGhhdmluZyBISVYiCiAgICBvciAiUGF0aWVudCBpcyBhdCBIaWdoIFJpc2sgRHVlIHRvIGV4Y2hhbmdpbmcgc2V4IGZvciBtb25leSBvciBkcnVncyIKICAgIG9yICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gTXVsdGlwbGUgU2V4IFBhcnRuZXJzIHNpbmNlIGxhc3Qgc2NyZWVuaW5nIgoKLy8gZGVmaW5lICJ4IjoKLy8gZmFsc2Ugb3IgZmFsc2Ugb3IgbnVsbCBvciBmYWxzZSBvciBmYWxzZSBvciBmYWxzZQoKLyogTU9ERVJBVEUgUklTSyAqLwovLyBTZXh1YWxseSBhY3RpdmUgTVNNLCBUcmFuc2dlbmRlciBwYXRpZW50IHNleHVhbGx5IGFjdGl2ZSB3aXRoIG1lbiwgR2F5IGFuZCBiaXNleHVhbCBtZW4gdW5sZXNzIGRvY3VtZW50ZWQgbm90IHNleHVhbGx5IGFjdGl2ZQoKLy8gTW9kZXJhdGUgUmlzayAtLSBBbnkgc2V4dWFsbHkgYWN0aXZlIE1TTQoKZGVmaW5lICJIYXMgc2V4IHdpdGggbWVuIjoKICBpZiBleGlzdHMgSERFLiJIYXMgc2V4IHdpdGggbWVuIgogIHRoZW4gdHJ1ZQogIGVsc2UgZmFsc2UKCi8vIE1vZGVyYXRlIFJpc2sgLS0gVHJhbnNnZW5kZXIgcGF0aWVudHMgc2V4dWFsbHkgYWN0aXZlIHdpdGggbWVuCgpkZWZpbmUgIlRyYW5zZ2VuZGVyIFBhdGllbnQgU2V4dWFsbHkgQWN0aXZlIFdpdGggTWVuIjoKICBpZiAiUGF0aWVudCBpcyBUcmFuc2dlbmRlciIgdGhlbiAoIGV4aXN0cyAoICggSEMuUXVhbGlmaWVkT2JzZXJ2YXRpb25zICggSERFLiJIYXMgc2V4IHdpdGggbWVuIiApICkgTVNNT2JzZXJ2ZWQKICAgICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogICAgICAgICAgc3VjaCB0aGF0IEZDLlRvSW50ZXJ2YWwgKCBNU01PYnNlcnZlZC5lZmZlY3RpdmUgKSBvdmVybGFwcyBQYXRpZW50RW5jb3VudGVyLnBlcmlvZAogICAgKQogICkgCiAgICBlbHNlIGZhbHNlCgovLyBNb2RlcmF0ZSBSaXNrIC0tIEFsbCBnYXkgb3IgYmlzZXh1YWwgbWVuIHVubGVzcyBkb2N1bWVudGVkIG5vdCBzZXh1YWxseSBhY3RpdmUKCmRlZmluZSAiTWFsZSBhbmQgKEdheSBvciBCaXNleHVhbCkgUGF0aWVudCBOb3QgRG9jdW1lbnRlZCBTZXh1YWxseSBJbmFjdGl2ZSI6CiAgIlBhdGllbnQgaXMgTWFsZSIKICAgIGFuZCAiUGF0aWVudCBpcyBHYXkgb3IgQmlzZXh1YWwiCiAgICBhbmQgbm90ICJQYXRpZW50IGlzIERvY3VtZW50ZWQgU2V4dWFsbHkgSW5hY3RpdmUiCgpkZWZpbmUgIlBhdGllbnQgaXMgYXQgTW9kZXJhdGUgUmlzayBmb3IgSElWIjoKICAiUGF0aWVudCBpcyBNYWxlIiBhbmQgIkhhcyBzZXggd2l0aCBtZW4iCiAgb3IgIlRyYW5zZ2VuZGVyIFBhdGllbnQgU2V4dWFsbHkgQWN0aXZlIFdpdGggTWVuIgogIG9yICJNYWxlIGFuZCAoR2F5IG9yIEJpc2V4dWFsKSBQYXRpZW50IE5vdCBEb2N1bWVudGVkIFNleHVhbGx5IEluYWN0aXZlIgoKCi8qIE5vIFJpc2sgKi8KLy8gTm90IFNleHVhbGx5IEFjdGl2ZQoKZGVmaW5lICJQYXRpZW50IGlzIERvY3VtZW50ZWQgU2V4dWFsbHkgSW5hY3RpdmUiOgogICggKCBMYXN0KChIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMoSERFLiJTZXh1YWwgQWN0aXZpdHkgLSBQYXN0IFllYXIiKQogICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyhIREUuIlNleHVhbCBBY3Rpdml0eSAtIEhpc3RvcnkiKQogICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyhIREUuIkhhcyBzZXggd2l0aCBtZW4iKQogICAgICAgIHVuaW9uIEhDLlF1YWxpZmllZE9ic2VydmF0aW9ucyhIREUuIlNleHVhbCBBY3Rpdml0eSAtIFdvbWVuIikpIFNleHVhbEhpc3RvcnkKICAgICAgICB3aGVyZSBDb2FsZXNjZShMb3dlcihTZXh1YWxIaXN0b3J5LnZhbHVlIGFzIHN0cmluZykgaW4geyAnbm8nIH0sIFNleHVhbEhpc3RvcnkudmFsdWUgYXMgYm9vbGVhbiA9IGZhbHNlKQogICAgICAgIHNvcnQgYnkgQ29hbGVzY2UoZWZmZWN0aXZlLCBpc3N1ZWQpCiAgICApICkgU2V4dWFsSGlzdG9yeQogICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgRW5jb3VudGVyCiAgICAgICAgc3VjaCB0aGF0IENvYWxlc2NlKEZDLlRvSW50ZXJ2YWwoU2V4dWFsSGlzdG9yeS5lZmZlY3RpdmUpLCBGQy5Ub0ludGVydmFsKFNleHVhbEhpc3RvcnkuaXNzdWVkKSkgZHVyaW5nIEVuY291bnRlci5wZXJpb2QKICApIGlzIG5vdCBudWxsCgpkZWZpbmUgIlBhdGllbnQgaXMgYXQgTm8gUmlzayBmb3IgSElWIjogLy8gT2YgY291cnNlIG5vYm9keSBpcyBldmVyIGF0IE5vIFJpc2suIEknbSBqdXN0IHNheWluJy4gCiAgCiAgIlBhdGllbnQgaXMgRG9jdW1lbnRlZCBTZXh1YWxseSBJbmFjdGl2ZSIgCgoKLyogTE9XIFJJU0sgKi8KLy8gTm90IHNleHVhbGx5IGFjdGl2ZQoKZGVmaW5lICJQYXRpZW50IGlzIGF0IExvdyBSaXNrIGZvciBISVYiOgogIG5vdCAiUGF0aWVudCBpcyBhdCBIaWdoIFJpc2sgZm9yIEhJViIgIC8vIHJpc2t5IGJlaGF2aW9ycwogICAgCiAgICBhbmQgbm90ICJQYXRpZW50IGlzIGF0IE1vZGVyYXRlIFJpc2sgZm9yIEhJViIgLy8gZ2VuZXRpYyBtYWxlcyBzZXh1YWxseSBhY3RpdmUgd2l0aCBnZW5ldGljIG1hbGVzCiAgICAKICAgIGFuZCBub3QgIlBhdGllbnQgaXMgYXQgTm8gUmlzayBmb3IgSElWIiAgLy8gaS5lLiBub3QgIlBhdGllbnQgaXMgRG9jdW1lbnRlZCBTZXh1YWxseSBJbmFjdGl2ZSIKCi8vIERIOiBUZXN0aW5nIHRlc3RpbmcKCmRlZmluZSBQYXRpZW50RW5jb3VudGVyUGVyaW9kU3RhcnQ6CiAgc3RhcnQgb2YgKCAiUGF0aWVudCBFbmNvdW50ZXIiLnBlcmlvZCApCgpkZWZpbmUgUGF0aWVudEVuY291bnRlclBlcmlvZEVuZDoKICBlbmQgb2YgKCAiUGF0aWVudCBFbmNvdW50ZXIiLnBlcmlvZCApCgpkZWZpbmUgU2Vla2luZ1RyZWF0bWVudERhdGU6CiAgKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlNlZWtpbmcgU1REIFRyZWF0bWVudCIgKSApLmVmZmVjdGl2ZS52YWx1ZQoKLyogV29tZW4gJiBNZW4gV29ya2Zsb3cgKi8KLy8gQWxsIFdvbWVuIGFuZCBNZW4gYmV0d2VlbiB0aGUgYWdlcyAxMy02NCBhbmQvb3IgdGhvc2Ugd2hvIGFyZSBzZWVraW5nIHRyZWF0bWVudCBmb3IgYW4gU1RECgpkZWZpbmUgIlBhdGllbnQgaXMgU2Vla2luZyBUcmVhdG1lbnQgZm9yIGFuIFNURCI6CiAgZXhpc3RzICggKCBIQy5RdWFsaWZpZWRPYnNlcnZhdGlvbnMgKCBIREUuIlNlZWtpbmcgU1REIFRyZWF0bWVudCIgKSApIFNlZWtpbmdUcmVhdG1lbnQKICAgICAgd2l0aCAiUGF0aWVudCBFbmNvdW50ZXIiIFBhdGllbnRFbmNvdW50ZXIKICAgICAgICBzdWNoIHRoYXQgRkMuVG9JbnRlcnZhbCAoIFNlZWtpbmdUcmVhdG1lbnQuZWZmZWN0aXZlICkgb3ZlcmxhcHMgUGF0aWVudEVuY291bnRlci5wZXJpb2QKICApCgovKiBQcmVnbmFudCBXb21lbiBXb3JrZmxvdyAqLwovLyBBbGwgV29tZW4gc2hvdWxkIGJlIHNjcmVlbmVkIGF0IEluaXRpYWwgUHJlbmF0YWwgVmlzaXQKLy8gQWxsIHdvbWVuIHNob3VsZCBiZSByZXRlc3RlZCBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyIGlmIHRoZXkncmUgaGlnaCByaXNrCi8vIE5PVEU6IFRoaXMgZGVmaW5pdGlvbiBpbXBsZW1lbnRhdGlvbiBpcyBuYWl2ZSBhbmQgZG9lcyBub3QgdGFrZSBpbnRvIGVmZmVjdCBtdWx0aXBsZSBwcmVnbmFuY2llcy4gQ29uc2lkZXIgdXNlIG9mIGFuIEVwaXNvZGVPZkNhcmUgcmVzb3VyY2UuCgpkZWZpbmUgIlBhdGllbnQgaXMgYXQgRmlyc3QgUHJlbmF0YWwgVmlzaXQiOgogICggKCBGaXJzdCgoSEMuUXVhbGlmaWVkRW5jb3VudGVycyhIREUuIlByZWduYW5jeSBFbmNvdW50ZXJzIikpIFByZWduYW5jeUVuY291bnRlcgogICAgICAgIHNvcnQgYnkgCiAgICAgICAgZW5kIG9mIHBlcmlvZAogICAgKSApIFByZWduYW5jeUVuY291bnRlcgogICAgICB3aXRoICJQYXRpZW50IEVuY291bnRlciIgUGF0aWVudEVuY291bnRlcgogICAgICAgIHN1Y2ggdGhhdCBQcmVnbmFuY3lFbmNvdW50ZXIuaWQgPSBQYXRpZW50RW5jb3VudGVyLmlkCiAgKSBpcyBub3QgbnVsbAoKLy8gZGVmaW5lICJQYXRpZW50IGlzIGluIFRoaXJkIFRyaW1lc3RlciBvZiBQcmVnbmFuY3kiOgovLyAgICgKLy8gICAgIChMYXN0KAovLyAgICAgICAoSEMuUXVhbGlmaWVkRW5jb3VudGVycyhIREUuIlRoaXJkIFRyaW1lc3RlciBFbmNvdW50ZXJzIikpIFRoaXJkVHJpbWVzdGVyRW5jb3VudGVyCi8vICAgICBzb3J0IGJ5IGVuZCBvZiBwZXJpb2QKLy8gICAgICkpIFRoaXJkVHJpbWVzdGVyRW5jb3VudGVyCi8vICAgICAgIC8vIHdpdGggIlBhdGllbnQgRW5jb3VudGVyIiBQYXRpZW50RW5jb3VudGVyCi8vICAgICAgIC8vICAgc3VjaCB0aGF0IFRoaXJkVHJpbWVzdGVyRW5jb3VudGVyLmlkID0gUGF0aWVudEVuY291bnRlci5pZAovLyAgICkgaXMgbm90IG51bGwKCi8vIGRlZmluZSAiUGF0aWVudCBpcyBIaWdoIFJpc2sgaW4gVGhpcmQgVHJpbWVzdGVyIG9mIFByZWduYW5jeSI6Ci8vICAgIlBhdGllbnQgaXMgYXQgSGlnaCBSaXNrIGZvciBISVYiCi8vICAgYW5kICJQYXRpZW50IGlzIGluIFRoaXJkIFRyaW1lc3RlciBvZiBQcmVnbmFuY3kiCgovKiBNU00gKE1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4pICovCi8vIEF0IExlYXN0IEFubnVhbGx5IGZvciBzZXh1YWxseSBhY3RpdmUgTVNNIGlmIEhJViBzdGF0dXMgaXNuJ3QgcG9zaXRpdmUgYW5kIGlmIHBhdGllbnQvcGFydG5lciBoYXMgaGFkIG1vcmUgdGhhbiAxIHBhcnRuZXIgc2luY2UgcHJldmlvdXMgc2NyZWVuaW5nCi8vIEZvciBzZXh1YWxseSBhY3RpdmUgTVNNIFRlc3RzIHNob3VsZCBvY2N1ciBldmVyeSAzIG1vbnRocyBpZiB0aGUgcGF0aWVudCBoYXMgZXhwZXJpZW5jZWQgcHJlcAoKZGVmaW5lICJQYXRpZW50IGlzIGEgc2V4dWFsbHkgYWN0aXZlIE1TTSB3aXRob3V0IEhJViI6CiAgIlBhdGllbnQgaXMgTWFsZSIgYW5kICJIYXMgc2V4IHdpdGggbWVuIgogIGFuZCBub3QgIkFjdGl2ZSBkaWFnbm9zaXMgb2YgSElWIgoKZGVmaW5lICJQYXRpZW50IGlzIGEgc2V4dWFsbHkgYWN0aXZlIE1TTSB3aXRoIE11bHRpcGxlIFNleCBQYXJ0bmVycyI6CiAgIlBhdGllbnQgaXMgYSBzZXh1YWxseSBhY3RpdmUgTVNNIHdpdGhvdXQgSElWIgogICAgYW5kICJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gTXVsdGlwbGUgU2V4IFBhcnRuZXJzIHNpbmNlIGxhc3Qgc2NyZWVuaW5nIgoKLy8gZGVmaW5lICJQYXRpZW50IGlzIGEgc2V4dWFsbHkgYWN0aXZlIE1TTSB3aG8gc2hvdWxkIGJlIFNjcmVlbmVkIEFubnVhbGx5IjoKLy8gICAiUGF0aWVudCBpcyBhIHNleHVhbGx5IGFjdGl2ZSBNU00gd2l0aCBNdWx0aXBsZSBTZXggUGFydG5lcnMiCi8vICAgICBhbmQgIk92ZXIgYSBZZWFyIGhhcyBQYXNzZWQgU2luY2UgUHJldmlvdXMgSElWIFNjcmVlbmluZyIKCmRlZmluZSAiUGF0aWVudCBpcyBhIHNleHVhbGx5IGFjdGl2ZSBNU00gd2hvIHNob3VsZCBiZSBTY3JlZW5lZCBFdmVyeSAzIE1vbnRocyI6CiAgIlBhdGllbnQgaXMgYSBzZXh1YWxseSBhY3RpdmUgTVNNIHdpdGhvdXQgSElWIgogICAgYW5kICJPbiBwcmUtZXhwb3N1cmUgcHJvcGh5bGF4aXMiCiAgICBhbmQgIk92ZXIgMyBNb250aHMgaGFzIFBhc3NlZCBTaW5jZSBQcmV2aW91cyBISVYgU2NyZWVuaW5nIgoKCi8qIERydWcgQWJ1c2UgU2NyZW5pbmcgVGVzdCAoREFTVC0xMCkgUXVlc3Rpb25uYWlyZSAqLwovLyBTY29yZSBhY3F1aXJlZCBlaXRoZXIgYnkgdGFsbHlpbmcgY29kZXMgZm9yIERBU1QtMTAgcXVlc3Rpb25zIG9yIGJ5IHRoZSB2YWx1ZSBmaWVsZCBvZiBEQVNULTEwIFF1ZXN0aW9ubmFpcmUgb3IgcmVzdWx0IGNvZGVzCi8vIEhpZ2ggUmlzazogPj0gNgovLyBNb2RlcmF0ZSBSaXNrOiAzIC0gNQovLyBMb3cgUmlzazogMSAtIDIKLy8gTm8gUmlzazogMAoKCgoKCgoKZGVmaW5lICJEQVNUIDEwIFJlc3VsdCBTY29yZSI6CiAgTkMuTW9zdFJlY2VudCAoIEhERS4iREFTVCAxMCBTY29yZSIgKS52YWx1ZS52YWx1ZQoKZGVmaW5lICJBbGwgREFTVCAxMCBRdWVzdGlvbnMiOgogIHsgTkMuTW9zdFJlY2VudCAoIEhERS4iREFTVCAxMCBRdWVzdGlvbiAxIiApLCBOQy5Nb3N0UmVjZW50ICggSERFLiJEQVNUIDEwIFF1ZXN0aW9uIDIiICksIE5DLk1vc3RSZWNlbnQgKCBIREUuIkRBU1QgMTAgUXVlc3Rpb24gMyIgKSwgTkMuTW9zdFJlY2VudCAoIEhERS4iREFTVCAxMCBRdWVzdGlvbiA0IiApLCBOQy5Nb3N0UmVjZW50ICggSERFLiJEQVNUIDEwIFF1ZXN0aW9uIDUiICksIE5DLk1vc3RSZWNlbnQgKCBIREUuIkRBU1QgMTAgUXVlc3Rpb24gNiIgKSwgTkMuTW9zdFJlY2VudCAoIEhERS4iREFTVCAxMCBRdWVzdGlvbiA3IiApLCBOQy5Nb3N0UmVjZW50ICggSERFLiJEQVNUIDEwIFF1ZXN0aW9uIDgiICksIE5DLk1vc3RSZWNlbnQgKCBIREUuIkRBU1QgMTAgUXVlc3Rpb24gOSIgKSwgTkMuTW9zdFJlY2VudCAoIEhERS4iREFTVCAxMCBRdWVzdGlvbiAxMCIgKSB9CgpkZWZpbmUgIkxhdGVzdCBEQVNUIDEwIFF1ZXN0aW9ucyBEYXRlIjoKICBkYXRlIGZyb20gc3RhcnQgb2YgRkMuVG9JbnRlcnZhbCAoIE5DLk1vc3RSZWNlbnQgKCAiQWxsIERBU1QgMTAgUXVlc3Rpb25zIiApLmVmZmVjdGl2ZSApCgpkZWZpbmUgIkRBU1QgMTAgUXVlc3Rpb25zIFNjb3JlIjoKICBDb3VudCgiQWxsIERBU1QgMTAgUXVlc3Rpb25zIiBxdWVzdGlvbgogICAgICB3aGVyZSBxdWVzdGlvbi52YWx1ZSBhcyBib29sZWFuIGlzIHRydWUKICApCgpkZWZpbmUgIkxhdGVzdCBEQVNUIDEwIFNjcmVlbmluZyBEYXRlIjoKICBkYXRlIGZyb20gc3RhcnQgb2YgRkMuVG9JbnRlcnZhbCAoIE5DLk1vc3RSZWNlbnQgKCBIREUuIkRBU1QgMTAgU2NvcmUiCiAgICB1bmlvbiAiQWxsIERBU1QgMTAgUXVlc3Rpb25zIiApLmVmZmVjdGl2ZSApCgovLyJQYXRpZW50IGlzIGF0IEhpZ2ggUmlzayBEdWUgdG8gYSBTVEQiCgoKZGVmaW5lICJQYXRpZW50IEhhcyBIaWdoIERlZ3JlZSBPZiBQcm9ibGVtcyBSZWxhdGVkIFRvIERydWcgQWJ1c2UiOgogICggIkRBU1QgMTAgUmVzdWx0IFNjb3JlIiBpbiAiREFTVCAxMCBIaWdoIFJpc2sgU2NvcmUiICkKICAgIG9yICggIkRBU1QgMTAgUXVlc3Rpb25zIFNjb3JlIiBpbiAiREFTVCAxMCBIaWdoIFJpc2sgU2NvcmUiICkKCi8vIHRoaXMgaGFzIG5vIGFwcGFyZW50IGFwcGxpY2F0aW9uCgoKZGVmaW5lICJQYXRpZW50IEhhcyBNb2RlcmF0ZSBEZWdyZWUgT2YgUHJvYmxlbXMgUmVsYXRlZCBUbyBEcnVnIEFidXNlIjoKICAoICJEQVNUIDEwIFJlc3VsdCBTY29yZSIgaW4gIkRBU1QgMTAgTW9kZXJhdGUgUmlzayBTY29yZSIgKQogICAgb3IgKCAiREFTVCAxMCBRdWVzdGlvbnMgU2NvcmUiIGluICJEQVNUIDEwIE1vZGVyYXRlIFJpc2sgU2NvcmUiICkKCmRlZmluZSAiUGF0aWVudCBIYXMgTG93IERlZ3JlZSBPZiBQcm9ibGVtcyBSZWxhdGVkIFRvIERydWcgQWJ1c2UiOgogICggIkRBU1QgMTAgUmVzdWx0IFNjb3JlIiBpbiAiREFTVCAxMCBMb3cgUmlzayBTY29yZSIgKQogICAgb3IgKCAiREFTVCAxMCBRdWVzdGlvbnMgU2NvcmUiIGluICJEQVNUIDEwIExvdyBSaXNrIFNjb3JlIiApCgovLyB0aGlzIGhhcyBubyBhcHBhcmVudCBhcHBsaWNhdGlvbgoKCmRlZmluZSAiUGF0aWVudCBIYXMgTG93IFRvIE1vZGVyYXRlIERlZ3JlZSBPZiBQcm9ibGVtcyBSZWxhdGVkIFRvIERydWcgQWJ1c2UiOgogICJQYXRpZW50IEhhcyBMb3cgRGVncmVlIE9mIFByb2JsZW1zIFJlbGF0ZWQgVG8gRHJ1ZyBBYnVzZSIKICAgIG9yICJQYXRpZW50IEhhcyBNb2RlcmF0ZSBEZWdyZWUgT2YgUHJvYmxlbXMgUmVsYXRlZCBUbyBEcnVnIEFidXNlIgoKLy8gdGhpcyBoYXMgbm8gYXBwYXJlbnQgYXBwbGljYXRpb24KCgpkZWZpbmUgIlBhdGllbnQgSGFzIE5vIFByb2JsZW1zIFJlbGF0ZWQgVG8gRHJ1ZyBBYnVzZSI6CiAgKCAiREFTVCAxMCBSZXN1bHQgU2NvcmUiIGluICJEQVNUIDEwIE5vIFJpc2sgU2NvcmUiICkKICAgIG9yICggIkRBU1QgMTAgUXVlc3Rpb25zIFNjb3JlIiBpcyBudWxsICkKCi8vIHRoaXMgaGFzIG5vIGFwcGFyZW50IGFwcGxpY2F0aW9uCgoKZGVmaW5lICJQYXRpZW50IE5vdCBTY3JlZW5lZCBGb3IgRHJ1ZyBBYnVzZSBPciBTY3JlZW5pbmcgRXhwaXJlZCI6CiAgKCAiTGF0ZXN0IERBU1QgMTAgU2NyZWVuaW5nIERhdGUiIGlzIG51bGwgKQogICAgb3IgKCBkaWZmZXJlbmNlIGluIHllYXJzIGJldHdlZW4gIkxhdGVzdCBEQVNUIDEwIFNjcmVlbmluZyBEYXRlIiBhbmQgVG9kYXkoKSA+PSAxICkKCmRlZmluZSAiREFTVCAxMCBIaWdoIFJpc2sgU2NvcmUiOgogIEludGVydmFsWzYsIDEwXQoKZGVmaW5lICJEQVNUIDEwIE1vZGVyYXRlIFJpc2sgU2NvcmUiOgogIEludGVydmFsWzMsIDVdCgpkZWZpbmUgIkRBU1QgMTAgTG93IFJpc2sgU2NvcmUiOgogIEludGVydmFsWzEsIDJdCgpkZWZpbmUgIkRBU1QgMTAgTm8gUmlzayBTY29yZSI6CiAgSW50ZXJ2YWxbMCwgMF0="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}