{
  "resourceType": "Library",
  "id": "HIVCommon",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.6.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": false
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  } ],
  "url": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVCommon",
  "name": "HIVCommon",
  "title": "Library - HIV Common",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "description": "A Shared library encapsulating valuable common functions for HIV Screening.",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionClinicalStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-clinical"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionVerificationStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "library HIVCommon

using FHIR version '4.0.1'

include FHIRHelpers version '4.0.1'

include FHIRCommon called FC

context Patient

define function Official(identifiers List<Identifier>):
  singleton from (identifiers I where I.use = 'official')

define function Official(names List<HumanName>):
  singleton from (names N where N.use = 'official')

define function Only(observations List<Observation>):
  singleton from observations

define function Earliest(observations List<Observation>):
  First(
    observations O
      sort by issued
  )

define function Latest(observations List<Observation>):
  Last(
    observations O
      sort by issued
  )

define function MostRecent(observations List<Observation>):
  Last(
    observations O
      sort by issued
  )

define function Lowest(observations List<Observation>):
  First(
    observations O
      sort by (value as FHIR.Quantity)
  )

define function Highest(observations List<Observation>):
  Last(
    observations O
      sort by (value as FHIR.Quantity)
  )


/*
NOTE: Extensions are not the preferred approach, but are used as a way to access
content that is defined by extensions but not yet surfaced in the
CQL model info.
*/

define function QICoreModifierExtensions(domainResource DomainResource, url String):
  domainResource.modifierExtension E
    where E.url = ('http://hl7.org/fhir/us/qicore/StructureDefinition/' + url)
    return E

define function QICoreModifierExtension(domainResource DomainResource, url String):
  singleton from QICoreModifierExtensions(domainResource, url)

define function QICoreExtensions(domainResource DomainResource, url String):
  domainResource.extension E
    where E.url = ('http://hl7.org/fhir/us/qicore/StructureDefinition/' + url)
    return E

define function QICoreExtension(domainResource DomainResource, url String):
  singleton from QICoreExtensions(domainResource, url)

define function GetBaseModifierExtensions(domainResource DomainResource, url String):
  domainResource.modifierExtension E
	  where E.url = ('http://hl7.org/fhir/StructureDefinition/' + url)
		return E

define function GetBaseModifierExtension(domainResource DomainResource, url String):
  singleton from GetBaseModifierExtensions(domainResource, url)

define function GetBaseExtensions(domainResource DomainResource, url String):
  domainResource.extension E
	  where E.url = ('http://hl7.org/fhir/StructureDefinition/' + url)
		return E

define function GetBaseExtension(domainResource DomainResource, url String):
  singleton from GetBaseExtensions(domainResource, url)

define function GetUSModifierExtensions(domainResource DomainResource, url String):
  domainResource.modifierExtension E
	  where E.url = ('http://hl7.org/fhir/us/core/StructureDefinition/' + url)
		return E

define function GetUSModifierExtension(domainResource DomainResource, url String):
  singleton from GetUSModifierExtensions(domainResource, url)

define function GetUSExtensions(domainResource DomainResource, url String):
  domainResource.extension E
	  where E.url = ('http://hl7.org/fhir/us/core/StructureDefinition/' + url)
		return E

define function GetUSExtension(domainResource DomainResource, url String):
  singleton from GetUSExtensions(domainResource, url)

define function GetExtensionValue(extension Extension):
  extension.value.value

define function GetHIVExtensions(domainResource DomainResource, url String):
  domainResource.extension E
	  where E.url = ('http://fhir.org/guides/nachc/hiv-cds/StructureDefinition/' + url)
		return E

define function GetHIVExtension(domainResource DomainResource, url String):
  singleton from GetHIVExtensions(domainResource, url)


/* QI-CORE Extensions */
define function GetResourceNotDone(notDone DomainResource):
  QICoreModifierExtension(notDone, 'qicore-notDone')

define function GetResourceNotDoneReason(notDoneReason DomainResource):
  QICoreExtension(notDoneReason, 'qicore-notDoneReason')

define function GetResourceDoNotPerformReason(doNotPerformReason DomainResource):
  QICoreExtension(doNotPerformReason, 'qicore-doNotPerformReason')

define function GetResourceNotDoneRecorded(recorded DomainResource):
  QICoreExtension(recorded, 'qicore-recorded')

define function GetResourceNotDoneRecorded(choice Choice<FHIR.Observation, FHIR.Procedure, FHIR.MedicationAdministration, FHIR.MedicationDispense, FHIR.Communication>):
  case
    when choice is FHIR.Observation then
      QICoreExtension(choice as FHIR.Observation, 'qicore-recorded')
    when choice is FHIR.Procedure then
      QICoreExtension(choice as FHIR.Procedure, 'qicore-recorded')
    when choice is FHIR.MedicationAdministration then
      QICoreExtension(choice as FHIR.MedicationAdministration, 'qicore-recorded')
    when choice is FHIR.MedicationDispense then
      QICoreExtension(choice as FHIR.MedicationDispense, 'qicore-recorded')
    when choice is FHIR.Communication then
      QICoreExtension(choice as FHIR.Communication, 'qicore-recorded')
    else null
  end


define function GetSexualOrientation(resource DomainResource):
  GetHIVExtension(resource, 'sexualorientation')

define function GetGenderIdentity(resource DomainResource):
  GetHIVExtension(resource, 'genderidentity')


/* Common Resource Qualifications */
define function QualifiedEncounters(value List<FHIR.Encounter>):
  value Encounter
    where (
      //planned | arrived | triaged | in-progress | onleave | finished | cancelled | entered-in-error | unknown
      Encounter.status ~ 'arrived'
      or Encounter.status ~ 'in-progress'
      or Encounter.status ~ 'finished'
    )

define function QualifiedConditions(value List<FHIR.Condition>):
  value Condition
    where (
      FHIRHelpers.ToConcept(Condition.clinicalStatus) ~ FC."active"
    )
    and (
      FHIRHelpers.ToConcept(Condition.verificationStatus) ~ FC."confirmed"
    )

define function QualifiedProcedures(value List<FHIR.Procedure>):
  value Procedure
    where (
      //preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown
      Procedure.status ~ 'completed'
    )

define function QualifiedObservations(value List<FHIR.Observation>):
  value Observation
		where (
      //registered | preliminary | final | amended | corrected | cancelled | entered-in-error | unknown
      Observation.status ~ 'preliminary'
      or Observation.status ~ 'final'
			or Observation.status ~ 'amended'
			or Observation.status ~ 'corrected'
		)

define function QualifiedMedicationRequests(value List<FHIR.MedicationRequest>):
  value MedicationRequest
    where (
      //active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown
      (MedicationRequest.status ~ 'active'
        or MedicationRequest.status ~ 'completed'
      )
        and (
          MedicationRequest.doNotPerform is null
          or MedicationRequest.doNotPerform = false
        )
    )

define function QualifiedMedicationStatements(value List<FHIR.MedicationStatement>):
  value MedicationStatement
    where (
      // active | completed | entered-in-error | intended | stopped | on-hold | unknown | not-taken
      MedicationStatement.status ~ 'active'
      or MedicationStatement.status ~ 'completed'
    )

define function QualifiedMedicationDispenses(value List<FHIR.MedicationDispense>):
  value MedicationDispense
    // preparation | in-progress | cancelled | on-hold | completed | entered-in-error | stopped | declined | unknown
    where (
      MedicationDispense.status ~ 'preparation'
      or MedicationDispense.status ~ 'in-progress'
      or MedicationDispense.status ~ 'completed'
    )
"
  }, {
    "contentType": "application/elm+xml",
    "data": "<?xml version='1.1' encoding='UTF-8'?>
<Library type="Library" localId="0">
  <wstxns1:identifier xmlns:wstxns1="urn:hl7-org:elm:r1" wstxns1:type="VersionedIdentifier" id="HIVCommon" system="http://fhir.org/guides/nachc/hiv-cds"/>
  <wstxns2:schemaIdentifier xmlns:wstxns2="urn:hl7-org:elm:r1" wstxns2:type="VersionedIdentifier" id="urn:hl7-org:elm" version="r1"/>
  <wstxns3:usings xmlns:wstxns3="urn:hl7-org:elm:r1" wstxns3:type="Library$Usings">
    <wstxns3:def>
      <wstxns3:def wstxns3:type="UsingDef" localId="1" localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <wstxns3:def wstxns3:type="UsingDef" localId="206" locator="3:1-3:26" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="4.0.1">
        <wstxns3:annotation>
          <wstxns3:annotation wstxns3:type="Annotation">
            <wstxns4:s xmlns:wstxns4="urn:hl7-org:cql-annotations:r1" r="206">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>using </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value>
                          <s>
                            <s>FHIR</s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s> version '4.0.1'</s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns4:s>
          </wstxns3:annotation>
        </wstxns3:annotation>
      </wstxns3:def>
    </wstxns3:def>
  </wstxns3:usings>
  <wstxns5:includes xmlns:wstxns5="urn:hl7-org:elm:r1" wstxns5:type="Library$Includes">
    <wstxns5:def>
      <wstxns5:def wstxns5:type="IncludeDef" localId="207" locator="5:1-5:35" localIdentifier="FHIRHelpers" path="http://fhir.org/guides/nachc/hiv-cds/FHIRHelpers" version="4.0.1">
        <wstxns5:annotation>
          <wstxns5:annotation wstxns5:type="Annotation">
            <wstxns6:s xmlns:wstxns6="urn:hl7-org:cql-annotations:r1" r="207">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>include </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value>
                          <s>
                            <s>FHIRHelpers</s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s> version </s>
                      <s>'4.0.1'</s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns6:s>
          </wstxns5:annotation>
        </wstxns5:annotation>
      </wstxns5:def>
      <wstxns5:def wstxns5:type="IncludeDef" localId="208" locator="7:1-7:28" localIdentifier="FC" path="http://fhir.org/guides/nachc/hiv-cds/FHIRCommon">
        <wstxns5:annotation>
          <wstxns5:annotation wstxns5:type="Annotation">
            <wstxns7:s xmlns:wstxns7="urn:hl7-org:cql-annotations:r1" r="208">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>include </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value>
                          <s>
                            <s>FHIRCommon</s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s> called </s>
                      <s>FC</s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns7:s>
          </wstxns5:annotation>
        </wstxns5:annotation>
      </wstxns5:def>
    </wstxns5:def>
  </wstxns5:includes>
  <wstxns8:contexts xmlns:wstxns8="urn:hl7-org:elm:r1" wstxns8:type="Library$Contexts">
    <wstxns8:def>
      <wstxns8:def wstxns8:type="ContextDef" localId="212" locator="9:1-9:15" name="Patient"/>
    </wstxns8:def>
  </wstxns8:contexts>
  <wstxns9:statements xmlns:wstxns9="urn:hl7-org:elm:r1" wstxns9:type="Library$Statements">
    <wstxns9:def>
      <wstxns9:def wstxns9:type="ExpressionDef" localId="210" locator="9:1-9:15" name="Patient" context="Patient">
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="211">
          <wstxns9:operand wstxns9:type="Retrieve" localId="209" locator="9:1-9:15" dataType="{http://hl7.org/fhir}Patient" templateId="http://hl7.org/fhir/StructureDefinition/Patient"/>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="213" locator="11:1-12:57" name="Official" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="216" name="identifiers">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="214" locator="11:38-11:53">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="215" locator="11:43-11:52" name="{http://hl7.org/fhir}Identifier"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns10:s xmlns:wstxns10="urn:hl7-org:cql-annotations:r1" r="213">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Official(identifiers List&lt;Identifier>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="217">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="217">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="225">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="225">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="218">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="219">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>identifiers</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>I</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="220">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>where </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="220">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="222">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="221">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>I</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="222">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>use</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>=</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="223">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'official'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns10:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="217" locator="12:3-12:57">
          <wstxns9:operand wstxns9:type="Query" localId="225" locator="12:18-12:57">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="218" locator="12:19-12:31" alias="I">
                <wstxns9:expression wstxns9:type="OperandRef" localId="219" locator="12:19-12:29" name="identifiers"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:where wstxns9:type="Equal" localId="220" locator="12:33-12:56">
              <wstxns9:operand>
                <wstxns9:operand wstxns9:type="FunctionRef" localId="224" name="ToString" libraryName="FHIRHelpers">
                  <wstxns9:operand>
                    <wstxns9:operand wstxns9:type="Property" localId="222" locator="12:39-12:43" path="use" scope="I"/>
                  </wstxns9:operand>
                </wstxns9:operand>
                <wstxns9:operand wstxns9:type="Literal" localId="223" locator="12:47-12:56" valueType="{urn:hl7-org:elm-types:r1}String" value="official"/>
              </wstxns9:operand>
            </wstxns9:where>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="226" locator="14:1-15:51" name="Official" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="229" name="names">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="227" locator="14:32-14:46">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="228" locator="14:37-14:45" name="{http://hl7.org/fhir}HumanName"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns11:s xmlns:wstxns11="urn:hl7-org:cql-annotations:r1" r="226">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Official(names List&lt;HumanName>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="230">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="230">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="238">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="238">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="231">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="232">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>names</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>N</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="233">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>where </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="233">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="235">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="234">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>N</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="235">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>use</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>=</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="236">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'official'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns11:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="230" locator="15:3-15:51">
          <wstxns9:operand wstxns9:type="Query" localId="238" locator="15:18-15:51">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="231" locator="15:19-15:25" alias="N">
                <wstxns9:expression wstxns9:type="OperandRef" localId="232" locator="15:19-15:23" name="names"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:where wstxns9:type="Equal" localId="233" locator="15:27-15:50">
              <wstxns9:operand>
                <wstxns9:operand wstxns9:type="FunctionRef" localId="237" name="ToString" libraryName="FHIRHelpers">
                  <wstxns9:operand>
                    <wstxns9:operand wstxns9:type="Property" localId="235" locator="15:33-15:37" path="use" scope="N"/>
                  </wstxns9:operand>
                </wstxns9:operand>
                <wstxns9:operand wstxns9:type="Literal" localId="236" locator="15:41-15:50" valueType="{urn:hl7-org:elm-types:r1}String" value="official"/>
              </wstxns9:operand>
            </wstxns9:where>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="239" locator="17:1-18:29" name="Only" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="242" name="observations">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="240" locator="17:35-17:51">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="241" locator="17:40-17:50" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns12:s xmlns:wstxns12="urn:hl7-org:cql-annotations:r1" r="239">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Only(observations List&lt;Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="243">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="243">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="244">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>observations</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns12:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="243" locator="18:3-18:29">
          <wstxns9:operand wstxns9:type="OperandRef" localId="244" locator="18:18-18:29" name="observations"/>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="245" locator="20:1-24:3" name="Earliest" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="248" name="observations">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="246" locator="20:39-20:55">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="247" locator="20:44-20:54" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns13:s xmlns:wstxns13="urn:hl7-org:cql-annotations:r1" r="245">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Earliest(observations List&lt;Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="2">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="2">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>First</s>
                                  <s>(
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="258">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="249">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="250">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>observations</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> </s>
                                                    <s>O</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="252">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>sort by </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="251">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="1">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>issued</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
  )</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns13:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="First" localId="2" locator="21:3-24:3">
          <wstxns9:source wstxns9:type="Query" localId="258" locator="22:5-23:20">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="249" locator="22:5-22:18" alias="O">
                <wstxns9:expression wstxns9:type="OperandRef" localId="250" locator="22:5-22:16" name="observations"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:sort wstxns9:type="SortClause" localId="252" locator="23:7-23:20">
              <wstxns9:by>
                <wstxns9:by wstxns9:type="ByColumn" localId="251" locator="23:15-23:20" direction="asc" path="issued"/>
              </wstxns9:by>
            </wstxns9:sort>
          </wstxns9:source>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="261" locator="26:1-30:3" name="Latest" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="264" name="observations">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="262" locator="26:37-26:53">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="263" locator="26:42-26:52" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns14:s xmlns:wstxns14="urn:hl7-org:cql-annotations:r1" r="261">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Latest(observations List&lt;Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="4">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="4">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>Last</s>
                                  <s>(
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="274">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="265">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="266">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>observations</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> </s>
                                                    <s>O</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="268">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>sort by </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="267">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="3">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>issued</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
  )</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns14:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Last" localId="4" locator="27:3-30:3">
          <wstxns9:source wstxns9:type="Query" localId="274" locator="28:5-29:20">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="265" locator="28:5-28:18" alias="O">
                <wstxns9:expression wstxns9:type="OperandRef" localId="266" locator="28:5-28:16" name="observations"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:sort wstxns9:type="SortClause" localId="268" locator="29:7-29:20">
              <wstxns9:by>
                <wstxns9:by wstxns9:type="ByColumn" localId="267" locator="29:15-29:20" direction="asc" path="issued"/>
              </wstxns9:by>
            </wstxns9:sort>
          </wstxns9:source>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="277" locator="32:1-36:3" name="MostRecent" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="280" name="observations">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="278" locator="32:41-32:57">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="279" locator="32:46-32:56" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns15:s xmlns:wstxns15="urn:hl7-org:cql-annotations:r1" r="277">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function MostRecent(observations List&lt;Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="6">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="6">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>Last</s>
                                  <s>(
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="290">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="281">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="282">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>observations</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> </s>
                                                    <s>O</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="284">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>sort by </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="283">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="5">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>issued</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
  )</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns15:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Last" localId="6" locator="33:3-36:3">
          <wstxns9:source wstxns9:type="Query" localId="290" locator="34:5-35:20">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="281" locator="34:5-34:18" alias="O">
                <wstxns9:expression wstxns9:type="OperandRef" localId="282" locator="34:5-34:16" name="observations"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:sort wstxns9:type="SortClause" localId="284" locator="35:7-35:20">
              <wstxns9:by>
                <wstxns9:by wstxns9:type="ByColumn" localId="283" locator="35:15-35:20" direction="asc" path="issued"/>
              </wstxns9:by>
            </wstxns9:sort>
          </wstxns9:source>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="293" locator="38:1-42:3" name="Lowest" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="296" name="observations">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="294" locator="38:37-38:53">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="295" locator="38:42-38:52" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns16:s xmlns:wstxns16="urn:hl7-org:cql-annotations:r1" r="293">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Lowest(observations List&lt;Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="8">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="8">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>First</s>
                                  <s>(
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="308">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="297">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="298">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>observations</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> </s>
                                                    <s>O</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="302">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>sort by </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="301">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="299">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>(</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="299">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="7">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>value</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> as </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="300">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>FHIR</s>
                                                                      <s>.</s>
                                                                      <s>Quantity</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>)</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
  )</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns16:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="First" localId="8" locator="39:3-42:3">
          <wstxns9:source wstxns9:type="Query" localId="308" locator="40:5-41:38">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="297" locator="40:5-40:18" alias="O">
                <wstxns9:expression wstxns9:type="OperandRef" localId="298" locator="40:5-40:16" name="observations"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:sort wstxns9:type="SortClause" localId="302" locator="41:7-41:38">
              <wstxns9:by>
                <wstxns9:by wstxns9:type="ByExpression" localId="301" locator="41:15-41:38" direction="asc">
                  <wstxns9:expression wstxns9:type="As" localId="299" locator="41:15-41:38" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="300" locator="41:25-41:37" name="{http://hl7.org/fhir}Quantity"/>
                    <wstxns9:operand wstxns9:type="IdentifierRef" localId="7" locator="41:16-41:20" name="value"/>
                  </wstxns9:expression>
                </wstxns9:by>
              </wstxns9:by>
            </wstxns9:sort>
          </wstxns9:source>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="311" locator="44:1-48:3" name="Highest" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="314" name="observations">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="312" locator="44:38-44:54">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="313" locator="44:43-44:53" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns17:s xmlns:wstxns17="urn:hl7-org:cql-annotations:r1" r="311">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function Highest(observations List&lt;Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="10">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="10">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>Last</s>
                                  <s>(
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="326">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="315">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="316">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>observations</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> </s>
                                                    <s>O</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="320">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>sort by </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="319">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="317">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>(</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="317">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="9">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>value</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> as </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="318">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>FHIR</s>
                                                                      <s>.</s>
                                                                      <s>Quantity</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>)</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
  )</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns17:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Last" localId="10" locator="45:3-48:3">
          <wstxns9:source wstxns9:type="Query" localId="326" locator="46:5-47:38">
            <wstxns9:source>
              <wstxns9:source wstxns9:type="AliasedQuerySource" localId="315" locator="46:5-46:18" alias="O">
                <wstxns9:expression wstxns9:type="OperandRef" localId="316" locator="46:5-46:16" name="observations"/>
              </wstxns9:source>
            </wstxns9:source>
            <wstxns9:sort wstxns9:type="SortClause" localId="320" locator="47:7-47:38">
              <wstxns9:by>
                <wstxns9:by wstxns9:type="ByExpression" localId="319" locator="47:15-47:38" direction="asc">
                  <wstxns9:expression wstxns9:type="As" localId="317" locator="47:15-47:38" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="318" locator="47:25-47:37" name="{http://hl7.org/fhir}Quantity"/>
                    <wstxns9:operand wstxns9:type="IdentifierRef" localId="9" locator="47:16-47:20" name="value"/>
                  </wstxns9:expression>
                </wstxns9:by>
              </wstxns9:by>
            </wstxns9:sort>
          </wstxns9:source>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="329" locator="57:1-60:12" name="QICoreModifierExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="331" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="330" locator="57:57-57:70" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="333" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="332" locator="57:77-57:82" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns18:s xmlns:wstxns18="urn:hl7-org:cql-annotations:r1" r="329">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s>/*
NOTE: Extensions are not the preferred approach, but are used as a way to access
content that is defined by extensions but not yet surfaced in the
CQL model info.
*/

</s>
                      <s>define function QICoreModifierExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="347">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="347">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="334">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="336">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>modifierExtension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="337">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="337">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="339">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="338">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="339">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="343">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="343">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="341">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://hl7.org/fhir/us/qicore/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="342">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="345">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="346">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns18:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="347" locator="58:3-60:12">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="334" locator="58:3-58:36" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="336" locator="58:3-58:34" path="modifierExtension">
                <wstxns9:source wstxns9:type="OperandRef" localId="335" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="337" locator="59:5-59:78">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="344" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="339" locator="59:11-59:15" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="343" locator="59:19-59:78">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="341" locator="59:20-59:71" valueType="{urn:hl7-org:elm-types:r1}String" value="http://hl7.org/fhir/us/qicore/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="342" locator="59:75-59:77" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="345" locator="60:5-60:12">
            <wstxns9:expression wstxns9:type="AliasRef" localId="346" locator="60:12" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="348" locator="62:1-63:62" name="QICoreModifierExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="350" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="349" locator="62:56-62:69" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="352" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="351" locator="62:76-62:81" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns19:s xmlns:wstxns19="urn:hl7-org:cql-annotations:r1" r="348">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QICoreModifierExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="353">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="353">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="356">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>QICoreModifierExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="354">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="355">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns19:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="353" locator="63:3-63:62">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="356" locator="63:18-63:62" name="QICoreModifierExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="354" locator="63:43-63:56" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="355" locator="63:59-63:61" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="357" locator="65:1-68:12" name="QICoreExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="359" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="358" locator="65:49-65:62" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="361" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="360" locator="65:69-65:74" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns20:s xmlns:wstxns20="urn:hl7-org:cql-annotations:r1" r="357">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QICoreExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="375">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="375">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="362">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="364">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>extension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="365">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="365">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="367">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="366">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="367">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="371">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="371">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="369">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://hl7.org/fhir/us/qicore/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="370">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="373">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="374">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns20:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="375" locator="66:3-68:12">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="362" locator="66:3-66:28" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="364" locator="66:3-66:26" path="extension">
                <wstxns9:source wstxns9:type="OperandRef" localId="363" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="365" locator="67:5-67:78">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="372" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="367" locator="67:11-67:15" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="371" locator="67:19-67:78">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="369" locator="67:20-67:71" valueType="{urn:hl7-org:elm-types:r1}String" value="http://hl7.org/fhir/us/qicore/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="370" locator="67:75-67:77" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="373" locator="68:5-68:12">
            <wstxns9:expression wstxns9:type="AliasRef" localId="374" locator="68:12" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="376" locator="70:1-71:54" name="QICoreExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="378" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="377" locator="70:48-70:61" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="380" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="379" locator="70:68-70:73" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns21:s xmlns:wstxns21="urn:hl7-org:cql-annotations:r1" r="376">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QICoreExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="381">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="381">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="384">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>QICoreExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="382">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="383">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns21:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="381" locator="71:3-71:54">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="384" locator="71:18-71:54" name="QICoreExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="382" locator="71:35-71:48" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="383" locator="71:51-71:53" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="385" locator="73:1-76:10" name="GetBaseModifierExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="387" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="386" locator="73:58-73:71" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="389" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="388" locator="73:78-73:83" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns22:s xmlns:wstxns22="urn:hl7-org:cql-annotations:r1" r="385">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetBaseModifierExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="403">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="403">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="390">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="392">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>modifierExtension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
	  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="393">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="393">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="395">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="394">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="395">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="399">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="399">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="397">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://hl7.org/fhir/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="398">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
		</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="401">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="402">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns22:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="403" locator="74:3-76:10">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="390" locator="74:3-74:36" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="392" locator="74:3-74:34" path="modifierExtension">
                <wstxns9:source wstxns9:type="OperandRef" localId="391" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="393" locator="75:4-75:67">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="400" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="395" locator="75:10-75:14" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="399" locator="75:18-75:67">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="397" locator="75:19-75:60" valueType="{urn:hl7-org:elm-types:r1}String" value="http://hl7.org/fhir/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="398" locator="75:64-75:66" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="401" locator="76:3-76:10">
            <wstxns9:expression wstxns9:type="AliasRef" localId="402" locator="76:10" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="404" locator="78:1-79:63" name="GetBaseModifierExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="406" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="405" locator="78:57-78:70" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="408" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="407" locator="78:77-78:82" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns23:s xmlns:wstxns23="urn:hl7-org:cql-annotations:r1" r="404">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetBaseModifierExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="409">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="409">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="412">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>GetBaseModifierExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="410">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="411">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns23:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="409" locator="79:3-79:63">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="412" locator="79:18-79:63" name="GetBaseModifierExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="410" locator="79:44-79:57" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="411" locator="79:60-79:62" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="413" locator="81:1-84:10" name="GetBaseExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="415" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="414" locator="81:50-81:63" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="417" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="416" locator="81:70-81:75" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns24:s xmlns:wstxns24="urn:hl7-org:cql-annotations:r1" r="413">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetBaseExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="431">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="431">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="418">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="420">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>extension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
	  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="421">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="421">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="423">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="422">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="423">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="427">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="427">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="425">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://hl7.org/fhir/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="426">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
		</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="429">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="430">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns24:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="431" locator="82:3-84:10">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="418" locator="82:3-82:28" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="420" locator="82:3-82:26" path="extension">
                <wstxns9:source wstxns9:type="OperandRef" localId="419" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="421" locator="83:4-83:67">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="428" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="423" locator="83:10-83:14" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="427" locator="83:18-83:67">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="425" locator="83:19-83:60" valueType="{urn:hl7-org:elm-types:r1}String" value="http://hl7.org/fhir/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="426" locator="83:64-83:66" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="429" locator="84:3-84:10">
            <wstxns9:expression wstxns9:type="AliasRef" localId="430" locator="84:10" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="432" locator="86:1-87:55" name="GetBaseExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="434" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="433" locator="86:49-86:62" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="436" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="435" locator="86:69-86:74" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns25:s xmlns:wstxns25="urn:hl7-org:cql-annotations:r1" r="432">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetBaseExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="437">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="437">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="440">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>GetBaseExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="438">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="439">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns25:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="437" locator="87:3-87:55">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="440" locator="87:18-87:55" name="GetBaseExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="438" locator="87:36-87:49" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="439" locator="87:52-87:54" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="441" locator="89:1-92:10" name="GetUSModifierExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="443" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="442" locator="89:56-89:69" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="445" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="444" locator="89:76-89:81" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns26:s xmlns:wstxns26="urn:hl7-org:cql-annotations:r1" r="441">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetUSModifierExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="459">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="459">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="446">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="448">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>modifierExtension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
	  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="449">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="449">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="451">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="450">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="451">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="455">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="455">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="453">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://hl7.org/fhir/us/core/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="454">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
		</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="457">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="458">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns26:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="459" locator="90:3-92:10">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="446" locator="90:3-90:36" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="448" locator="90:3-90:34" path="modifierExtension">
                <wstxns9:source wstxns9:type="OperandRef" localId="447" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="449" locator="91:4-91:75">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="456" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="451" locator="91:10-91:14" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="455" locator="91:18-91:75">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="453" locator="91:19-91:68" valueType="{urn:hl7-org:elm-types:r1}String" value="http://hl7.org/fhir/us/core/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="454" locator="91:72-91:74" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="457" locator="92:3-92:10">
            <wstxns9:expression wstxns9:type="AliasRef" localId="458" locator="92:10" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="460" locator="94:1-95:61" name="GetUSModifierExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="462" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="461" locator="94:55-94:68" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="464" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="463" locator="94:75-94:80" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns27:s xmlns:wstxns27="urn:hl7-org:cql-annotations:r1" r="460">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetUSModifierExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="465">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="465">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="468">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>GetUSModifierExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="466">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="467">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns27:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="465" locator="95:3-95:61">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="468" locator="95:18-95:61" name="GetUSModifierExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="466" locator="95:42-95:55" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="467" locator="95:58-95:60" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="469" locator="97:1-100:10" name="GetUSExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="471" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="470" locator="97:48-97:61" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="473" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="472" locator="97:68-97:73" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns28:s xmlns:wstxns28="urn:hl7-org:cql-annotations:r1" r="469">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetUSExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="487">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="487">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="474">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="476">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>extension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
	  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="477">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="477">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="479">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="478">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="479">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="483">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="483">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="481">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://hl7.org/fhir/us/core/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="482">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
		</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="485">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="486">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns28:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="487" locator="98:3-100:10">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="474" locator="98:3-98:28" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="476" locator="98:3-98:26" path="extension">
                <wstxns9:source wstxns9:type="OperandRef" localId="475" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="477" locator="99:4-99:75">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="484" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="479" locator="99:10-99:14" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="483" locator="99:18-99:75">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="481" locator="99:19-99:68" valueType="{urn:hl7-org:elm-types:r1}String" value="http://hl7.org/fhir/us/core/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="482" locator="99:72-99:74" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="485" locator="100:3-100:10">
            <wstxns9:expression wstxns9:type="AliasRef" localId="486" locator="100:10" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="488" locator="102:1-103:53" name="GetUSExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="490" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="489" locator="102:47-102:60" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="492" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="491" locator="102:67-102:72" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns29:s xmlns:wstxns29="urn:hl7-org:cql-annotations:r1" r="488">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetUSExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="493">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="493">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="496">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>GetUSExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="494">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="495">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns29:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="493" locator="103:3-103:53">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="496" locator="103:18-103:53" name="GetUSExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="494" locator="103:34-103:47" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="495" locator="103:50-103:52" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="497" locator="105:1-106:23" name="GetExtensionValue" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="499" name="extension">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="498" locator="105:45-105:53" name="{http://hl7.org/fhir}Extension"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns30:s xmlns:wstxns30="urn:hl7-org:cql-annotations:r1" r="497">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetExtensionValue(extension Extension):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="502">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="502">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="501">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="500">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>extension</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>.</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="501">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>value</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>.</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="502">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>value</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns30:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Property" localId="502" locator="106:3-106:23" path="value">
          <wstxns9:source wstxns9:type="Property" localId="501" locator="106:3-106:17" path="value">
            <wstxns9:source wstxns9:type="OperandRef" localId="500" locator="106:3-106:11" name="extension"/>
          </wstxns9:source>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="503" locator="108:1-111:10" name="GetHIVExtensions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="505" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="504" locator="108:49-108:62" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="507" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="506" locator="108:69-108:74" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns31:s xmlns:wstxns31="urn:hl7-org:cql-annotations:r1" r="503">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetHIVExtensions(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="521">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="521">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="508">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="510">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>domainResource</s>
                                                          <s>.</s>
                                                          <s>extension</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
	  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="511">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="511">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="513">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="512">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>E</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>.</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="513">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>url</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>=</s>
                                              <s> </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="517">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="517">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="515">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'http://fhir.org/guides/nachc/hiv-cds/StructureDefinition/'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> + </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="516">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>url</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>)</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
		</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="519">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>return </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="520">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>E</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns31:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="521" locator="109:3-111:10">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="508" locator="109:3-109:28" alias="E">
              <wstxns9:expression wstxns9:type="Property" localId="510" locator="109:3-109:26" path="extension">
                <wstxns9:source wstxns9:type="OperandRef" localId="509" name="domainResource"/>
              </wstxns9:expression>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equal" localId="511" locator="110:4-110:84">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="518" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="513" locator="110:10-110:14" path="url" scope="E"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Concatenate" localId="517" locator="110:18-110:84">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="515" locator="110:19-110:77" valueType="{urn:hl7-org:elm-types:r1}String" value="http://fhir.org/guides/nachc/hiv-cds/StructureDefinition/"/>
                  <wstxns9:operand wstxns9:type="OperandRef" localId="516" locator="110:81-110:83" name="url"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
          <wstxns9:return wstxns9:type="ReturnClause" localId="519" locator="111:3-111:10">
            <wstxns9:expression wstxns9:type="AliasRef" localId="520" locator="111:10" name="E"/>
          </wstxns9:return>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="522" locator="113:1-114:54" name="GetHIVExtension" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="524" name="domainResource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="523" locator="113:48-113:61" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="526" name="url">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="525" locator="113:68-113:73" name="{urn:hl7-org:elm-types:r1}String"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns32:s xmlns:wstxns32="urn:hl7-org:cql-annotations:r1" r="522">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetHIVExtension(domainResource DomainResource, url String):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="527">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="527">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>singleton from </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="530">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>GetHIVExtensions</s>
                                        <s>(</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="528">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>domainResource</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>, </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="529">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>url</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>)</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns32:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="SingletonFrom" localId="527" locator="114:3-114:54">
          <wstxns9:operand wstxns9:type="FunctionRef" localId="530" locator="114:18-114:54" name="GetHIVExtensions">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="OperandRef" localId="528" locator="114:35-114:48" name="domainResource"/>
              <wstxns9:operand wstxns9:type="OperandRef" localId="529" locator="114:51-114:53" name="url"/>
            </wstxns9:operand>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="531" locator="118:1-119:52" name="GetResourceNotDone" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="533" name="notDone">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="532" locator="118:44-118:57" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns33:s xmlns:wstxns33="urn:hl7-org:cql-annotations:r1" r="531">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s>/* QI-CORE Extensions */
</s>
                      <s>define function GetResourceNotDone(notDone DomainResource):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="536">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="536">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>QICoreModifierExtension</s>
                                  <s>(</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="534">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>notDone</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>, </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="535">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>'qicore-notDone'</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>)</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns33:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="FunctionRef" localId="536" locator="119:3-119:52" name="QICoreModifierExtension">
          <wstxns9:operand>
            <wstxns9:operand wstxns9:type="OperandRef" localId="534" locator="119:27-119:33" name="notDone"/>
            <wstxns9:operand wstxns9:type="Literal" localId="535" locator="119:36-119:51" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-notDone"/>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="537" locator="121:1-122:56" name="GetResourceNotDoneReason" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="539" name="notDoneReason">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="538" locator="121:56-121:69" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns34:s xmlns:wstxns34="urn:hl7-org:cql-annotations:r1" r="537">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetResourceNotDoneReason(notDoneReason DomainResource):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="542">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="542">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>QICoreExtension</s>
                                  <s>(</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="540">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>notDoneReason</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>, </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="541">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>'qicore-notDoneReason'</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>)</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns34:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="FunctionRef" localId="542" locator="122:3-122:56" name="QICoreExtension">
          <wstxns9:operand>
            <wstxns9:operand wstxns9:type="OperandRef" localId="540" locator="122:19-122:31" name="notDoneReason"/>
            <wstxns9:operand wstxns9:type="Literal" localId="541" locator="122:34-122:55" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-notDoneReason"/>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="543" locator="124:1-125:66" name="GetResourceDoNotPerformReason" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="545" name="doNotPerformReason">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="544" locator="124:66-124:79" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns35:s xmlns:wstxns35="urn:hl7-org:cql-annotations:r1" r="543">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetResourceDoNotPerformReason(doNotPerformReason DomainResource):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="548">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="548">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>QICoreExtension</s>
                                  <s>(</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="546">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>doNotPerformReason</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>, </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="547">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>'qicore-doNotPerformReason'</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>)</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns35:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="FunctionRef" localId="548" locator="125:3-125:66" name="QICoreExtension">
          <wstxns9:operand>
            <wstxns9:operand wstxns9:type="OperandRef" localId="546" locator="125:19-125:36" name="doNotPerformReason"/>
            <wstxns9:operand wstxns9:type="Literal" localId="547" locator="125:39-125:65" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-doNotPerformReason"/>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="549" locator="127:1-128:46" name="GetResourceNotDoneRecorded" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="551" name="recorded">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="550" locator="127:53-127:66" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns36:s xmlns:wstxns36="urn:hl7-org:cql-annotations:r1" r="549">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetResourceNotDoneRecorded(recorded DomainResource):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="554">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="554">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>QICoreExtension</s>
                                  <s>(</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="552">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>recorded</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>, </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="553">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>'qicore-recorded'</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>)</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns36:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="FunctionRef" localId="554" locator="128:3-128:46" name="QICoreExtension">
          <wstxns9:operand>
            <wstxns9:operand wstxns9:type="OperandRef" localId="552" locator="128:19-128:26" name="recorded"/>
            <wstxns9:operand wstxns9:type="Literal" localId="553" locator="128:29-128:45" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-recorded"/>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="555" locator="130:1-143:5" name="GetResourceNotDoneRecorded" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="562" name="choice">
            <wstxns9:operandTypeSpecifier wstxns9:type="ChoiceTypeSpecifier" localId="561" locator="130:51-130:166">
              <wstxns9:choice>
                <wstxns9:choice wstxns9:type="NamedTypeSpecifier" localId="556" locator="130:58-130:73" name="{http://hl7.org/fhir}Observation"/>
                <wstxns9:choice wstxns9:type="NamedTypeSpecifier" localId="557" locator="130:76-130:89" name="{http://hl7.org/fhir}Procedure"/>
                <wstxns9:choice wstxns9:type="NamedTypeSpecifier" localId="558" locator="130:92-130:120" name="{http://hl7.org/fhir}MedicationAdministration"/>
                <wstxns9:choice wstxns9:type="NamedTypeSpecifier" localId="559" locator="130:123-130:145" name="{http://hl7.org/fhir}MedicationDispense"/>
                <wstxns9:choice wstxns9:type="NamedTypeSpecifier" localId="560" locator="130:148-130:165" name="{http://hl7.org/fhir}Communication"/>
              </wstxns9:choice>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns37:s xmlns:wstxns37="urn:hl7-org:cql-annotations:r1" r="555">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetResourceNotDoneRecorded(choice Choice&lt;FHIR.Observation, FHIR.Procedure, FHIR.MedicationAdministration, FHIR.MedicationDispense, FHIR.Communication>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="563">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="563">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>case
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="564">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>when </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="565">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="566">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>choice</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> is </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="567">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>FHIR</s>
                                                    <s>.</s>
                                                    <s>Observation</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s> then
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="572">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>QICoreExtension</s>
                                              <s>(</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="568">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="569">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>choice</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> as </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="570">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>FHIR</s>
                                                          <s>.</s>
                                                          <s>Observation</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>, </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="571">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>'qicore-recorded'</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>)</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="573">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>when </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="574">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="575">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>choice</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> is </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="576">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>FHIR</s>
                                                    <s>.</s>
                                                    <s>Procedure</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s> then
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="581">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>QICoreExtension</s>
                                              <s>(</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="577">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="578">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>choice</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> as </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="579">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>FHIR</s>
                                                          <s>.</s>
                                                          <s>Procedure</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>, </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="580">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>'qicore-recorded'</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>)</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="582">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>when </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="583">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="584">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>choice</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> is </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="585">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>FHIR</s>
                                                    <s>.</s>
                                                    <s>MedicationAdministration</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s> then
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="590">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>QICoreExtension</s>
                                              <s>(</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="586">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="587">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>choice</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> as </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="588">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>FHIR</s>
                                                          <s>.</s>
                                                          <s>MedicationAdministration</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>, </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="589">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>'qicore-recorded'</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>)</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="591">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>when </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="592">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="593">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>choice</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> is </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="594">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>FHIR</s>
                                                    <s>.</s>
                                                    <s>MedicationDispense</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s> then
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="599">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>QICoreExtension</s>
                                              <s>(</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="595">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="596">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>choice</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> as </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="597">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>FHIR</s>
                                                          <s>.</s>
                                                          <s>MedicationDispense</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>, </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="598">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>'qicore-recorded'</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>)</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="600">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>when </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="601">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="602">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>choice</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> is </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="603">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>FHIR</s>
                                                    <s>.</s>
                                                    <s>Communication</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s> then
      </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="608">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>QICoreExtension</s>
                                              <s>(</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="604">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="605">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>choice</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> as </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="606">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>FHIR</s>
                                                          <s>.</s>
                                                          <s>Communication</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>, </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="607">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>'qicore-recorded'</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>)</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="609">
                                <s>
                                  <s>
    else </s>
                                  <s>null</s>
                                  <s>
  end</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns37:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Case" localId="563" locator="131:3-143:5">
          <wstxns9:caseItem>
            <wstxns9:caseItem wstxns9:type="CaseItem" localId="564" locator="132:5-133:68">
              <wstxns9:when wstxns9:type="Is" localId="565" locator="132:10-132:35">
                <wstxns9:isTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="567" locator="132:20-132:35" name="{http://hl7.org/fhir}Observation"/>
                <wstxns9:operand wstxns9:type="OperandRef" localId="566" locator="132:10-132:15" name="choice"/>
              </wstxns9:when>
              <wstxns9:then wstxns9:type="FunctionRef" localId="572" locator="133:7-133:68" name="QICoreExtension">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="As" localId="568" locator="133:23-133:48" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="570" locator="133:33-133:48" name="{http://hl7.org/fhir}Observation"/>
                    <wstxns9:operand wstxns9:type="OperandRef" localId="569" locator="133:23-133:28" name="choice"/>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="571" locator="133:51-133:67" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-recorded"/>
                </wstxns9:operand>
              </wstxns9:then>
            </wstxns9:caseItem>
            <wstxns9:caseItem wstxns9:type="CaseItem" localId="573" locator="134:5-135:66">
              <wstxns9:when wstxns9:type="Is" localId="574" locator="134:10-134:33">
                <wstxns9:isTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="576" locator="134:20-134:33" name="{http://hl7.org/fhir}Procedure"/>
                <wstxns9:operand wstxns9:type="OperandRef" localId="575" locator="134:10-134:15" name="choice"/>
              </wstxns9:when>
              <wstxns9:then wstxns9:type="FunctionRef" localId="581" locator="135:7-135:66" name="QICoreExtension">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="As" localId="577" locator="135:23-135:46" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="579" locator="135:33-135:46" name="{http://hl7.org/fhir}Procedure"/>
                    <wstxns9:operand wstxns9:type="OperandRef" localId="578" locator="135:23-135:28" name="choice"/>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="580" locator="135:49-135:65" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-recorded"/>
                </wstxns9:operand>
              </wstxns9:then>
            </wstxns9:caseItem>
            <wstxns9:caseItem wstxns9:type="CaseItem" localId="582" locator="136:5-137:81">
              <wstxns9:when wstxns9:type="Is" localId="583" locator="136:10-136:48">
                <wstxns9:isTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="585" locator="136:20-136:48" name="{http://hl7.org/fhir}MedicationAdministration"/>
                <wstxns9:operand wstxns9:type="OperandRef" localId="584" locator="136:10-136:15" name="choice"/>
              </wstxns9:when>
              <wstxns9:then wstxns9:type="FunctionRef" localId="590" locator="137:7-137:81" name="QICoreExtension">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="As" localId="586" locator="137:23-137:61" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="588" locator="137:33-137:61" name="{http://hl7.org/fhir}MedicationAdministration"/>
                    <wstxns9:operand wstxns9:type="OperandRef" localId="587" locator="137:23-137:28" name="choice"/>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="589" locator="137:64-137:80" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-recorded"/>
                </wstxns9:operand>
              </wstxns9:then>
            </wstxns9:caseItem>
            <wstxns9:caseItem wstxns9:type="CaseItem" localId="591" locator="138:5-139:75">
              <wstxns9:when wstxns9:type="Is" localId="592" locator="138:10-138:42">
                <wstxns9:isTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="594" locator="138:20-138:42" name="{http://hl7.org/fhir}MedicationDispense"/>
                <wstxns9:operand wstxns9:type="OperandRef" localId="593" locator="138:10-138:15" name="choice"/>
              </wstxns9:when>
              <wstxns9:then wstxns9:type="FunctionRef" localId="599" locator="139:7-139:75" name="QICoreExtension">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="As" localId="595" locator="139:23-139:55" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="597" locator="139:33-139:55" name="{http://hl7.org/fhir}MedicationDispense"/>
                    <wstxns9:operand wstxns9:type="OperandRef" localId="596" locator="139:23-139:28" name="choice"/>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="598" locator="139:58-139:74" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-recorded"/>
                </wstxns9:operand>
              </wstxns9:then>
            </wstxns9:caseItem>
            <wstxns9:caseItem wstxns9:type="CaseItem" localId="600" locator="140:5-141:70">
              <wstxns9:when wstxns9:type="Is" localId="601" locator="140:10-140:37">
                <wstxns9:isTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="603" locator="140:20-140:37" name="{http://hl7.org/fhir}Communication"/>
                <wstxns9:operand wstxns9:type="OperandRef" localId="602" locator="140:10-140:15" name="choice"/>
              </wstxns9:when>
              <wstxns9:then wstxns9:type="FunctionRef" localId="608" locator="141:7-141:70" name="QICoreExtension">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="As" localId="604" locator="141:23-141:50" strict="false">
                    <wstxns9:asTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="606" locator="141:33-141:50" name="{http://hl7.org/fhir}Communication"/>
                    <wstxns9:operand wstxns9:type="OperandRef" localId="605" locator="141:23-141:28" name="choice"/>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="607" locator="141:53-141:69" valueType="{urn:hl7-org:elm-types:r1}String" value="qicore-recorded"/>
                </wstxns9:operand>
              </wstxns9:then>
            </wstxns9:caseItem>
          </wstxns9:caseItem>
          <wstxns9:else wstxns9:type="As" localId="610" asType="{http://hl7.org/fhir}Extension">
            <wstxns9:operand wstxns9:type="Null" localId="609" locator="142:10-142:13"/>
          </wstxns9:else>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="611" locator="146:1-147:48" name="GetSexualOrientation" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="613" name="resource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="612" locator="146:47-146:60" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns38:s xmlns:wstxns38="urn:hl7-org:cql-annotations:r1" r="611">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetSexualOrientation(resource DomainResource):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="616">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="616">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>GetHIVExtension</s>
                                  <s>(</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="614">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>resource</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>, </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="615">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>'sexualorientation'</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>)</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns38:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="FunctionRef" localId="616" locator="147:3-147:48" name="GetHIVExtension">
          <wstxns9:operand>
            <wstxns9:operand wstxns9:type="OperandRef" localId="614" locator="147:19-147:26" name="resource"/>
            <wstxns9:operand wstxns9:type="Literal" localId="615" locator="147:29-147:47" valueType="{urn:hl7-org:elm-types:r1}String" value="sexualorientation"/>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="617" locator="149:1-150:45" name="GetGenderIdentity" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="619" name="resource">
            <wstxns9:operandTypeSpecifier wstxns9:type="NamedTypeSpecifier" localId="618" locator="149:44-149:57" name="{http://hl7.org/fhir}DomainResource"/>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns39:s xmlns:wstxns39="urn:hl7-org:cql-annotations:r1" r="617">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function GetGenderIdentity(resource DomainResource):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="622">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="622">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>GetHIVExtension</s>
                                  <s>(</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="620">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>resource</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>, </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="621">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>'genderidentity'</s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>)</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns39:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="FunctionRef" localId="622" locator="150:3-150:45" name="GetHIVExtension">
          <wstxns9:operand>
            <wstxns9:operand wstxns9:type="OperandRef" localId="620" locator="150:19-150:26" name="resource"/>
            <wstxns9:operand wstxns9:type="Literal" localId="621" locator="150:29-150:44" valueType="{urn:hl7-org:elm-types:r1}String" value="genderidentity"/>
          </wstxns9:operand>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="623" locator="154:1-161:5" name="QualifiedEncounters" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="626" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="624" locator="154:43-154:62">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="625" locator="154:48-154:61" name="{http://hl7.org/fhir}Encounter"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns40:s xmlns:wstxns40="urn:hl7-org:cql-annotations:r1" r="623">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s>/* Common Resource Qualifications */
</s>
                      <s>define function QualifiedEncounters(value List&lt;FHIR.Encounter>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="646">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="646">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="627">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="628">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>Encounter</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="629">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="629">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>(
      //planned | arrived | triaged | in-progress | onleave | finished | cancelled | entered-in-error | unknown
      </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="629">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="630">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="631">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="633">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="632">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>Encounter</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>.</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="633">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>status</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> </s>
                                                                <s>~</s>
                                                                <s> </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="634">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>'arrived'</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
      or </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="636">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="638">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="637">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>Encounter</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>.</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="638">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>status</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> </s>
                                                                <s>~</s>
                                                                <s> </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="639">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>'in-progress'</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
      or </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="641">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="643">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="642">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>Encounter</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="643">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>status</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="644">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'finished'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
    )</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns40:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="646" locator="155:3-161:5">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="627" locator="155:3-155:17" alias="Encounter">
              <wstxns9:expression wstxns9:type="OperandRef" localId="628" locator="155:3-155:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Or" localId="629" locator="156:5-161:5">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="Or" localId="630" locator="158:7-159:41">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="631" locator="158:7-158:34">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="635" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="633" locator="158:7-158:22" path="status" scope="Encounter"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="634" locator="158:26-158:34" valueType="{urn:hl7-org:elm-types:r1}String" value="arrived"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="636" locator="159:10-159:41">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="640" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="638" locator="159:10-159:25" path="status" scope="Encounter"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="639" locator="159:29-159:41" valueType="{urn:hl7-org:elm-types:r1}String" value="in-progress"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="641" locator="160:10-160:38">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="645" name="ToString" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="643" locator="160:10-160:25" path="status" scope="Encounter"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="644" locator="160:29-160:38" valueType="{urn:hl7-org:elm-types:r1}String" value="finished"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="647" locator="163:1-170:5" name="QualifiedConditions" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="650" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="648" locator="163:43-163:62">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="649" locator="163:48-163:61" name="{http://hl7.org/fhir}Condition"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns41:s xmlns:wstxns41="urn:hl7-org:cql-annotations:r1" r="647">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QualifiedConditions(value List&lt;FHIR.Condition>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="666">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="666">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="651">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="652">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>Condition</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="653">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="653">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="654">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(
      </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="654">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="657">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="11">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>FHIRHelpers</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="657">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>ToConcept</s>
                                                                      <s>(</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="656">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="655">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>Condition</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="656">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>clinicalStatus</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>)</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="658">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="12">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>FC</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="658">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>"active"</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
    )</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
    and </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="660">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>(
      </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="660">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="663">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="13">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>FHIRHelpers</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="663">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>ToConcept</s>
                                                                      <s>(</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="662">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="661">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>Condition</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="662">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>verificationStatus</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>)</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="664">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="14">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>FC</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="664">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>"confirmed"</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
    )</s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns41:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="666" locator="164:3-170:5">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="651" locator="164:3-164:17" alias="Condition">
              <wstxns9:expression wstxns9:type="OperandRef" localId="652" locator="164:3-164:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="And" localId="653" locator="165:5-170:5">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="654" locator="165:11-167:5">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="657" locator="166:7-166:53" name="ToConcept" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="656" locator="166:29-166:52" path="clinicalStatus" scope="Condition"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="ToConcept">
                    <wstxns9:operand wstxns9:type="CodeRef" localId="658" locator="166:57-166:67" name="active" libraryName="FC"/>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="660" locator="168:9-170:5">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="663" locator="169:7-169:57" name="ToConcept" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="662" locator="169:29-169:56" path="verificationStatus" scope="Condition"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="ToConcept">
                    <wstxns9:operand wstxns9:type="CodeRef" localId="664" locator="169:61-169:74" name="confirmed" libraryName="FC"/>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="667" locator="172:1-177:5" name="QualifiedProcedures" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="670" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="668" locator="172:43-172:62">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="669" locator="172:48-172:61" name="{http://hl7.org/fhir}Procedure"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns42:s xmlns:wstxns42="urn:hl7-org:cql-annotations:r1" r="667">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QualifiedProcedures(value List&lt;FHIR.Procedure>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="678">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="678">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="671">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="672">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>Procedure</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="673">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="673">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>(
      //preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown
      </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="673">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="675">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="674">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>Procedure</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>.</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="675">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>status</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s> </s>
                                                    <s>~</s>
                                                    <s> </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="676">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>'completed'</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
    )</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns42:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="678" locator="173:3-177:5">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="671" locator="173:3-173:17" alias="Procedure">
              <wstxns9:expression wstxns9:type="OperandRef" localId="672" locator="173:3-173:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Equivalent" localId="673" locator="174:5-177:5">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="FunctionRef" localId="677" name="ToString" libraryName="FHIRHelpers">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Property" localId="675" locator="176:7-176:22" path="status" scope="Procedure"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Literal" localId="676" locator="176:26-176:36" valueType="{urn:hl7-org:elm-types:r1}String" value="completed"/>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="679" locator="179:1-187:3" name="QualifiedObservations" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="682" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="680" locator="179:45-179:66">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="681" locator="179:50-179:65" name="{http://hl7.org/fhir}Observation"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns43:s xmlns:wstxns43="urn:hl7-org:cql-annotations:r1" r="679">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QualifiedObservations(value List&lt;FHIR.Observation>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="708">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="708">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="683">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="684">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>Observation</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
		</s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="685">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="685">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>(
      //registered | preliminary | final | amended | corrected | cancelled | entered-in-error | unknown
      </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="685">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="686">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="687">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="688">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="690">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="689">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>Observation</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="690">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>status</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s> </s>
                                                                      <s>~</s>
                                                                      <s> </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="691">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>'preliminary'</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>
      or </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="693">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="695">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="694">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>Observation</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="695">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>status</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s> </s>
                                                                      <s>~</s>
                                                                      <s> </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="696">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>'final'</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
			or </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="698">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="700">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="699">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>Observation</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>.</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="700">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>status</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> </s>
                                                                <s>~</s>
                                                                <s> </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="701">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>'amended'</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
			or </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="703">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="705">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="704">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>Observation</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="705">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>status</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="706">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'corrected'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
		)</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns43:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="708" locator="180:3-187:3">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="683" locator="180:3-180:19" alias="Observation">
              <wstxns9:expression wstxns9:type="OperandRef" localId="684" locator="180:3-180:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Or" localId="685" locator="181:3-187:3">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="Or" localId="686" locator="183:7-185:36">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Or" localId="687" locator="183:7-184:37">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Equivalent" localId="688" locator="183:7-183:40">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="FunctionRef" localId="692" name="ToString" libraryName="FHIRHelpers">
                            <wstxns9:operand>
                              <wstxns9:operand wstxns9:type="Property" localId="690" locator="183:7-183:24" path="status" scope="Observation"/>
                            </wstxns9:operand>
                          </wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Literal" localId="691" locator="183:28-183:40" valueType="{urn:hl7-org:elm-types:r1}String" value="preliminary"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Equivalent" localId="693" locator="184:10-184:37">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="FunctionRef" localId="697" name="ToString" libraryName="FHIRHelpers">
                            <wstxns9:operand>
                              <wstxns9:operand wstxns9:type="Property" localId="695" locator="184:10-184:27" path="status" scope="Observation"/>
                            </wstxns9:operand>
                          </wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Literal" localId="696" locator="184:31-184:37" valueType="{urn:hl7-org:elm-types:r1}String" value="final"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="698" locator="185:7-185:36">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="702" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="700" locator="185:7-185:24" path="status" scope="Observation"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="701" locator="185:28-185:36" valueType="{urn:hl7-org:elm-types:r1}String" value="amended"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="703" locator="186:7-186:38">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="707" name="ToString" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="705" locator="186:7-186:24" path="status" scope="Observation"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="706" locator="186:28-186:38" valueType="{urn:hl7-org:elm-types:r1}String" value="corrected"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="709" locator="189:1-200:5" name="QualifiedMedicationRequests" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="712" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="710" locator="189:51-189:78">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="711" locator="189:56-189:77" name="{http://hl7.org/fhir}MedicationRequest"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns44:s xmlns:wstxns44="urn:hl7-org:cql-annotations:r1" r="709">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QualifiedMedicationRequests(value List&lt;FHIR.MedicationRequest>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="736">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="736">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="713">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="714">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>MedicationRequest</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="715">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="715">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>(
      //active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown
      </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="715">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="716">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>(</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="716">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="717">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="719">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="718">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>MedicationRequest</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="719">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>status</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s> </s>
                                                                      <s>~</s>
                                                                      <s> </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="720">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>'active'</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>
        or </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="722">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="724">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="723">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>MedicationRequest</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="724">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>status</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s> </s>
                                                                      <s>~</s>
                                                                      <s> </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="725">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>'completed'</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
      )</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
        and </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="727">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>(
          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="727">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="730">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="729">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="728">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>MedicationRequest</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="729">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>doNotPerform</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s> is null</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>
          or </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="731">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="733">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="732">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>MedicationRequest</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>.</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value r="733">
                                                                          <s>
                                                                            <s>
                                                                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                              <value>
                                                                                <s>
                                                                                  <s>doNotPerform</s>
                                                                                </s>
                                                                              </value>
                                                                              <nil>false</nil>
                                                                              <globalScope>true</globalScope>
                                                                              <typeSubstituted>false</typeSubstituted>
                                                                            </s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="734">
                                                                    <s>
                                                                      <s> </s>
                                                                      <s>=</s>
                                                                      <s> </s>
                                                                      <s>false</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
        )</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
    )</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns44:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="736" locator="190:3-200:5">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="713" locator="190:3-190:25" alias="MedicationRequest">
              <wstxns9:expression wstxns9:type="OperandRef" localId="714" locator="190:3-190:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="And" localId="715" locator="191:5-200:5">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="Or" localId="716" locator="193:7-195:7">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="717" locator="193:8-193:42">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="721" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="719" locator="193:8-193:31" path="status" scope="MedicationRequest"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="720" locator="193:35-193:42" valueType="{urn:hl7-org:elm-types:r1}String" value="active"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="722" locator="194:12-194:49">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="726" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="724" locator="194:12-194:35" path="status" scope="MedicationRequest"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="725" locator="194:39-194:49" valueType="{urn:hl7-org:elm-types:r1}String" value="completed"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Or" localId="727" locator="196:13-199:9">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="IsNull" localId="730" locator="197:11-197:48">
                    <wstxns9:operand wstxns9:type="Property" localId="729" locator="197:11-197:40" path="doNotPerform" scope="MedicationRequest"/>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equal" localId="731" locator="198:14-198:51">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="735" name="ToBoolean" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="733" locator="198:14-198:43" path="doNotPerform" scope="MedicationRequest"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="734" locator="198:47-198:51" valueType="{urn:hl7-org:elm-types:r1}Boolean" value="false"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="737" locator="202:1-208:5" name="QualifiedMedicationStatements" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="740" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="738" locator="202:53-202:82">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="739" locator="202:58-202:81" name="{http://hl7.org/fhir}MedicationStatement"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns45:s xmlns:wstxns45="urn:hl7-org:cql-annotations:r1" r="737">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QualifiedMedicationStatements(value List&lt;FHIR.MedicationStatement>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="754">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="754">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="741">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="742">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>MedicationStatement</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="743">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="743">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>(
      // active | completed | entered-in-error | intended | stopped | on-hold | unknown | not-taken
      </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="743">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="744">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="746">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="745">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>MedicationStatement</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="746">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>status</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="747">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'active'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
      or </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="749">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="751">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="750">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>MedicationStatement</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="751">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>status</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="752">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'completed'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
    )</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns45:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="754" locator="203:3-208:5">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="741" locator="203:3-203:27" alias="MedicationStatement">
              <wstxns9:expression wstxns9:type="OperandRef" localId="742" locator="203:3-203:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Or" localId="743" locator="204:5-208:5">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="744" locator="206:7-206:43">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="748" name="ToString" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="746" locator="206:7-206:32" path="status" scope="MedicationStatement"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="747" locator="206:36-206:43" valueType="{urn:hl7-org:elm-types:r1}String" value="active"/>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="749" locator="207:10-207:49">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="753" name="ToString" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="751" locator="207:10-207:35" path="status" scope="MedicationStatement"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="752" locator="207:39-207:49" valueType="{urn:hl7-org:elm-types:r1}String" value="completed"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
      <wstxns9:def wstxns9:type="FunctionDef" localId="755" locator="210:1-217:5" name="QualifiedMedicationDispenses" context="Patient" accessLevel="Public">
        <wstxns9:operand>
          <wstxns9:operand wstxns9:type="OperandDef" localId="758" name="value">
            <wstxns9:operandTypeSpecifier wstxns9:type="ListTypeSpecifier" localId="756" locator="210:52-210:80">
              <wstxns9:elementType wstxns9:type="NamedTypeSpecifier" localId="757" locator="210:57-210:79" name="{http://hl7.org/fhir}MedicationDispense"/>
            </wstxns9:operandTypeSpecifier>
          </wstxns9:operand>
        </wstxns9:operand>
        <wstxns9:annotation>
          <wstxns9:annotation wstxns9:type="Annotation">
            <wstxns46:s xmlns:wstxns46="urn:hl7-org:cql-annotations:r1" r="755">
              <s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value>
                    <s>
                      <s></s>
                      <s>define function QualifiedMedicationDispenses(value List&lt;FHIR.MedicationDispense>):
  </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
                <s>
                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                  <value r="778">
                    <s>
                      <s>
                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                        <value r="778">
                          <s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="759">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="760">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>value</s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s> </s>
                                              <s>MedicationDispense</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value>
                                <s>
                                  <s>
    // preparation | in-progress | cancelled | on-hold | completed | entered-in-error | stopped | declined | unknown
    </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                            <s>
                              <name>{urn:hl7-org:cql-annotations:r1}s</name>
                              <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                              <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                              <value r="761">
                                <s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value>
                                      <s>
                                        <s>where </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                  <s>
                                    <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                    <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                    <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                    <value r="761">
                                      <s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>(
      </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value r="761">
                                            <s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="762">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="763">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="765">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="764">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>MedicationDispense</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>.</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="765">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>status</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> </s>
                                                                <s>~</s>
                                                                <s> </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="766">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>'preparation'</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s>
      or </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="768">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="770">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="769">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>MedicationDispense</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>.</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value r="770">
                                                                    <s>
                                                                      <s>
                                                                        <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                        <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                        <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                        <value>
                                                                          <s>
                                                                            <s>status</s>
                                                                          </s>
                                                                        </value>
                                                                        <nil>false</nil>
                                                                        <globalScope>true</globalScope>
                                                                        <typeSubstituted>false</typeSubstituted>
                                                                      </s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s> </s>
                                                                <s>~</s>
                                                                <s> </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="771">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>'in-progress'</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value>
                                                  <s>
                                                    <s>
      or </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                              <s>
                                                <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                <value r="773">
                                                  <s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="775">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="774">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>MedicationDispense</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>.</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value r="775">
                                                              <s>
                                                                <s>
                                                                  <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                                  <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                                  <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                                  <value>
                                                                    <s>
                                                                      <s>status</s>
                                                                    </s>
                                                                  </value>
                                                                  <nil>false</nil>
                                                                  <globalScope>true</globalScope>
                                                                  <typeSubstituted>false</typeSubstituted>
                                                                </s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value>
                                                        <s>
                                                          <s> </s>
                                                          <s>~</s>
                                                          <s> </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                    <s>
                                                      <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                      <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                      <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                      <value r="776">
                                                        <s>
                                                          <s>
                                                            <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                                            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                                            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                                            <value>
                                                              <s>
                                                                <s>'completed'</s>
                                                              </s>
                                                            </value>
                                                            <nil>false</nil>
                                                            <globalScope>true</globalScope>
                                                            <typeSubstituted>false</typeSubstituted>
                                                          </s>
                                                        </s>
                                                      </value>
                                                      <nil>false</nil>
                                                      <globalScope>true</globalScope>
                                                      <typeSubstituted>false</typeSubstituted>
                                                    </s>
                                                  </s>
                                                </value>
                                                <nil>false</nil>
                                                <globalScope>true</globalScope>
                                                <typeSubstituted>false</typeSubstituted>
                                              </s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                        <s>
                                          <name>{urn:hl7-org:cql-annotations:r1}s</name>
                                          <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
                                          <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
                                          <value>
                                            <s>
                                              <s>
    )</s>
                                            </s>
                                          </value>
                                          <nil>false</nil>
                                          <globalScope>true</globalScope>
                                          <typeSubstituted>false</typeSubstituted>
                                        </s>
                                      </s>
                                    </value>
                                    <nil>false</nil>
                                    <globalScope>true</globalScope>
                                    <typeSubstituted>false</typeSubstituted>
                                  </s>
                                </s>
                              </value>
                              <nil>false</nil>
                              <globalScope>true</globalScope>
                              <typeSubstituted>false</typeSubstituted>
                            </s>
                          </s>
                        </value>
                        <nil>false</nil>
                        <globalScope>true</globalScope>
                        <typeSubstituted>false</typeSubstituted>
                      </s>
                    </s>
                  </value>
                  <nil>false</nil>
                  <globalScope>true</globalScope>
                  <typeSubstituted>false</typeSubstituted>
                </s>
              </s>
            </wstxns46:s>
          </wstxns9:annotation>
        </wstxns9:annotation>
        <wstxns9:expression wstxns9:type="Query" localId="778" locator="211:3-217:5">
          <wstxns9:source>
            <wstxns9:source wstxns9:type="AliasedQuerySource" localId="759" locator="211:3-211:26" alias="MedicationDispense">
              <wstxns9:expression wstxns9:type="OperandRef" localId="760" locator="211:3-211:7" name="value"/>
            </wstxns9:source>
          </wstxns9:source>
          <wstxns9:where wstxns9:type="Or" localId="761" locator="213:5-217:5">
            <wstxns9:operand>
              <wstxns9:operand wstxns9:type="Or" localId="762" locator="214:7-215:50">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="763" locator="214:7-214:47">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="767" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="765" locator="214:7-214:31" path="status" scope="MedicationDispense"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="766" locator="214:35-214:47" valueType="{urn:hl7-org:elm-types:r1}String" value="preparation"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Equivalent" localId="768" locator="215:10-215:50">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="FunctionRef" localId="772" name="ToString" libraryName="FHIRHelpers">
                        <wstxns9:operand>
                          <wstxns9:operand wstxns9:type="Property" localId="770" locator="215:10-215:34" path="status" scope="MedicationDispense"/>
                        </wstxns9:operand>
                      </wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Literal" localId="771" locator="215:38-215:50" valueType="{urn:hl7-org:elm-types:r1}String" value="in-progress"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                </wstxns9:operand>
              </wstxns9:operand>
              <wstxns9:operand wstxns9:type="Equivalent" localId="773" locator="216:10-216:48">
                <wstxns9:operand>
                  <wstxns9:operand wstxns9:type="FunctionRef" localId="777" name="ToString" libraryName="FHIRHelpers">
                    <wstxns9:operand>
                      <wstxns9:operand wstxns9:type="Property" localId="775" locator="216:10-216:34" path="status" scope="MedicationDispense"/>
                    </wstxns9:operand>
                  </wstxns9:operand>
                  <wstxns9:operand wstxns9:type="Literal" localId="776" locator="216:38-216:48" valueType="{urn:hl7-org:elm-types:r1}String" value="completed"/>
                </wstxns9:operand>
              </wstxns9:operand>
            </wstxns9:operand>
          </wstxns9:where>
        </wstxns9:expression>
      </wstxns9:def>
    </wstxns9:def>
  </wstxns9:statements>
  <wstxns47:annotation xmlns:wstxns47="urn:hl7-org:elm:r1">
    <wstxns47:annotation wstxns47:type="CqlToElmInfo" translatorVersion="3.6.0" translatorOptions="EnableAnnotations,EnableLocators,DisableListDemotion,DisableListPromotion" signatureLevel="None"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToDateTime has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToDateTime has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToDateTime has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToDateTime has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToDateTime has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToDateTime has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="CqlToElmError" message="The function FHIRHelpers.ToString has multiple overloads and due to the SignatureLevel setting (None), the overload signature is not being included in the output. This may result in ambiguous function resolution at runtime, consider setting the SignatureLevel to Overloads or All to ensure that the output includes sufficient information to support correct overload selection at runtime." errorType="semantic" errorSeverity="warning"/>
    <wstxns47:annotation wstxns47:type="Annotation">
      <wstxns48:s xmlns:wstxns48="urn:hl7-org:cql-annotations:r1" r="755">
        <s>
          <s>
            <name>{urn:hl7-org:cql-annotations:r1}s</name>
            <declaredType>org.hl7.cql_annotations.r1.Narrative</declaredType>
            <scope>jakarta.xml.bind.JAXBElement$GlobalScope</scope>
            <value>
              <s>
                <s></s>
                <s>library HIVCommon</s>
              </s>
            </value>
            <nil>false</nil>
            <globalScope>true</globalScope>
            <typeSubstituted>false</typeSubstituted>
          </s>
        </s>
      </wstxns48:s>
    </wstxns47:annotation>
  </wstxns47:annotation>
</Library>
"
  } ]
}