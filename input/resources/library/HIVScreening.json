{
  "resourceType": "Library",
  "id": "HIVScreening",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.10.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": false
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  }, {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  } ],
  "url": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVScreening",
  "name": "HIVScreening",
  "title": "Library - HIV Screening",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "subjectCodeableConcept": {
    "coding": [ {
      "system": "http://hl7.org/fhir/ValueSet/subject-type",
      "version": "4.0.1",
      "code": "Patient",
      "display": "Patient"
    } ]
  },
  "date": "2021-05-12T00:00:00-07:00",
  "publisher": "National Association of Community Health Centers, Inc. (NACHC)",
  "contact": [ {
    "telecom": [ {
      "system": "url",
      "value": "https://www.nachc.org/"
    } ]
  } ],
  "description": "Logic library for implementation of the CDC HIV Screening Recommendation.",
  "useContext": [ {
    "code": {
      "system": "http://hl7.org/fhir/usage-context-type",
      "version": "4.0.1",
      "code": "focus",
      "display": "Clinical Focus"
    },
    "valueCodeableConcept": {
      "coding": [ {
        "system": "http://hl7.org/fhir/sid/icd-10-cm",
        "version": "2021",
        "code": "B20",
        "display": "Human immunodeficiency virus [HIV] disease"
      } ]
    }
  } ],
  "jurisdiction": [ {
    "coding": [ {
      "system": "http://hl7.org/fhir/ValueSet/iso3166-1-3",
      "version": "4.0.1",
      "code": "USA",
      "display": "United States of America"
    } ]
  } ],
  "purpose": "The purpose of this is to implement a Clinical Decision Support Workflow via CDS-Hooks to establish the CDC's HIV Screening Recommendation.",
  "usage": "This is to be used in conjunction with a patient-facing FHIR application.",
  "copyright": "Â© Copyright National Association of Community Health Centers, Inc. (NACHC) 2021+.",
  "topic": [ {
    "coding": [ {
      "system": "http://hl7.org/fhir/ValueSet/definition-topic",
      "version": "4.0.1",
      "code": "assessment",
      "display": "Assessment"
    } ],
    "text": "HIV Management"
  } ],
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library HC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVCommon"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Library HDE",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVDataElements"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMED-CT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Code system Observation Interpretation",
    "resource": "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system Extended Codes CodeSystem",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionVerificationStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-ver-status"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionClinicalStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-clinical"
  }, {
    "type": "depends-on",
    "display": "Code system NIDA",
    "resource": "https://cde.drugabuse.gov"
  }, {
    "type": "depends-on",
    "display": "Value set HIV-1 HIV 2 Ab Ag tests Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Observations Codes",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/pregnancy-observation-codes"
  }, {
    "type": "depends-on",
    "display": "Value set Gay Or Bisexual",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/GayOrBisexual"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Type Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Encounters Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Third Trimester Encounters Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
  }, {
    "type": "depends-on",
    "display": "Value set HIV infection as a condition Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Active Condition",
    "resource": "http://fhir.org/guides/cqf/common/ValueSet/active-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Prep Medication Prescriptions Codes Grouper",
    "resource": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/preexposure-prophylaxis-meds"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Diagnosis Codes Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Diagnosis Codes Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Transgender",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/Transgender"
  }, {
    "type": "depends-on",
    "display": "Value set Tuberculosis (Disorders) (ICD10CM)",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.451"
  }, {
    "type": "depends-on",
    "display": "Value set Drug Rehabilitation Codes",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
  } ],
  "parameter": [ {
    "name": "Reference Date",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "HIV Higher Prevalence States and Territories",
    "use": "in",
    "min": 0,
    "max": "*",
    "type": "string"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "There is an HIV test after the most recent positive pregnancy test",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Alive",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Gay or Bisexual",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Name",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Patient is between 13 and 64 years old",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Encounter",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Encounter"
  }, {
    "name": "Patient is Seeking Treatment for an STD",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Meets Inclusion Criteria",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "HIV Screening Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient has had an HIV Test",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active diagnosis of HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Never Tested Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Never Tested Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Never Tested Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Never Tested Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "No HIV Test in the last year",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "No HIV Test in the last three months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Male",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has sex with men",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "On pre-exposure prophylaxis",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "MSM Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "MSM Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "MSM Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "MSM Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "There is a positive pregnancy test in the last 40 weeks",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant but no HIV test during pregnancy",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Estimated Date of Delivery",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "First Eay of Third Trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "State of Residence Present in Patient Record",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Lives In State with Higher HIV Prevalence",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "There is an HIV test during the third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Resides a high prevalence state and has not had an HIV test in the third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Sex partner has HIV or uses intravenous drugs and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Intravenous drug user and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient who exchanges sex for money or drugs and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Multiple Sex Partners",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient with multiple partners and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient with a new sex partner during pregnancy and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "No state of residence on record and no HIV test done in third trimester",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnant Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Pregnant Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Pregnant Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Seeking STD Treatment Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Previous HIV Screening Test",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Over 3 Months has Passed Since Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Seeking STD Treatment Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Seeking STD Treatment Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Seeking STD Treatment Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Active Diagnosis of HCV During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active Diagnosis of Gonorrhea During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active Diagnosis of Chlamydia During Patient Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to a STD",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "DAST 10 Result Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "DAST 10 High Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "All DAST 10 Questions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Questions Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Patient Has High Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Sexual Partner having HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to exchanging sex for money or drugs",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Multiple Sex Partners since last screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Transgender",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Transgender Patient Sexually Active With Men",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is Documented Sexually Inactive",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Male and (Gay or Bisexual) Patient Not Documented Sexually Inactive",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at Moderate Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Over a Year has Passed Since Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Risk Level Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Risk Level Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Risk Level Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HivTestOnOrBeforeTbDiagnosis",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Active diagnosis of Tuberculosis?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Tuberculosis Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Tuberculosis Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Tuberculosis Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Tuberculosis Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HIV Test Condition",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "HIV Test Recommendation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HIV Test Rationale",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "HIV Test Indicator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Age",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Days Since Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Patient is Female",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at High Risk Due to Injection Drug Use",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at No Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is at Low Risk for HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "PatientEncounterPeriodStart",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "PatientEncounterPeriodEnd",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "name": "SeekingTreatmentDate",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "dateTime"
  }, {
    "name": "Patient is at First Prenatal Visit",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a sexually active MSM without HIV",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a sexually active MSM with Multiple Sex Partners",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient is a sexually active MSM who should be Screened Every 3 Months",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Latest DAST 10 Questions Date",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "Latest DAST 10 Screening Date",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "name": "DAST 10 Moderate Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Patient Has Moderate Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "DAST 10 Low Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Patient Has Low Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Has Low To Moderate Degree Of Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "DAST 10 No Risk Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Patient Has No Problems Related To Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Not Screened For Drug Abuse Or Screening Expired",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/pregnancy-observation-codes"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value", "interpretation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/pregnancy-observation-codes"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "76690-7",
        "display": "Sexual orientation"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "76690-7",
        "display": "Sexual orientation"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "value" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE1",
        "display": "Previous HIV Screening"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/preexposure-prophylaxis-meds"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication.reference" ]
  }, {
    "type": "Medication",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Medication" ],
    "mustSupport": [ "id" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value", "interpretation", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/hopena/hiv-cds/ValueSet/pregnancy-observation-codes"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "161714006",
        "display": "Estimated date of delivery (observable entity)"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "state" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "266974005",
        "display": "Human immunodeficiency virus risk lifestyle (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "228388006",
        "display": "Intravenous drug user (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "159798008",
        "display": "Exchanges sex for money or drugs (occupation)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "225516002",
        "display": "Multiple Sexual Contact (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "771458000",
        "display": "New sexual contact (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE1",
        "display": "Previous HIV Screening"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE4",
        "display": "Patient Diagnosed with HCV"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE4",
        "display": "Patient Diagnosed with HCV"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE6",
        "display": "Patient Diagnosed with Gonorrhea"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE6",
        "display": "Patient Diagnosed with Gonorrhea"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE7",
        "display": "Patient Diagnosed with Chlamydia"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-codes-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE7",
        "display": "Patient Diagnosed with Chlamydia"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "82667-7",
        "display": "Total Score [DAST-10]"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254039",
        "display": "Have you used drugs other than those required for medical reasons"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254057",
        "display": "Do you use more than one drug at a time"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254058",
        "display": "Are you always able to stop using drugs when you want to"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254061",
        "display": "Have you had blackouts or flashbacks as a result of drug use"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254063",
        "display": "Do you ever feel bad or guilty about your drug use"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254065",
        "display": "Does your spouse (or parents) ever complain about your involvement with drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254066",
        "display": "Have you neglected your family because of your use of drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254067",
        "display": "Have you engaged in illegal activities in order to obtain drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254070",
        "display": "Have you ever experienced withdrawal symptoms (felt sick) when you stopped taking drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "https://cde.drugabuse.gov",
        "code": "3254072",
        "display": "Have you had medical problems as a result of your drug use (e.g., memory loss, hepatitis, convulsions, bleeding, etc.)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE19",
        "display": "Sexual Activity - Partners HIV History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE19",
        "display": "Sexual Activity - Partners HIV History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE21",
        "display": "Sexual Activity - Exchanged for Sex"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE21",
        "display": "Sexual Activity - Exchanged for Sex"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE15",
        "display": "Sexual Activity - Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE18",
        "display": "Sexual Activity - Partners Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE1",
        "display": "Previous HIV Screening"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE15",
        "display": "Sexual Activity - Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE18",
        "display": "Sexual Activity - Partners Number of Partners"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "76691-5",
        "display": "Gender identity"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE11",
        "display": "Sexual Activity - Past Year"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE12",
        "display": "Sexual Activity - History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "472986005",
        "display": "Sexually active with men (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE14",
        "display": "Sexual Activity - Women"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE11",
        "display": "Sexual Activity - Past Year"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE12",
        "display": "Sexual Activity - History"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "472986005",
        "display": "Sexually active with men (finding)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE14",
        "display": "Sexual Activity - Women"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.451"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.F1.DE12",
        "display": "Injection Findings"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE8",
        "display": "Patient has used Injection Drugs"
      } ]
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.F1.DE12",
        "display": "Injection Findings"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE8",
        "display": "Patient has used Injection Drugs"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "effective", "value" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://fhir.org/guides/nachc/hiv-cds/CodeSystem/hiv-custom",
        "code": "NACHC.H1.DE9",
        "display": "Seeking STD Treatment"
      } ]
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "status", "id" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "161714006",
        "display": "Estimated date of delivery (observable entity)"
      } ]
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://snomed.info/sct",
        "code": "225516002",
        "display": "Multiple Sexual Contact (finding)"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code", "clinicalStatus", "verificationStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.451"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}